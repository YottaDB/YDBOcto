#################################################################
#								#
# Copyright (c) 2019-2021 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

stages:
  - build
  - docker
  - docs

variables:
  GOLANG_VERSION: 1.13.1

before_script:
  - export PATH=/usr/local/go/bin:$PATH
  - export JDBC_VERSION=42.2.6
  - wget -O go.tgz -q https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz
  - tar -C /usr/local -xzf go.tgz
  - rm go.tgz
  - go version

.make:
  stage: build
  artifacts:
    paths:
      - build/
    expire_in: 1 month
    when: always

.ubuntu:
  before_script:
    # Separate, non-interactive installation of tzdata required due to expect's dependency on libtcl8.6, which depends on tzdata.
    # If these steps aren't done, the build will open an interactive prompt to setup tzdata during apt-get install.
    - export DEBIAN_FRONTEND=noninteractive
    - export JDBC_VERSION=42.2.6
    - ln -fs /usr/share/zoneinfo/US/Eastern /etc/localtime
    - apt-get update -qq && apt-get install -y tzdata
    - dpkg-reconfigure --frontend noninteractive tzdata
    - apt-get install -y -qq --no-install-recommends build-essential clang clang-tidy clang-format-9 cmake bison flex libcmocka-dev python3 python3-pip python3-setuptools python3-wheel libreadline-dev git libconfig-dev libssl-dev postgresql-client postgresql xxd wget libgcrypt20-dev libgpgme-dev expect default-jdk ninja-build valgrind unixodbc odbc-postgresql tcsh shellcheck
    - pip3 install sphinxcontrib-fulltoc sphinx sphinx_rtd_theme
    - export PATH=/usr/local/go/bin:$PATH
    - wget -O go.tgz -q https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz
    - tar -C /usr/local -xzf go.tgz
    - rm go.tgz
    - go version

.rocky:
  before_script:
    - yum --enablerepo=powertools install -y libcmocka-devel gcc make clang clang-tools-extra cmake bison flex python3-pip readline-devel git libconfig-devel openssl-devel postgresql postgresql-server libgcrypt-devel gpgme-devel openssl expect java-11-openjdk-devel unzip valgrind unixODBC postgresql-odbc
    # Ninja is not available from the default repositories on Rocky Linux.
    # On CentOS 7 it is not available at all without going through third-party repositories.
    # Rather than setting that up, just install ninja from the GitHub releases page directly.
    - wget https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-linux.zip
    - unzip ninja-linux.zip
    - mv ninja /usr/local/bin/ninja
    # ShellCheck is not available on Rocky Linux; instructions here: https://github.com/koalaman/shellcheck/issues/1789
    - curl -LOf https://github.com/koalaman/shellcheck/releases/download/v0.7.2/shellcheck-v0.7.2.linux.x86_64.tar.xz
    - tar -C /usr/local/bin/ -xf shellcheck-v0.7.2.linux.x86_64.tar.xz --no-anchored 'shellcheck' --strip=1
    # Install Go
    - export PATH=/usr/local/go/bin:$PATH
    - export JDBC_VERSION=42.2.6
    - wget -O go.tgz -q https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz
    - tar -C /usr/local -xzf go.tgz
    - rm go.tgz
    - go version

commit-verify:
  image: ubuntu:18.04
  stage: build
  before_script:
    - apt-get update -qq && apt-get install -y -qq git wget gnupg
  script:
    # Copy commit gpg key verify script to build directory and execute
    - wget https://gitlab.com/YottaDB/DB/YDB/-/raw/master/ci/commit_verify.sh
    - chmod +x commit_verify.sh
    - ./commit_verify.sh tools/ci/needs_copyright.sh https://gitlab.com/YottaDB/DBMS/YDBOcto

make-ubuntu:
  image: yottadb/yottadb-base:latest-master
  extends:
    - .make
    - .ubuntu
  script:
    - ./tools/ci/build.sh "make-ubuntu" "none"

make-rocky:
  image: yottadb/yottadb-rocky-base:latest-master
  extends:
    - .make
    - .rocky
  script: ./tools/ci/build.sh "make-rocky" "none"

make-tls-ubuntu:
  image: yottadb/yottadb-base:latest-master
  extends:
    - .make
    - .ubuntu
  script:
    - ./tools/ci/install-tls.sh
    - ./tools/ci/build.sh "make-tls-ubuntu" "none"

make-tls-rocky:
  image: yottadb/yottadb-rocky-base:latest-master
  extends:
    - .make
    - .rocky
  script:
    - ./tools/ci/install-tls.sh
    - ./tools/ci/build.sh "make-tls-rocky" "none"

test-force-upgrade:
  # This job tests auto upgrade functionality of binary table/function definitions by forcing an auto upgrade
  image: yottadb/yottadb-base:latest-master
  extends:
    - .make
    - .ubuntu
  script:
    - ./tools/ci/build.sh "test-auto-upgrade" "force"

test-auto-upgrade:
  # This job tests that auto upgrade functionality of binary table/function definitions and plan definitions (physical plans,
  # xref plans, triggers etc.) works fine relative to a random older commit
  image: yottadb/yottadb-base:latest-master
  extends:
    - .make
    - .ubuntu
  script:
    # We use python3 in our tests, but previous commits require python2, and so we need it for the test-auto-upgrade job to pass
    - apt-get install -y -qq --no-install-recommends python2 python-is-python2
    - ./tools/ci/build.sh "test-auto-upgrade" "binary"

test-vista:
  # This job tests that various Octo tests run inside of a VistA instance
  image:
    name: yottadb/octo-vehu:latest-master
    entrypoint: [""] # override the default entry point, which starts VistA and Octo etc.
  extends:
    - .make
  script:
    - ./tools/ci/vistatest.sh

octo:
  image: docker:latest
  stage: docker
  before_script:
    - ""
  services:
    - docker:dind
  dependencies:
    - make-ubuntu
  script:
    - docker build --pull -t yottadb/octo:latest-master .
    # Suppress Docker warning advising against using the --password flag
    - echo -n $HUB_PASSWORD | docker login -u $HUB_USERNAME --password-stdin
    - docker push yottadb/octo:latest-master
  only:
    - master@YottaDB/DBMS/YDBOcto

vista:
  image: docker:latest
  stage: docker
  before_script:
    - ""
  services:
    - docker:dind
  script:
    - apk add git
    - ./tools/ci/vistabuild.sh
    - docker login -u $HUB_USERNAME -p $HUB_PASSWORD
    - docker push yottadb/octo-vehu:latest-master
  only:
    - master@YottaDB/DBMS/YDBOcto

pages:
  image: yottadb/yottadb-base:latest-master
  stage: docs
  extends: .ubuntu
  dependencies:
    - make-ubuntu
  script:
    - ./tools/ci/docs.sh
  artifacts:
    paths:
      - public
    expire_in: 1 month
    when: always

docs.yottadb.net:
  stage: docs
  trigger: YottaDB/DB/YDBDoc
  only:
    refs:
      - master
    changes:
      - doc/**/*
