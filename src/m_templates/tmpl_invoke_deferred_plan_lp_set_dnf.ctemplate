{}%
/****************************************************************
 *								*
 * Copyright (c) 2021 YottaDB LLC and/or its subsidiaries.	*
 * All rights reserved.						*
 *								*
 *	This source code contains the intellectual property	*
 *	of its copyright holder(s), and is made available	*
 *	under a license.  If you do not know the terms of	*
 *	the license, please stop and do not read further.	*
 *								*
 ****************************************************************/

#include "octo_types.h"

#include "physical_plan.h"
#include "template_helpers.h"

TEMPLATE(tmpl_invoke_deferred_plan_lp_set_dnf, InvokeDeferredPlanType invocation_type, LogicalPlan *plan, int dot_count) {
	if (LP_SET_OPERATION == plan->type) {
		LogicalPlan 	*lp_plans;

		GET_LP(lp_plans, plan, 1, LP_PLANS);
		TMPL(tmpl_invoke_deferred_plan_lp_set_dnf, invocation_type, lp_plans->v.lp_default.operand[0], dot_count);
		TMPL(tmpl_invoke_deferred_plan_lp_set_dnf, invocation_type, lp_plans->v.lp_default.operand[1], dot_count);
		return;
	}
	assert(LP_SELECT_QUERY == plan->type);	/* LP_SET_DNF plans cannot be LP_TABLE_VALUE */
	TMPL(tmpl_invoke_deferred_plan, invocation_type, plan, dot_count);
}
%{}
