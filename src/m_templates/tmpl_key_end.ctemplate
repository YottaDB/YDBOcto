{}%
/****************************************************************
 *								*
 * Copyright (c) 2019-2021 YottaDB LLC and/or its subsidiaries.	*
 * All rights reserved.						*
 *								*
 *	This source code contains the intellectual property	*
 *	of its copyright holder(s), and is made available	*
 *	under a license.  If you do not know the terms of	*
 *	the license, please stop and do not read further.	*
 *								*
 ****************************************************************/

#include "octo_types.h"
#include "logical_plan.h"

#include "template_helpers.h"

// Note: The output of this is sandwiched between `quit:(...)`
TEMPLATE(tmpl_key_end, SqlKey *key) {
	if (key->column) {
		SqlOptionalKeyword	*optional_end, *optional_endpoint;

		optional_end      = get_keyword(key->column, OPTIONAL_END);
		optional_endpoint = get_keyword(key->column, OPTIONAL_ENDPOINT);

		if (optional_end || optional_endpoint) {
			char			*end, *endpoint, *table_name;
			SqlValue		*value;
			SqlTable		*table;

			if (optional_end) {
				UNPACK_SQL_STATEMENT(value, optional_end->v, value);
				end = value->v.string_literal;
				table = key->table;
				UNPACK_SQL_STATEMENT(value, table->tableName, value);
				table_name = value->v.string_literal;
				TMPL(tmpl_emit_source, table, end, table_name, key->unique_id, MAX_KEY_COUNT, EmitSourceForm_Value);
			}

			if (optional_endpoint) {
				// Add an extra OR if we just emitted the stuff above so that we can add another condition
				if (optional_end)
					%{}!{}%

				UNPACK_SQL_STATEMENT(value, optional_endpoint->v, value);
				endpoint = value->v.string_literal;

				// Construct (cursor="")!(cursor]]endpoint)
				%{}({}%
				TMPL(tmpl_key, key);
				%{}="")!({}%
				TMPL(tmpl_key, key);
				%{}]]{{ endpoint }}){}%
			}
		return;
		}
	}
	TMPL(tmpl_key, key);
	%{}=""{}%
}
%{}
