#!/usr/bin/expect
#################################################################
#								#
# Copyright (c) 2020-2023 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

# Start bash with --noprofile as otherwise SUSE /etc/profile blindly overwrites $PATH causing below "octo" invocations to fail
spawn /bin/bash --noprofile

# Wait for shell prompt first. Allow for # or $ prompt. In the pipeline # is the prompt since it runs as the root user id.
expect -re "\[#\$] "
# Change shell prompt to something other than "$" or "#" as that is a substring of many YDB/Octo prompts
# and can cause incorrect match later when we wait for the shell prompt.
# Note: Changing the shell prompt to SHELL might seem easily achieved as follows.
#	send -- "PS1=SHELL\r"
#	expect -exact "SHELL"
# But that will not work because it is possible the "expect" matches the SHELL from the "PS1=SHELL" input.
# To avoid this, we first store the "SHELL" string in a variable and use that to set the prompt.
send -- "shellprompt=SHELL\r"
# Allow for # or $ prompt. In the pipeline # is the prompt since it runs as the root user id.
expect -re "\[#\$] "
send -- "PS1=\$shellprompt\r"
expect -exact "SHELL"

puts "# Start octo process OCTO1"
send -- "octo\r"
puts "# Wait for OCTO> prompt to appear."
expect "OCTO>"
puts "# Let process OCTO1 sit at Octo prompt. Now send <Ctrl-Z> to suspend this process."
send -- "\x1A\r"
expect "SHELL"

puts "# Start octo process OCTO2"
send -- "octo\r"
puts "# Wait for OCTO> prompt to appear"
expect "OCTO>"

puts "# Try CREATE/DROP TABLE/FUNCTION in process OCTO2. Should work fine in spite of process OCTO1 in OCTO> prompt"
send -- "\r"
expect "OCTO>"
send -- "CREATE TABLE dummyTABLE (id INTEGER PRIMARY KEY);\r"
expect "OCTO>"
send -- "CREATE FUNCTION dummyFUNCTION() RETURNS VARCHAR AS $$^%ydboctoversion;\r"
expect "OCTO>"
send -- "DROP TABLE dummyTABLE;\r"
expect "OCTO>"
send -- "DROP FUNCTION dummyFUNCTION();\r"
expect "OCTO>"
send -- "SELECT 123456;\r"
puts "# Verify the call succeeded"
expect "123456"
expect "OCTO>"
puts "# Exit from process OCTO2"
send -- "exit\r"
expect "SHELL"

puts "# Go back to process OCTO1"
send -- "fg\r"
puts "# Exit from process OCTO1"
send -- "exit\r"
expect "SHELL"

exit

