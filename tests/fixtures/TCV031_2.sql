#################################################################
#								#
# Copyright (c) 2023 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

-- Review comment -> https://gitlab.com/YottaDB/DBMS/YDBOcto/-/merge_requests/1244#note_1361146143
drop view if exists TCV031_2v3;
drop view if exists TCV031_2v2;
drop view if exists TCV031_2v1;
create view TCV031_2v1 as select * from names;
select count(*) from TCV031_2v1;
create view TCV031_2v2 as select * from TCV031_2v1 as n0 UNION ALL select * from TCV031_2v1 as n1;
select count(*) from TCV031_2v2;
create view TCV031_2v3 as select * from TCV031_2v2 as n0 UNION ALL select * from TCV031_2v2 as n1;
select count(*) from TCV031_2v3;

-- https://gitlab.com/YottaDB/DBMS/YDBOcto/-/merge_requests/1244#note_1359289433
DROP VIEW IF EXISTS TCV031_2v3;
DROP VIEW IF EXISTS TCV031_2v2;
DROP VIEW IF EXISTS TCV031_2v1;
CREATE VIEW TCV031_2v1 AS select id,lastname,firstname from names;
CREATE VIEW TCV031_2v2 AS select id,lastname as firstname,firstname as lastname from TCV031_2v1;
CREATE VIEW TCV031_2v3 AS select id,lastname as firstname,firstname as lastname from TCV031_2v2;
select count(*) from TCV031_2v2, TCV031_2v3 where TCV031_2v3.lastname = TCV031_2v2.firstname;
select count(*) from TCV031_2v2, TCV031_2v3 TCV031_2v1 where TCV031_2v1.firstname = TCV031_2v2.lastname;
drop view if exists TCV031_2v3;

-- https://gitlab.com/YottaDB/DBMS/YDBOcto/-/merge_requests/1244#note_1359263089
drop view if exists TCV031_2v2;
drop view if exists TCV031_2v1;
create view TCV031_2v1 as select 'a' as lastname union all select 'b';
create view TCV031_2v2 as select * from TCV031_2v1 union all select * from TCV031_2v1;
select * from TCV031_2v2 where lastname is NULL;
-- https://gitlab.com/YottaDB/DBMS/YDBOcto/-/merge_requests/1244#note_1359273313
drop view if exists TCV031_2v6;
drop view if exists TCV031_2v5;
drop view if exists TCV031_2v4;
drop view if exists TCV031_2v3;
drop view if exists TCV031_2v2;
drop view if exists TCV031_2v1;
create view TCV031_2v1 as select * from names union all select * from names;
create view TCV031_2v2 as select * from TCV031_2v1 union all select * from TCV031_2v1;
create view TCV031_2v3 as select * from TCV031_2v2 union all select * from TCV031_2v2;
create view TCV031_2v4 as select * from TCV031_2v3 union all select * from TCV031_2v3;
create view TCV031_2v5 as select * from TCV031_2v4 union all select * from TCV031_2v4;
create view TCV031_2v6 as select * from TCV031_2v5 union all select * from TCV031_2v5;
select * from TCV031_2v1 where lastname is NULL;
select * from TCV031_2v2 where lastname is NULL;
select * from TCV031_2v3 where lastname is NULL;
select * from TCV031_2v4 where lastname is NULL;
select * from TCV031_2v5 where lastname is NULL;
-- https://gitlab.com/YottaDB/DBMS/YDBOcto/-/merge_requests/1244#note_1359424947
drop view if exists namesV1;
drop table if exists namesV1;
create view namesV1 as select * from names;
-- Following query errors in Postgres since there is no alias for the subquery
-- select * from ((select * from namesV1) inner join namesV1 on TRUE);
select * from ((select * from namesV1) ref inner join namesV1 on TRUE);
drop view if exists namesV1;

-- One of the failed test queries generated by auto-mated views test in test_create_view.bats.in
drop view if exists TCV031_2v6;
drop view if exists TCV031_2v5;
drop view if exists TCV031_2v4;
drop view if exists TCV031_2v3;
drop view if exists TCV031_2v2;
drop view if exists TCV031_2v1;
create view TCV031_2v1 as select * from names as n1 natural join names as n2 natural join names as n3;
select count(*) from TCV031_2v1;
select * from TCV031_2v1;
create view TCV031_2v2 as select * from TCV031_2v1 as n0 UNION ALL select * from TCV031_2v1 as n1;
select count(*) from TCV031_2v2;
select * from TCV031_2v2;
create view TCV031_2v3 as select * from TCV031_2v2 as n0 UNION ALL select * from TCV031_2v2 as n1;
select count(*) from TCV031_2v3;
select * from TCV031_2v3;
create view TCV031_2v4 as select * from TCV031_2v3 as n0 INTERSECT ALL select * from TCV031_2v3 as n1;
select count(*) from TCV031_2v4;
select * from TCV031_2v4;
create view TCV031_2v5 as select * from TCV031_2v4 as n0 INTERSECT ALL select * from TCV031_2v4 as n1;
select count(*) from TCV031_2v5;
select * from TCV031_2v5;

-- One of the failed test queries generated by auto-mated views test in test_create_view.bats.in
drop view if exists TCV031_2v5;
drop view if exists TCV031_2v4;
drop view if exists TCV031_2v3;
drop view if exists TCV031_2v2;
drop view if exists TCV031_2v1;
create view TCV031_2v1 as select * from names as n1 natural join names as n2 natural join names as n3;
create view TCV031_2v2 as select * from TCV031_2v1 as n0 INTERSECT select * from TCV031_2v1 as n1;
create view TCV031_2v3 as select * from TCV031_2v2 as n0 INTERSECT select * from TCV031_2v2 as n1;
create view TCV031_2v4 as select * from TCV031_2v3 as n0 UNION select * from TCV031_2v3 as n1;
create view TCV031_2v5 as select * from TCV031_2v4 as n0 UNION select * from TCV031_2v4 as n1;
select * from TCV031_2v4 as n1 inner join TCV031_2v5 as n2 on n1.id = n2.id cross join TCV031_2v5 as n3 inner join TCV031_2v3 as n4 on n3.id = n4.id cross join TCV031_2v5 as n5;


drop view if exists TCV031_2v6;
drop view if exists TCV031_2v5;
drop view if exists TCV031_2v4;
drop view if exists TCV031_2v3;
drop view if exists TCV031_2v2;
drop view if exists TCV031_2v1;
drop view if exists TCV031_2v;
-- Fixed key optimization
create view TCV031_2v as select * from names where id=2;
create view TCV031_2v1 as select * from TCV031_2v union all select * from TCV031_2v;
create view TCV031_2v2 as select * from TCV031_2v1 union all select * from TCV031_2v1;
create view TCV031_2v3 as select * from TCV031_2v2 union all select * from TCV031_2v2;
create view TCV031_2v4 as select * from TCV031_2v3 union all select * from TCV031_2v3;
create view TCV031_2v5 as select * from TCV031_2v4 union all select * from TCV031_2v4;
create view TCV031_2v6 as select * from TCV031_2v5 union all select * from TCV031_2v5;
select * from TCV031_2v1 where lastname = 'Killer';
select * from TCV031_2v2 where lastname = 'Killer';
select * from TCV031_2v3 where lastname = 'Killer';
select * from TCV031_2v4 where lastname = 'Killer';
select * from TCV031_2v5 where lastname = 'Killer';

drop view if exists TCV031_2v6;
drop view if exists TCV031_2v5;
drop view if exists TCV031_2v4;
drop view if exists TCV031_2v3;
drop view if exists TCV031_2v2;
drop view if exists TCV031_2v1;
drop view if exists TCV031_2v;
-- Cross reference usage
create view TCV031_2v as select * from names where lastname = 'Cool';
create view TCV031_2v1 as select * from TCV031_2v union all select * from TCV031_2v;
create view TCV031_2v2 as select * from TCV031_2v1 union all select * from TCV031_2v1;
create view TCV031_2v3 as select * from TCV031_2v2 union all select * from TCV031_2v2;
create view TCV031_2v4 as select * from TCV031_2v3 union all select * from TCV031_2v3;
create view TCV031_2v5 as select * from TCV031_2v4 union all select * from TCV031_2v4;
create view TCV031_2v6 as select * from TCV031_2v5 union all select * from TCV031_2v5;
select * from TCV031_2v1 where lastname = 'Cool';
select * from TCV031_2v2 where lastname = 'Cool';
select * from TCV031_2v3 where lastname = 'Cool';
select * from TCV031_2v4 where lastname = 'Cool';
select * from TCV031_2v5 where lastname = 'Cool';

drop view if exists TCV031_2v6;
drop view if exists TCV031_2v5;
drop view if exists TCV031_2v4;
drop view if exists TCV031_2v3;
drop view if exists TCV031_2v2;
drop view if exists TCV031_2v1;
drop view if exists TCV031_2v;
-- Fixed column optimization
create view TCV031_2v(id1,firstname1,lastname1,id2,firstname2,lastname2) as select * from names as t1 cross join names as t2 where t1.id = t2.id;
create view TCV031_2v1 as select * from TCV031_2v union all select * from TCV031_2v;
create view TCV031_2v2 as select * from TCV031_2v1 union all select * from TCV031_2v1;
create view TCV031_2v3 as select * from TCV031_2v2 union all select * from TCV031_2v2;
create view TCV031_2v4 as select * from TCV031_2v3 union all select * from TCV031_2v3;
create view TCV031_2v5 as select * from TCV031_2v4 union all select * from TCV031_2v4;
create view TCV031_2v6 as select * from TCV031_2v5 union all select * from TCV031_2v5;
select * from TCV031_2v1;
select * from TCV031_2v2;
select * from TCV031_2v3;
select * from TCV031_2v4;
select * from TCV031_2v5;
drop view if exists TCV031_2v6;
drop view if exists TCV031_2v5;
drop view if exists TCV031_2v4;
drop view if exists TCV031_2v3;
drop view if exists TCV031_2v2;
drop view if exists TCV031_2v1;
drop view if exists TCV031_2v;

-- drop view if exists TCV031_2v6;
--drop view if exists TCV031_2v5;
--drop view if exists TCV031_2v4;
--drop view if exists TCV031_2v3;
--drop view if exists TCV031_2v2;
--drop view if exists TCV031_2v1;
--drop view if exists TCV031_2v;
-- Example from Octo doc which performs dnf boolean expression expansion
--create view TCV031_2v as select * from names where lastname = 'Cool' AND (firstname = 'Zero' OR lastname = 'Burn');
--create view TCV031_2v1 as select * from TCV031_2v union all select * from TCV031_2v;
--create view TCV031_2v2 as select * from TCV031_2v1 union all select * from TCV031_2v1;
--create view TCV031_2v3 as select * from TCV031_2v2 union all select * from TCV031_2v2;
--create view TCV031_2v4 as select * from TCV031_2v3 union all select * from TCV031_2v3;
--create view TCV031_2v5 as select * from TCV031_2v4 union all select * from TCV031_2v4;
--create view TCV031_2v6 as select * from TCV031_2v5 union all select * from TCV031_2v5;
--select * from TCV031_2v1;
--select * from TCV031_2v2;
--select * from TCV031_2v3;
--select * from TCV031_2v4;
--select * from TCV031_2v5;

