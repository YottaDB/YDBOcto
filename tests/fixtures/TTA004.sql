#################################################################
#								#
# Copyright (c) 2021 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

-- TTA004 : OCTO759 : TABLENAME.ASTERISK produces incorrect results when used with GROUP BY and LEFT JOIN : nullcharnames database

-- Below are queries from https://gitlab.com/YottaDB/DBMS/YDBOcto/-/issues/759#note_731897567 using the "nullcharnames" database
-- These are fancier queries generated by the TQG03 subtest that fail due to YDBOcto#759.
SELECT DISTINCT alias6.lastName,COUNT(alias1.*) FROM nullcharnames  LEFT JOIN (SELECT DISTINCT alias1.lastName, alias1.firstName FROM nullcharnames alias1 ORDER BY alias1.firstName, alias1.lastName) AS alias1 ON ((nullcharnames.firstName <= ALL (SELECT alias2.lastName FROM nullcharnames alias2 ORDER BY alias2.lastName LIMIT 1)) AND NOT (nullcharnames.id IS NULL) AND (nullcharnames.firstName = SOME (SELECT alias4.firstName FROM nullcharnames alias4 ORDER BY alias4.firstName LIMIT 1))) INNER JOIN (SELECT ALL alias6.firstName, alias6.lastName FROM nullcharnames alias6 ORDER BY alias6.firstName, alias6.lastName) AS alias6 ON (((nullcharnames.firstName IS NOT NULL)) OR ((nullcharnames.lastName IS NOT NULL))) WHERE (((5) + -(-4)) >= nullcharnames.id) GROUP BY alias1.*, alias6.lastName HAVING alias6.lastName NOT IN ('Cool') ORDER BY COUNT(alias1.*), alias6.lastName;
SELECT ALL alias1.lastName,COUNT(alias1.*) FROM nullcharnames  LEFT JOIN (SELECT DISTINCT MAX(ALL alias1.lastName) as lastName, alias1.firstName FROM nullcharnames alias1 GROUP BY alias1.firstName) AS alias1 ON (((nullcharnames.lastName IS NULL) AND NOT (nullcharnames.id IS NOT NULL)) OR NOT (nullcharnames.firstName IS NULL)) WHERE nullcharnames.id NOT IN (5, 5, 1, 4, 5, 2, 3) GROUP BY alias1.*, alias1.lastName HAVING COUNT(DISTINCT alias1.*) NOT IN (1);
SELECT DISTINCT alias1.firstName,COUNT(alias1.*) FROM nullcharnames  LEFT JOIN (SELECT ALL alias1.firstName FROM nullcharnames alias1 ORDER BY alias1.firstName) AS alias1 ON (((nullcharnames.lastName IS NULL))) WHERE (NOT ('Acid' IS NULL) OR NOT (nullcharnames.firstName IS NULL) OR (4 != nullcharnames.id)) GROUP BY alias1.*, alias1.firstName ORDER BY COUNT(alias1.*), alias1.firstName;

