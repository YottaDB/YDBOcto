# Run crosscheck on TAF06.sql
# Remove Octo M plans (_ydboctoP*.*) from the crosscheck run as the _ydboctoP*.m file names can differ
# when run through the JDBC driver (that uses the extended query protocol and which the crosscheck
# can invoke randomly) due to the addition of a LIMIT keyword (see YDBOcto@48c0b208 for more details)
# This can cause issues with a deterministic reference file as that includes lines from this M plan.
# Combine queries from TAF06.sql and TAF06_octo.sql into one query file TAF06all.sql
# Run queries in TAF06all.sql using octo (for deterministic M plan names) [load_fixture TAF06all.sql]
OCTO> #################################################################
#								#
# Copyright (c) 2024 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

-- TAF06 : OCTO617 : Test MAX(COL) and MIN(COL) is optimized in various cases and not in various other cases

-- First check queries that we expect to be optimized
select max(id) from names;
max
5
(1 row)
OCTO> select min(id) from names;
min
0
(1 row)
OCTO> select 5 + min(id) from names;
???
5
(1 row)
OCTO> select 5 + min(n1.id), 10 + max(n1.id), max(n1.id) - min(n1.id) from names n1;
???|???|???
5|15|5
(1 row)
OCTO> -- Then check queries that we don't expect to be optimized

-- Query with JOIN
select max(n1.id) from names n1, names n2;
max
5
(1 row)
OCTO> -- Query with WHERE
select max(id) from names where id < 4;
max
3
(1 row)
OCTO> -- Query with GROUP BY
select max(id) from names group by id;
max
0
1
2
3
4
5
(6 rows)
OCTO> select max(id) from names group by firstname;
max
1
4
3
5
2
(5 rows)
OCTO> -- Query with HAVING
select max(id) from names having min(id) > 6;
max
(0 rows)
OCTO> -- Query with NO aggregate function
select firstname from names;
firstname
Zero
Acid
Cereal
Lord
Joey
Zero
(6 rows)
OCTO> -- Query with aggregate function usage that is not MIN or MAX
select sum(id) from names;
sum
15
(1 row)
OCTO> -- Query with aggregate functions that are not simple column references or literals
select min(id+2) from names;
min
2
(1 row)
OCTO> select min(3*2) from names;
min
6
(1 row)
OCTO> select 1 from names order by max(id+2);
???
1
(1 row)
OCTO> -- Additionally verify that ORDER BY clause is NOT removed even if YDBOcto#617 optimization can be applied by
-- verifying that in the emitted M plan there is a FOR loop for the ORDER BY in this case
-- See https://gitlab.com/YottaDB/DBMS/YDBOcto/-/issues/617#note_2151071683 for why ORDER BY is NOT removed
select min(id) from names order by max(id);
min
0
(1 row)
OCTO> select min(2) from names order by max(id);
min
2
(1 row)
OCTO> select min(id) from names order by max(2);
min
0
(1 row)
OCTO> #################################################################
#								#
# Copyright (c) 2024 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

-- TAF06 : OCTO617 : Test YDBOcto#617 optimization for various edge cases

-- Note: These are queries that use OCTO specific keywords and so are not kept in TAF06.sql (which is used against Postgres too).

-- Test that empty table works
create table TAF06octoa (id integer primary key);
CREATE TABLE
OCTO> select min(id) is null from TAF06octoa;
???
t
(1 row)
OCTO> select max(id) is null from TAF06octoa;
???
t
(1 row)
OCTO> -- Test that STARTINCLUDE keyword is NOT optimized
create table TAF06octob (id integer primary key START 4 STARTINCLUDE);
CREATE TABLE
OCTO> select min(id) is null from TAF06octob;
???
t
(1 row)
OCTO> select max(id) is null from TAF06octob;
???
t
(1 row)
OCTO> -- Test that END keyword is NOT optimized
create table TAF06octoc (id integer primary key END "'0");
CREATE TABLE
OCTO> select min(id) is null from TAF06octoc;
???
t
(1 row)
OCTO> select max(id) is null from TAF06octoc;
???
t
(1 row)
OCTO> -- Test that START and ENDPOINT keywords are optimized for INTEGER type
create table TAF06octod (id integer primary key START 4 ENDPOINT 8) GLOBAL "^TAF06octod";
CREATE TABLE
OCTO> select min(id) from TAF06octod;
min
5
(1 row)
OCTO> select max(id) from TAF06octod;
max
8
(1 row)
OCTO> -- Test START and ENDPOINT keywords for INTEGER type column that map to a table with NO data
create table TAF06octod2 (id integer primary key START 10 ENDPOINT 12) GLOBAL "^TAF06octod";
CREATE TABLE
OCTO> select min(id) is null from TAF06octod2;
???
t
(1 row)
OCTO> select max(id) is null from TAF06octod2;
???
t
(1 row)
OCTO> -- Test that START and ENDPOINT keywords are optimized for VARCHAR type
create table TAF06octoe (id varchar primary key START '"d"' ENDPOINT '"h"') GLOBAL "^TAF06octoe";
CREATE TABLE
OCTO> select min(id) from TAF06octoe;
min
e
(1 row)
OCTO> select max(id) from TAF06octoe;
max
h
(1 row)
OCTO> -- Test START and ENDPOINT keywords for VARCHAR type column that map to a table with NO data
create table TAF06octoe2 (id varchar primary key START '"j"' ENDPOINT '"l"') GLOBAL "^TAF06octoe";
CREATE TABLE
OCTO> select min(id) is null from TAF06octoe2;
???
t
(1 row)
OCTO> select max(id) is null from TAF06octoe2;
???
t
(1 row)
OCTO> ----------------------------------------------------------------------------------------------------
-- Note: The below READWRITE and READONLY tests are done on an empty table more so to verify from
-- the emitted M plan that the optimization is enabled or disabled as appropriate. The actual query
-- results are not checked as it is not considered worth the effort (requires adding data into the tables).
----------------------------------------------------------------------------------------------------
-- Test INTEGER typed key column on READWRITE table
create table TAF06octorw1 (id integer primary key);
CREATE TABLE
OCTO> select min(id) from TAF06octorw1;
min

(1 row)
OCTO> select max(id) from TAF06octorw1;
max

(1 row)
OCTO> -- Test NUMERIC typed key column on READWRITE table
create table TAF06octorw2 (id numeric primary key);
CREATE TABLE
OCTO> select min(id) from TAF06octorw2;
min

(1 row)
OCTO> select max(id) from TAF06octorw2;
max

(1 row)
OCTO> -- Test VARCHAR typed key column on READWRITE table
create table TAF06octorw3 (id varchar primary key);
CREATE TABLE
OCTO> select min(id) from TAF06octorw3;
min

(1 row)
OCTO> select max(id) from TAF06octorw3;
max

(1 row)
OCTO> -- Test BOOLEAN typed key column on READWRITE table
create table TAF06octorw4 (id boolean primary key);
CREATE TABLE
[ERROR]: ERR_MISTYPED_FUNCTION: Function min cannot be invoked with a parameter of type BOOLEAN
LINE 121:1: select min(id) from TAF06octorw4;
                   ^^^
OCTO> select min(id) from TAF06octorw4;
[ERROR]: ERR_MISTYPED_FUNCTION: Function max cannot be invoked with a parameter of type BOOLEAN
LINE 122:1: select max(id) from TAF06octorw4;
                   ^^^
OCTO> select max(id) from TAF06octorw4;
OCTO> -- Test DATE typed key column on READWRITE table
create table TAF06octorw5 (id date primary key);
CREATE TABLE
OCTO> select min(id) from TAF06octorw5;
min

(1 row)
OCTO> select max(id) from TAF06octorw5;
max

(1 row)
OCTO> -- Test TIME typed key column on READWRITE table
create table TAF06octorw6 (id time primary key);
CREATE TABLE
OCTO> select min(id) from TAF06octorw6;
min

(1 row)
OCTO> select max(id) from TAF06octorw6;
max

(1 row)
OCTO> -- Test TIME WITH TIME ZONE typed key column on READWRITE table
create table TAF06octorw7 (id time with time zone primary key);
CREATE TABLE
OCTO> select min(id) from TAF06octorw7;
min

(1 row)
OCTO> select max(id) from TAF06octorw7;
max

(1 row)
OCTO> -- Test TIMESTAMP typed key column on READWRITE table
create table TAF06octorw8 (id timestamp primary key);
CREATE TABLE
OCTO> select min(id) from TAF06octorw8;
min

(1 row)
OCTO> select max(id) from TAF06octorw8;
max

(1 row)
OCTO> -- Test TIMESTAMP WITH TIME ZONE typed key column on READWRITE table
create table TAF06octorw9 (id timestamp with time zone primary key);
CREATE TABLE
OCTO> select min(id) from TAF06octorw9;
min

(1 row)
OCTO> select max(id) from TAF06octorw9;
max

(1 row)
OCTO> -- Test INTEGER typed key column on READONLY table
create table TAF06octoro1 (id integer primary key) READONLY;
CREATE TABLE
OCTO> select min(id) from TAF06octoro1;
min

(1 row)
OCTO> select max(id) from TAF06octoro1;
max

(1 row)
OCTO> -- Test NUMERIC typed key column on READONLY table
create table TAF06octoro2 (id numeric primary key) READONLY;
CREATE TABLE
OCTO> select min(id) from TAF06octoro2;
min

(1 row)
OCTO> select max(id) from TAF06octoro2;
max

(1 row)
OCTO> -- Test VARCHAR typed key column on READONLY table
create table TAF06octoro3 (id varchar primary key) READONLY;
CREATE TABLE
OCTO> select min(id) from TAF06octoro3;
min

(1 row)
OCTO> select max(id) from TAF06octoro3;
max

(1 row)
OCTO> -- Test BOOLEAN typed key column on READONLY table
create table TAF06octoro4 (id boolean primary key) READONLY;
CREATE TABLE
[ERROR]: ERR_MISTYPED_FUNCTION: Function min cannot be invoked with a parameter of type BOOLEAN
LINE 166:1: select min(id) from TAF06octoro4;
                   ^^^
OCTO> select min(id) from TAF06octoro4;
[ERROR]: ERR_MISTYPED_FUNCTION: Function max cannot be invoked with a parameter of type BOOLEAN
LINE 167:1: select max(id) from TAF06octoro4;
                   ^^^
OCTO> select max(id) from TAF06octoro4;
OCTO> -- Test DATE typed key column on READONLY table
create table TAF06octoro5 (id date primary key) READONLY;
CREATE TABLE
OCTO> select min(id) from TAF06octoro5;
min

(1 row)
OCTO> select max(id) from TAF06octoro5;
max

(1 row)
OCTO> -- Test TIME typed key column on READONLY table
create table TAF06octoro6 (id time primary key) READONLY;
CREATE TABLE
OCTO> select min(id) from TAF06octoro6;
min

(1 row)
OCTO> select max(id) from TAF06octoro6;
max

(1 row)
OCTO> -- Test TIME WITH TIME ZONE typed key column on READONLY table
create table TAF06octoro7 (id time with time zone primary key) READONLY;
CREATE TABLE
OCTO> select min(id) from TAF06octoro7;
min

(1 row)
OCTO> select max(id) from TAF06octoro7;
max

(1 row)
OCTO> -- Test TIMESTAMP typed key column on READONLY table
create table TAF06octoro8 (id timestamp primary key) READONLY;
CREATE TABLE
OCTO> select min(id) from TAF06octoro8;
min

(1 row)
OCTO> select max(id) from TAF06octoro8;
max

(1 row)
OCTO> -- Test TIMESTAMP WITH TIME ZONE typed key column on READONLY table
create table TAF06octoro9 (id timestamp with time zone primary key) READONLY;
CREATE TABLE
OCTO> select min(id) from TAF06octoro9;
min

(1 row)
OCTO> select max(id) from TAF06octoro9;
max

(1 row)
OCTO> -- Test of https://gitlab.com/YottaDB/DBMS/YDBOcto/-/issues/617#note_2151071683
-- The below query expects an error and hence is not in TAF06.sql (which is run using crosscheck)
select 1 from names n1 order by (select max(n1.id) from names n2);
[ERROR]: ERR_SUBQUERY_MULTIPLE_ROWS: More than one row returned by a subquery used as an expression
OCTO> 
# Find out which queries had M plans with $ORDER for loops. Those are the non-optimized queries.
---------------------------------------------------------
 select min(3*2) from names;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"names","id")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"names","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"names","id")="")  DO
---------------------------------------------------------
 select max(id) is null from TAF06octoc;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octoc","id")=$ORDER(^%ydboctoDCJfxFYGr7tjmawAElvvoK9(%ydboctocursor(cursorId,"keys",1,"taf06octoc","id"))) QUIT:('0)  DO
---------------------------------------------------------
 select max(n1.id) from names n1, names n2;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"names","id")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"names","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"names","id")="")  DO
   . FOR  SET %ydboctocursor(cursorId,"keys",2,"names","id")=$ORDER(^names(%ydboctocursor(cursorId,"keys",2,"names","id"))) QUIT:(%ydboctocursor(cursorId,"keys",2,"names","id")="")  DO
---------------------------------------------------------
 select min(id) from TAF06octorw8;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDuYVkJpaZP0DNIk5e0qUE4E(""),1)
---------------------------------------------------------
 select max(id) from TAF06octorw3;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDpOo5MKPkLv5Rzk06ggsD7I(""),-1)
---------------------------------------------------------
 select max(id) is null from TAF06octoe2;
---------------------------------------------------------
   IF '$DATA(^TAF06octoe(%ydboctoexpr)) SET %ydboctoexpr=$ORDER(^TAF06octoe("l"),-1)
---------------------------------------------------------
 select 5 + min(id) from names;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^names(""),1)
---------------------------------------------------------
 select max(id) from names having min(id) > 6;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"names","id")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"names","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"names","id")="")  DO
---------------------------------------------------------
 select min(id) from TAF06octoro1;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDxsQS6GiRRH21J860URGG5H(""),1)
---------------------------------------------------------
 select max(id) from TAF06octoro3;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDgreJoixMwvY5HA3RQdMO61(""),-1)
---------------------------------------------------------
 select min(id) from names;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^names(""),1)
---------------------------------------------------------
 select firstname from names;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"names","id")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"names","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"names","id")="")  DO
---------------------------------------------------------
 select max(id) from TAF06octod;
---------------------------------------------------------
   IF '$DATA(^TAF06octod(%ydboctoexpr)) SET %ydboctoexpr=$ORDER(^TAF06octod(8),-1)
---------------------------------------------------------
 select min(id) from TAF06octorw6;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDDcGgPIRbf8LQjJaaekHQ6A(""),1)
---------------------------------------------------------
 select max(id) is null from TAF06octob;
---------------------------------------------------------
   DO:$DATA(^%ydboctoDsz9sfEaxFOdLECmoHQ4LK3(%ydboctocursor(cursorId,"keys",1,"taf06octob","id")))  FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octob","id")=$ORDER(^%ydboctoDsz9sfEaxFOdLECmoHQ4LK3(%ydboctocursor(cursorId,"keys",1,"taf06octob","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"taf06octob","id")="")  DO
---------------------------------------------------------
 select min(id) from TAF06octoe;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^TAF06octoe("d"),1)
---------------------------------------------------------
 select max(id) from names group by firstname;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"names","id")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"names","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"names","id")="")  DO
---------------------------------------------------------
 select min(id) from TAF06octoro7;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octoro7","id")=$ORDER(^%ydboctoDXcZgIcte1TdRhgopYcRTHJ(%ydboctocursor(cursorId,"keys",1,"taf06octoro7","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"taf06octoro7","id")="")  DO
---------------------------------------------------------
 select max(id) from TAF06octoro8;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octoro8","id")=$ORDER(^%ydboctoDhNpR0DIK6FfVN7K0zgcH65(%ydboctocursor(cursorId,"keys",1,"taf06octoro8","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"taf06octoro8","id")="")  DO
---------------------------------------------------------
 select min(id) is null from TAF06octod2;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^TAF06octod(10),1)
---------------------------------------------------------
 select min(id) is null from TAF06octob;
---------------------------------------------------------
   DO:$DATA(^%ydboctoDsz9sfEaxFOdLECmoHQ4LK3(%ydboctocursor(cursorId,"keys",1,"taf06octob","id")))  FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octob","id")=$ORDER(^%ydboctoDsz9sfEaxFOdLECmoHQ4LK3(%ydboctocursor(cursorId,"keys",1,"taf06octob","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"taf06octob","id")="")  DO
---------------------------------------------------------
 select min(id) is null from TAF06octoe2;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^TAF06octoe("j"),1)
---------------------------------------------------------
 select max(id) from TAF06octorw7;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoD74KzcaEClF6928qNB7hcGJ(""),-1)
---------------------------------------------------------
 select min(id) from TAF06octod;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^TAF06octod(4),1)
---------------------------------------------------------
 select 5 + min(n1.id), 10 + max(n1.id), max(n1.id) - min(n1.id) from names n1;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^names(""),1)
   SET %ydboctoexpr=$ORDER(^names(""),-1)
   SET %ydboctoexpr=$ORDER(^names(""),-1)
   SET %ydboctoexpr=$ORDER(^names(""),1)
---------------------------------------------------------
 select min(id) from TAF06octorw7;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoD74KzcaEClF6928qNB7hcGJ(""),1)
---------------------------------------------------------
 select min(id) from TAF06octorw5;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDUsWqoaKZaP1LDYNNkIreKI(""),1)
---------------------------------------------------------
 select min(id) from TAF06octoro8;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octoro8","id")=$ORDER(^%ydboctoDhNpR0DIK6FfVN7K0zgcH65(%ydboctocursor(cursorId,"keys",1,"taf06octoro8","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"taf06octoro8","id")="")  DO
---------------------------------------------------------
 select max(id) is null from TAF06octoa;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDBgOgTI3RL8mBqreQanfGAC(""),-1)
---------------------------------------------------------
 select max(id) from TAF06octoro9;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octoro9","id")=$ORDER(^%ydboctoDcIy3vJIFd2uYKp26K5FqJ4(%ydboctocursor(cursorId,"keys",1,"taf06octoro9","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"taf06octoro9","id")="")  DO
---------------------------------------------------------
 select min(id) from names order by max(2);
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^names(""),1)
   SET %ydboctoexpr=$ORDER(^names(""),1)
   SET %ydboctoi(1)="" FOR  DO:$DATA(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)))  SET %ydboctoi(1)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)),1)  QUIT:(%ydboctoi(1)="")
   . SET %ydboctoi(2)="" FOR  SET %ydboctoi(2)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1),%ydboctoi(2))) QUIT:(%ydboctoi(2)="")  DO
---------------------------------------------------------
 select min(id+2) from names;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"names","id")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"names","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"names","id")="")  DO
---------------------------------------------------------
 select max(id) from TAF06octorw5;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDUsWqoaKZaP1LDYNNkIreKI(""),-1)
---------------------------------------------------------
 select max(id) from TAF06octoro5;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octoro5","id")=$ORDER(^%ydboctoDyuXAtCfuFBpbfcr84PGXA9(%ydboctocursor(cursorId,"keys",1,"taf06octoro5","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"taf06octoro5","id")="")  DO
---------------------------------------------------------
 select min(2) from names order by max(id);
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^names(""),-1)
   SET %ydboctoexpr=$ORDER(^names(""),1)
   SET %ydboctoi(1)="" FOR  DO:$DATA(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)))  SET %ydboctoi(1)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)),1)  QUIT:(%ydboctoi(1)="")
   . SET %ydboctoi(2)="" FOR  SET %ydboctoi(2)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1),%ydboctoi(2))) QUIT:(%ydboctoi(2)="")  DO
---------------------------------------------------------
 -- Additionally verify that ORDER BY clause is NOT removed even if YDBOcto#617 optimization can be applied by
 -- verifying that in the emitted M plan there is a FOR loop for the ORDER BY in this case
 -- See https://gitlab.com/YottaDB/DBMS/YDBOcto/-/issues/617#note_2151071683 for why ORDER BY is NOT removed
 select min(id) from names order by max(id);
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^names(""),-1)
   SET %ydboctoexpr=$ORDER(^names(""),1)
   SET %ydboctoi(1)="" FOR  DO:$DATA(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)))  SET %ydboctoi(1)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)),1)  QUIT:(%ydboctoi(1)="")
   . SET %ydboctoi(2)="" FOR  SET %ydboctoi(2)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1),%ydboctoi(2))) QUIT:(%ydboctoi(2)="")  DO
---------------------------------------------------------
 select sum(id) from names;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"names","id")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"names","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"names","id")="")  DO
---------------------------------------------------------
 select min(id) from TAF06octorw2;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDbYDLqNkmdKzB8tvrdQYwGJ(""),1)
---------------------------------------------------------
 select min(id) from TAF06octoro3;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDgreJoixMwvY5HA3RQdMO61(""),1)
---------------------------------------------------------
 select min(id) from TAF06octoro5;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octoro5","id")=$ORDER(^%ydboctoDyuXAtCfuFBpbfcr84PGXA9(%ydboctocursor(cursorId,"keys",1,"taf06octoro5","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"taf06octoro5","id")="")  DO
---------------------------------------------------------
 select min(id) from TAF06octorw1;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDWUxxKvwhIRqfvpZXjulwEB(""),1)
---------------------------------------------------------
 select max(id) from names;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^names(""),-1)
---------------------------------------------------------
 select max(id) from TAF06octorw9;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDSzNKOtBFu20jKdnebhlt32(""),-1)
---------------------------------------------------------
 select max(id) from TAF06octoe;
---------------------------------------------------------
   IF '$DATA(^TAF06octoe(%ydboctoexpr)) SET %ydboctoexpr=$ORDER(^TAF06octoe("h"),-1)
---------------------------------------------------------
 select min(id) is null from TAF06octoc;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octoc","id")=$ORDER(^%ydboctoDCJfxFYGr7tjmawAElvvoK9(%ydboctocursor(cursorId,"keys",1,"taf06octoc","id"))) QUIT:('0)  DO
---------------------------------------------------------
 select max(id) from TAF06octorw8;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDuYVkJpaZP0DNIk5e0qUE4E(""),-1)
---------------------------------------------------------
 select max(id) from names where id < 4;
---------------------------------------------------------
   IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0,1)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^names(%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)'<%ydboctozkeyfix(1,0,1))  DO
   . SET %ydboctocursor(cursorId,"keys",1,"names","id")=%ydboctozkeyfix(1,0) IF '$ZYISSQLNULL(%ydboctocursor(cursorId,"keys",1,"names","id")) IF $DATA(^names(%ydboctocursor(cursorId,"keys",1,"names","id"))) DO
---------------------------------------------------------
 select min(id) from TAF06octorw3;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDpOo5MKPkLv5Rzk06ggsD7I(""),1)
---------------------------------------------------------
 select min(id) from TAF06octorw9;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDSzNKOtBFu20jKdnebhlt32(""),1)
---------------------------------------------------------
 select 1 from names n1 order by (select max(n1.id) from names n2);
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^names(""),-1)
   SET %ydboctoi(1)="" FOR  DO:$DATA(%ydboctocursor(cursorId,"keys",5,"","","OrderBy",%ydboctoi(1)))  SET %ydboctoi(1)=$ORDER(%ydboctocursor(cursorId,"keys",5,"","","OrderBy",%ydboctoi(1)),1)  QUIT:(%ydboctoi(1)="")
   . SET %ydboctoi(2)="" FOR  SET %ydboctoi(2)=$ORDER(%ydboctocursor(cursorId,"keys",5,"","","OrderBy",%ydboctoi(1),%ydboctoi(2))) QUIT:(%ydboctoi(2)="")  DO
   FOR  SET %ydboctocursor(cursorId,"keys",2,"names","id")=$ORDER(^names(%ydboctocursor(cursorId,"keys",2,"names","id"))) QUIT:(%ydboctocursor(cursorId,"keys",2,"names","id")="")  DO
---------------------------------------------------------
 select max(id) from names group by id;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"names","id")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"names","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"names","id")="")  DO
---------------------------------------------------------
 select 1 from names order by max(id+2);
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"names","id")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"names","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"names","id")="")  DO
   SET %ydboctoi(1)="" FOR  DO:$DATA(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)))  SET %ydboctoi(1)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)),1)  QUIT:(%ydboctoi(1)="")
   . SET %ydboctoi(2)="" FOR  SET %ydboctoi(2)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1),%ydboctoi(2))) QUIT:(%ydboctoi(2)="")  DO
---------------------------------------------------------
 select min(id) from TAF06octoro6;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octoro6","id")=$ORDER(^%ydboctoDHqW9PHdI87GCJ20Sdwh494(%ydboctocursor(cursorId,"keys",1,"taf06octoro6","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"taf06octoro6","id")="")  DO
---------------------------------------------------------
 select max(id) from TAF06octoro2;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDDsKP9dgNjP9URU1guoB2EF(""),-1)
---------------------------------------------------------
 select max(id) from TAF06octorw6;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDDcGgPIRbf8LQjJaaekHQ6A(""),-1)
---------------------------------------------------------
 select min(id) from TAF06octoro9;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octoro9","id")=$ORDER(^%ydboctoDcIy3vJIFd2uYKp26K5FqJ4(%ydboctocursor(cursorId,"keys",1,"taf06octoro9","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"taf06octoro9","id")="")  DO
---------------------------------------------------------
 select max(id) from TAF06octoro1;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDxsQS6GiRRH21J860URGG5H(""),-1)
---------------------------------------------------------
 select max(id) is null from TAF06octod2;
---------------------------------------------------------
   IF '$DATA(^TAF06octod(%ydboctoexpr)) SET %ydboctoexpr=$ORDER(^TAF06octod(12),-1)
---------------------------------------------------------
 select min(id) is null from TAF06octoa;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDBgOgTI3RL8mBqreQanfGAC(""),1)
---------------------------------------------------------
 select max(id) from TAF06octorw2;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDbYDLqNkmdKzB8tvrdQYwGJ(""),-1)
---------------------------------------------------------
 select min(id) from TAF06octoro2;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDDsKP9dgNjP9URU1guoB2EF(""),1)
---------------------------------------------------------
 select max(id) from TAF06octoro6;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octoro6","id")=$ORDER(^%ydboctoDHqW9PHdI87GCJ20Sdwh494(%ydboctocursor(cursorId,"keys",1,"taf06octoro6","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"taf06octoro6","id")="")  DO
---------------------------------------------------------
 select max(id) from TAF06octorw1;
---------------------------------------------------------
   SET %ydboctoexpr=$ORDER(^%ydboctoDWUxxKvwhIRqfvpZXjulwEB(""),-1)
---------------------------------------------------------
 select max(id) from TAF06octoro7;
---------------------------------------------------------
   FOR  SET %ydboctocursor(cursorId,"keys",1,"taf06octoro7","id")=$ORDER(^%ydboctoDXcZgIcte1TdRhgopYcRTHJ(%ydboctocursor(cursorId,"keys",1,"taf06octoro7","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"taf06octoro7","id")="")  DO
