
-- TC055 : OCTO583 : Validate IDENTIY constraint on columns
-- INSERT
-- GENERATED ALWAYS AS IDENTITY
DROP TABLE IF EXISTS test;
CREATE TABLE test (id INT GENERATED ALWAYS AS IDENTITY, str TEXT);
  INSERT INTO test VALUES('first'); -- ERROR: type missmatch integer and varchar in Postgres but IDENTITY error in Octo because of order in which error is checked
  INSERT INTO test VALUES(3,'second'); -- ERROR cannot insert into GENERATED ALWAYS type of column (hint: use OVERRIDE with INSERT)
  INSERT INTO test(id,str) VALUES(3,'second'); -- ERROR cannot insert into GENERATED ALWAYS type of column (hint: use OVERRIDE with INSERT)
  INSERT INTO test(id,str) SELECT 1,'third' UNION SELECT 2,'fourth'; -- ERROR cannot insert into GENERATED ALWAYS type of column (hint: use OVERRIDE with INSERT)
  INSERT INTO test SELECT 1,'third' UNION SELECT 2,'fourth'; -- ERROR cannot insert into GENERATED ALWAYS type of column (hint: use OVERRIDE with INSERT)
  SELECT * FROM test;
  -- OVERRIDING SYSTEM VALUE
  DROP TABLE IF EXISTS test;
  CREATE TABLE test (id INT GENERATED ALWAYS AS IDENTITY, str TEXT);
  INSERT INTO test VALUES(99,'fifth'); -- EROR cannot insert into GENERATED ALWAYS type of column (hint: use OVERRIDE with INSERT)
  SELECT * FROM test;
DROP TABLE IF EXISTS test;

-- GENERATED BY DEFAULT
CREATE TABLE test (id INT GENERATED BY DEFAULT AS IDENTITY, str TEXT);
  INSERT INTO test VALUES('first'); -- ERROR ERR_INSERT_TYPE_MISMATCH
DROP TABLE IF EXISTS test;

-- UPDATE
-- GENERATED ALWAYS AS IDENTITY
CREATE TABLE test (id INT GENERATED ALWAYS AS IDENTITY, str TEXT);
  UPDATE test SET id=1; -- ERROR column "id" can only be updated to DEFAULT (ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY)
  UPDATE test SET id=1,str='first'; -- ERROR column "id" can only be updated to DEFAULT (ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY)
  UPDATE test SET id=1; -- ERROR column "id" can only be updated to DEFAULT (ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY)
DROP TABLE IF EXISTS test;

-- PRIMARY KEY
CREATE TABLE test (id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY, str TEXT);
  INSERT INTO test VALUES(1,'second'); -- IDENTITY column error (ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY)
  INSERT INTO test OVERRIDING SYSTEM VALUE VALUES(1,'second'); -- ERR_DUPLICATE_KEY_VALUE error
DROP TABLE IF EXISTS test;

-- IDENTITY on ready-only table
CREATE TABLE test (id INT GENERATED ALWAYS AS IDENTITY, str TEXT) READONLY; -- ERR_READONLY_DISALLOWED error

-- Implicit read-only table with IDENTITY
CREATE TABLE namesE(id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,firstName VARCHAR EXTRACT "^names(keys(""ID""))",lastName VARCHAR) GLOBAL "^names(keys(""ID""))"; -- ERR_READONLY_AND_READWRITE_DISALLOWED

-- Copying data from a table when destination table has identity columns
CREATE TABLE test (id INT GENERATED ALWAYS AS IDENTITY, str TEXT);
INSERT INTO test SELECT id, lastname FROM names; -- IDENTITY column error (ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY)
INSERT INTO test OVERRIDING SYSTEM VALUE VALUES(NULL,'first'); -- ERR_NULL_COL_VALUE for id
INSERT INTO test SELECT id, lastname FROM names; -- ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY
SELECT * FROM test;
INSERT INTO test VALUES(NULL,'first'); -- ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY
SELECT * FROM test;
DROP TABLE IF EXISTS test;

-- IDENTITY on non-integer columns (ERR_NON_INTEGER_IDENTITY error is expected)
CREATE TABLE test (name TEXT GENERATED ALWAYS AS IDENTITY, id INT); -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name VARCHAR(20) GENERATED ALWAYS AS IDENTITY, id INT); -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name NUMERIC GENERATED ALWAYS AS IDENTITY, id INT); -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name NUMERIC(20,2) GENERATED ALWAYS AS IDENTITY, id INT); -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name BOOLEAN GENERATED ALWAYS AS IDENTITY, id INT); -- Error IDENTITY column can only be on smallint, integer or bigint

CREATE TABLE test (name TEXT GENERATED BY DEFAULT AS IDENTITY, id INT); -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name VARCHAR(20) GENERATED BY DEFAULT AS IDENTITY, id INT); -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name NUMERIC GENERATED BY DEFAULT AS IDENTITY, id INT); -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name NUMERIC(20,2) GENERATED BY DEFAULT AS IDENTITY, id INT); -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name BOOLEAN GENERATED BY DEFAULT AS IDENTITY, id INT); -- Error IDENTITY column can only be on smallint, integer or bigint

-- OVERRIDING USER VALUE working with GENERATED ALWAYS AS IDENTITY (Error ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY)
create table test (id int generated always as identity, name text);
insert into test(id,name) overriding user value values(5,'first'); -- ERROR Cannot insert, column `id` defined as GENERATED ALWAYS IDENTITY
insert into test overriding user value values(5,'second'); -- ERROR Cannot insert, column `id` defined as GENERATED ALWAYS IDENTITY
DROP TABLE IF EXISTS test;

-- DEFAULT set value for non-IDENTITY column in an UPDATE query is not implemented. Such usage should result in
-- ERR_FEATURE_NOT_IMPLEMENTED error.
-- Note:
-- * test_createtable.bats.in includes READONLY as table type in octo.conf. This results in the table `test` being considered as a READONLY
--   table. In this case, `UPDATE` that follows will lead to a `ERR_TABLE_READONLY` error and thats not what we are testing. Hence the use of
--   READWRITE keyword to allow `UPDATE` usage on the table.
create table test (id int, name text) READWRITE;
update test set id=default;
DROP TABLE IF EXISTS test;

-- Test that ERR_TABLE_MULTIPLE_IDENTITY message is seen when mutiple identity keywords are included for a column
create table test (id int generated always as identity generated by default as identity, name text);
create table test (id int generated always as identity generated by default as identity generated by default as identity, name text);
create table test (id int generated by default as identity generated by default as identity generated by default as identity, name text);
create table test (name text, id int generated always as identity generated by default as identity);

-- Double-quoted identifiers yield correct error output in ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY and ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY
create table "T M P" ("i d" int generated always as identity, str text);
update "T M P" set "i d"=1; -- ERROR Cannot update, column `"i d"` defined as GENERATED ALWAYS IDENTITY
insert into "T M P"("i d",name) overriding user value values(5,'first'); -- ERROR Cannot insert, column `"i d"` defined as GENERATED ALWAYS IDENTITY
OCTO> DROP TABLE IF EXISTS test;
DROP TABLE
OCTO> CREATE TABLE test (id INT GENERATED ALWAYS AS IDENTITY, str TEXT);
CREATE TABLE
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
OCTO> INSERT INTO test VALUES('first');
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
OCTO> -- ERROR: type missmatch integer and varchar in Postgres but IDENTITY error in Octo because of order in which error is checked
  INSERT INTO test VALUES(3,'second');
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
LINE 6:2:   INSERT INTO test(id,str) VALUES(3,'second'); -- ERROR cannot i...
                             ^^
OCTO> -- ERROR cannot insert into GENERATED ALWAYS type of column (hint: use OVERRIDE with INSERT)
  INSERT INTO test(id,str) VALUES(3,'second');
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
LINE 7:2:   INSERT INTO test(id,str) SELECT 1,'third' UNION SELECT 2,'four...
                             ^^
OCTO> -- ERROR cannot insert into GENERATED ALWAYS type of column (hint: use OVERRIDE with INSERT)
  INSERT INTO test(id,str) SELECT 1,'third' UNION SELECT 2,'fourth';
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
OCTO> -- ERROR cannot insert into GENERATED ALWAYS type of column (hint: use OVERRIDE with INSERT)
  INSERT INTO test SELECT 1,'third' UNION SELECT 2,'fourth';
OCTO> -- ERROR cannot insert into GENERATED ALWAYS type of column (hint: use OVERRIDE with INSERT)
  SELECT * FROM test;
id|str
(0 rows)
OCTO> -- OVERRIDING SYSTEM VALUE
  DROP TABLE IF EXISTS test;
DROP TABLE
OCTO> CREATE TABLE test (id INT GENERATED ALWAYS AS IDENTITY, str TEXT);
CREATE TABLE
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
OCTO> INSERT INTO test VALUES(99,'fifth');
OCTO> -- EROR cannot insert into GENERATED ALWAYS type of column (hint: use OVERRIDE with INSERT)
  SELECT * FROM test;
id|str
(0 rows)
OCTO> DROP TABLE IF EXISTS test;
DROP TABLE
OCTO> CREATE TABLE test (id INT GENERATED BY DEFAULT AS IDENTITY, str TEXT);
CREATE TABLE
[ERROR]: ERR_INSERT_TYPE_MISMATCH: Column "id" is of type INTEGER but expression is of type VARCHAR
OCTO> INSERT INTO test VALUES('first');
OCTO> -- ERROR ERR_INSERT_TYPE_MISMATCH
DROP TABLE IF EXISTS test;
DROP TABLE
OCTO> CREATE TABLE test (id INT GENERATED ALWAYS AS IDENTITY, str TEXT);
CREATE TABLE
[ERROR]: ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY: Updating a GENERATED ALWAYS IDENTITY column "id" to a non-DEFAULT value is invalid.
LINE 22:1: UPDATE test SET id=1; -- ERROR column "id" can only be updated t...
                             ^^
OCTO> UPDATE test SET id=1;
[ERROR]: ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY: Updating a GENERATED ALWAYS IDENTITY column "id" to a non-DEFAULT value is invalid.
LINE 23:2:   UPDATE test SET id=1,str='first'; -- ERROR column "id" can onl...
                             ^^
OCTO> -- ERROR column "id" can only be updated to DEFAULT (ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY)
  UPDATE test SET id=1,str='first';
[ERROR]: ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY: Updating a GENERATED ALWAYS IDENTITY column "id" to a non-DEFAULT value is invalid.
LINE 24:2:   UPDATE test SET id=1; -- ERROR column "id" can only be updated...
                             ^^
OCTO> -- ERROR column "id" can only be updated to DEFAULT (ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY)
  UPDATE test SET id=1;
OCTO> -- ERROR column "id" can only be updated to DEFAULT (ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY)
DROP TABLE IF EXISTS test;
DROP TABLE
OCTO> CREATE TABLE test (id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY, str TEXT);
CREATE TABLE
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
OCTO> INSERT INTO test VALUES(1,'second');
OCTO> -- IDENTITY column error (ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY)
  INSERT INTO test OVERRIDING SYSTEM VALUE VALUES(1,'second');
INSERT 0 1
OCTO> -- ERR_DUPLICATE_KEY_VALUE error
DROP TABLE IF EXISTS test;
DROP TABLE
[ERROR]: ERR_READONLY_DISALLOWED: READONLY keyword in CREATE TABLE is disallowed due to an incompatible keyword
OCTO> CREATE TABLE test (id INT GENERATED ALWAYS AS IDENTITY, str TEXT) READONLY; 
[ERROR]: ERR_UNKNOWN_COLUMN_NAME: Unknown column: ID
OCTO> -- ERR_READONLY_DISALLOWED error

CREATE TABLE namesE(id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,firstName VARCHAR EXTRACT "^names(keys(""ID""))",lastName VARCHAR) GLOBAL "^names(keys(""ID""))"; 
OCTO> -- ERR_READONLY_AND_READWRITE_DISALLOWED

CREATE TABLE test (id INT GENERATED ALWAYS AS IDENTITY, str TEXT);
CREATE TABLE
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
OCTO> INSERT INTO test SELECT id, lastname FROM names;
OCTO> -- IDENTITY column error (ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY)
INSERT INTO test OVERRIDING SYSTEM VALUE VALUES(NULL,'first');
[ERROR]: ERR_NULL_COL_VALUE: NULL value in column id violates NOT NULL constraint
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
OCTO> -- ERR_NULL_COL_VALUE for id
INSERT INTO test SELECT id, lastname FROM names;
OCTO> -- ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY
SELECT * FROM test;
id|str
(0 rows)
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
OCTO> INSERT INTO test VALUES(NULL,'first');
OCTO> -- ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY
SELECT * FROM test;
id|str
(0 rows)
OCTO> DROP TABLE IF EXISTS test;
DROP TABLE
[ERROR]: ERR_NON_INTEGER_IDENTITY: Only integer columns can be an identity column
LINE 45:1: CREATE TABLE test (name TEXT GENERATED ALWAYS AS IDENTITY, id IN...
                              ^^^^
OCTO> CREATE TABLE test (name TEXT GENERATED ALWAYS AS IDENTITY, id INT); 
[ERROR]: ERR_NON_INTEGER_IDENTITY: Only integer columns can be an identity column
LINE 46:2: CREATE TABLE test (name VARCHAR(20) GENERATED ALWAYS AS IDENTITY...
                              ^^^^
OCTO> -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name VARCHAR(20) GENERATED ALWAYS AS IDENTITY, id INT); 
[ERROR]: ERR_NON_INTEGER_IDENTITY: Only integer columns can be an identity column
LINE 47:2: CREATE TABLE test (name NUMERIC GENERATED ALWAYS AS IDENTITY, id...
                              ^^^^
OCTO> -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name NUMERIC GENERATED ALWAYS AS IDENTITY, id INT); 
[ERROR]: ERR_NON_INTEGER_IDENTITY: Only integer columns can be an identity column
LINE 48:2: CREATE TABLE test (name NUMERIC(20,2) GENERATED ALWAYS AS IDENTI...
                              ^^^^
OCTO> -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name NUMERIC(20,2) GENERATED ALWAYS AS IDENTITY, id INT); 
[ERROR]: ERR_NON_INTEGER_IDENTITY: Only integer columns can be an identity column
LINE 49:2: CREATE TABLE test (name BOOLEAN GENERATED ALWAYS AS IDENTITY, id...
                              ^^^^
OCTO> -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name BOOLEAN GENERATED ALWAYS AS IDENTITY, id INT); 
[ERROR]: ERR_NON_INTEGER_IDENTITY: Only integer columns can be an identity column
LINE 51:3: CREATE TABLE test (name TEXT GENERATED BY DEFAULT AS IDENTITY, i...
                              ^^^^
OCTO> -- Error IDENTITY column can only be on smallint, integer or bigint

CREATE TABLE test (name TEXT GENERATED BY DEFAULT AS IDENTITY, id INT); 
[ERROR]: ERR_NON_INTEGER_IDENTITY: Only integer columns can be an identity column
LINE 52:2: CREATE TABLE test (name VARCHAR(20) GENERATED BY DEFAULT AS IDEN...
                              ^^^^
OCTO> -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name VARCHAR(20) GENERATED BY DEFAULT AS IDENTITY, id INT); 
[ERROR]: ERR_NON_INTEGER_IDENTITY: Only integer columns can be an identity column
LINE 53:2: CREATE TABLE test (name NUMERIC GENERATED BY DEFAULT AS IDENTITY...
                              ^^^^
OCTO> -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name NUMERIC GENERATED BY DEFAULT AS IDENTITY, id INT); 
[ERROR]: ERR_NON_INTEGER_IDENTITY: Only integer columns can be an identity column
LINE 54:2: CREATE TABLE test (name NUMERIC(20,2) GENERATED BY DEFAULT AS ID...
                              ^^^^
OCTO> -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name NUMERIC(20,2) GENERATED BY DEFAULT AS IDENTITY, id INT); 
[ERROR]: ERR_NON_INTEGER_IDENTITY: Only integer columns can be an identity column
LINE 55:2: CREATE TABLE test (name BOOLEAN GENERATED BY DEFAULT AS IDENTITY...
                              ^^^^
OCTO> -- Error IDENTITY column can only be on smallint, integer or bigint
CREATE TABLE test (name BOOLEAN GENERATED BY DEFAULT AS IDENTITY, id INT); 
OCTO> -- Error IDENTITY column can only be on smallint, integer or bigint

create table test (id int generated always as identity, name text);
CREATE TABLE
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
LINE 58:1: insert into test(id,name) overriding user value values(5,'first'...
                            ^^
OCTO> insert into test(id,name) overriding user value values(5,'first');
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
OCTO> -- ERROR Cannot insert, column `id` defined as GENERATED ALWAYS IDENTITY
insert into test overriding user value values(5,'second');
OCTO> -- ERROR Cannot insert, column `id` defined as GENERATED ALWAYS IDENTITY
DROP TABLE IF EXISTS test;
DROP TABLE
OCTO> create table test (id int, name text) READWRITE;
CREATE TABLE
[ERROR]: ERR_FEATURE_NOT_IMPLEMENTED: Feature not implemented: DEFAULT value for a column is only allowed for IDENTITY columns
LINE 63:1: update test set id=default;
                           ^^
OCTO> update test set id=default;
OCTO> DROP TABLE IF EXISTS test;
DROP TABLE
[ERROR]: ERR_TABLE_MULTIPLE_IDENTITY: Multiple identity specified for column "id" of table "test"
LINE 66:1: ...always as identity generated by default as identity, name text);
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
OCTO> create table test (id int generated always as identity generated by default as identity, name text);
[ERROR]: ERR_TABLE_MULTIPLE_IDENTITY: Multiple identity specified for column "id" of table "test"
LINE 67:1: ...ays as identity generated by default as identity generated by de...
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
OCTO> create table test (id int generated always as identity generated by default as identity generated by default as identity, name text);
[ERROR]: ERR_TABLE_MULTIPLE_IDENTITY: Multiple identity specified for column "id" of table "test"
LINE 68:1: ...ult as identity generated by default as identity generated by de...
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
OCTO> create table test (id int generated by default as identity generated by default as identity generated by default as identity, name text);
[ERROR]: ERR_TABLE_MULTIPLE_IDENTITY: Multiple identity specified for column "id" of table "test"
LINE 69:1: ... generated always as identity generated by default as identity);
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
OCTO> create table test (name text, id int generated always as identity generated by default as identity);
OCTO> create table "T M P" ("i d" int generated always as identity, str text);
CREATE TABLE
[ERROR]: ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY: Updating a GENERATED ALWAYS IDENTITY column "i d" to a non-DEFAULT value is invalid.
LINE 72:1: update "T M P" set "i d"=1; -- ERROR Cannot update, column `"i ...
                              ^^^^^
OCTO> update "T M P" set "i d"=1;
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "i d". Use OVERRIDING SYSTEM VALUE to override.
LINE 73:2: insert into "T M P"("i d",name) overriding user value values(5,...
                               ^^^^^
OCTO> -- ERROR Cannot update, column `"i d"` defined as GENERATED ALWAYS IDENTITY
insert into "T M P"("i d",name) overriding user value values(5,'first');
OCTO> -- ERROR Cannot insert, column `"i d"` defined as GENERATED ALWAYS IDENTITY
