
-- TC056 : OCTO583 : Validate that constraint failure rolls back auto-increment value to what it was prior to the query which caused the failure
-- update operation for an IDENTITY column should be atomic
create table test (id int generated by default as identity check(id<3), name text);
insert into test values(0,'first');
insert into test(name) values('first'); -- id column will be set with 1 (auto-increment start value)
select * from test;
-- Updates all rows. 'first' -> 'second' and ID to auto-increment value
-- It will error out saying the auto-increment value for the second row update violates constraint
update test set id=default, name='second';
-- The insert below should result in ID being set with the auto-increment value before the above query execution i.e. 2
insert into test(name) values('ID should be 2');
select * from test;
-- Note: Postgres doesn't rollback the value
OCTO> create table test (id int generated by default as identity check(id<3), name text);
CREATE TABLE
OCTO> insert into test values(0,'first');
INSERT 0 1
OCTO> insert into test(name) values('first');
INSERT 0 1
OCTO> -- id column will be set with 1 (auto-increment start value)
select * from test;
id|name
0|first
1|first
(2 rows)
OCTO> update test set id=default, name='second';
[ERROR]: ERR_CHECK_CONSTRAINT_VIOLATION: New row for table test violates CHECK constraint test_id_check : Failing row contains (3, second)
OCTO> insert into test(name) values('ID should be 2');
INSERT 0 1
OCTO> select * from test;
id|name
0|first
1|first
2|ID should be 2
(3 rows)
OCTO> 
