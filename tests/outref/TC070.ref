

-- Basic test for implicit null constraint addition to identity columns
create table test (id integer generated always as identity, name text);
insert into test overriding system value values(NULL, 'first'); -- ERR_NULL_COL_VALUE
insert into test overriding system value values(34, 'first'); -- valid
insert into test overriding user value values(NULL, 'first'); -- ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY
select * from test;
drop table test;
create table test (id int generated by default as identity, name text);
insert into test values(NULL, 'first');
insert into test values(23, 'first');
insert into test overriding user value values(NULL, 'first'); -- valid case as NULL is replaced by auto-increment value
insert into test overriding system value values(NULL, 'first'); -- ERR_NULL_COL_VALUE
select * from test;
drop table test;

create table test (id integer generated always as identity, name text);
insert into test(name) values('first'),('second');
update test set id=NULL; -- only default allowed
update test set id=NULL where name='first'; -- only default allowed
drop table test;
create table test(id integer generated by default as identity, name text);
insert into test(name) values('first'),('second');
update test set id=NULL; -- ERR_NULL_COL_VALUE
update test set id=NULL where name='first'; -- ERR_NULL_COL_VALUE
drop table test;

-- Test case where insert fails due to NULL CONSTRAINT VIOLATION and the auto-increment value is rolled back
create table test (id integer generated always as identity, name text);
insert into test(name) values('first'),('second'); -- valid query, ids for the rows inserted here will be 1 and 2
insert into test overriding system value values(NULL, 'third'); -- ERR_NULL_COL_VALUE
insert into test overriding user value values(NULL, 'third'); -- ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY
insert into test (name) values('fourth'); -- id for this row will be 3
select * from test;
drop table test;
create table test (id integer generated by default as identity, name text);
insert into test(name) values('first'),('second'); -- valid query ids for the rows inserted here will be 1 and 2
insert into test values(NULL,'third'); -- ERR_NULL_COL_VALUE
insert into test overriding system value values(NULL, 'third'); -- ERR_NULL_COL_VALUE
insert into test overriding user value values(NULL, 'fourth'); -- valid query, id for this row will be 3
insert into test(name) values('fifth'); -- valid query, id from this row will be 4
select * from test;
drop table test;

OCTO> create table test (id integer generated always as identity, name text);
CREATE TABLE
OCTO> insert into test overriding system value values(NULL, 'first');
[ERROR]: ERR_NULL_COL_VALUE: NULL value in column id violates NOT NULL constraint
OCTO> -- ERR_NULL_COL_VALUE
insert into test overriding system value values(34, 'first');
INSERT 0 1
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
OCTO> -- valid
insert into test overriding user value values(NULL, 'first');
OCTO> -- ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY
select * from test;
id|name
34|first
(1 row)
OCTO> drop table test;
DROP TABLE
OCTO> create table test (id int generated by default as identity, name text);
CREATE TABLE
OCTO> insert into test values(NULL, 'first');
[ERROR]: ERR_NULL_COL_VALUE: NULL value in column id violates NOT NULL constraint
OCTO> insert into test values(23, 'first');
INSERT 0 1
OCTO> insert into test overriding user value values(NULL, 'first');
INSERT 0 1
OCTO> -- valid case as NULL is replaced by auto-increment value
insert into test overriding system value values(NULL, 'first');
[ERROR]: ERR_NULL_COL_VALUE: NULL value in column id violates NOT NULL constraint
OCTO> -- ERR_NULL_COL_VALUE
select * from test;
id|name
23|first
1|first
(2 rows)
OCTO> drop table test;
DROP TABLE
OCTO> create table test (id integer generated always as identity, name text);
CREATE TABLE
OCTO> insert into test(name) values('first'),('second');
INSERT 0 2
[ERROR]: ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY: Updating a GENERATED ALWAYS IDENTITY column "id" to a non-DEFAULT value is invalid.
LINE 19:1: update test set id=NULL; -- only default allowed
                           ^^
OCTO> update test set id=NULL;
[ERROR]: ERR_UPDATE_OF_GENERATED_ALWAYS_IDENTITY: Updating a GENERATED ALWAYS IDENTITY column "id" to a non-DEFAULT value is invalid.
LINE 20:2: update test set id=NULL where name='first'; -- only default allo...
                           ^^
OCTO> -- only default allowed
update test set id=NULL where name='first';
OCTO> -- only default allowed
drop table test;
DROP TABLE
OCTO> create table test(id integer generated by default as identity, name text);
CREATE TABLE
OCTO> insert into test(name) values('first'),('second');
INSERT 0 2
OCTO> update test set id=NULL;
[ERROR]: ERR_NULL_COL_VALUE: NULL value in column id violates NOT NULL constraint
OCTO> -- ERR_NULL_COL_VALUE
update test set id=NULL where name='first';
[ERROR]: ERR_NULL_COL_VALUE: NULL value in column id violates NOT NULL constraint
OCTO> -- ERR_NULL_COL_VALUE
drop table test;
DROP TABLE
OCTO> create table test (id integer generated always as identity, name text);
CREATE TABLE
OCTO> insert into test(name) values('first'),('second');
INSERT 0 2
OCTO> -- valid query, ids for the rows inserted here will be 1 and 2
insert into test overriding system value values(NULL, 'third');
[ERROR]: ERR_NULL_COL_VALUE: NULL value in column id violates NOT NULL constraint
[ERROR]: ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY: Cannot INSERT into GENERATED ALWAYS identity column "id". Use OVERRIDING SYSTEM VALUE to override.
OCTO> -- ERR_NULL_COL_VALUE
insert into test overriding user value values(NULL, 'third');
OCTO> -- ERR_INSERT_ON_GENERATED_ALWAYS_IDENTITY
insert into test (name) values('fourth');
INSERT 0 1
OCTO> -- id for this row will be 3
select * from test;
id|name
1|first
2|second
3|fourth
(3 rows)
OCTO> drop table test;
DROP TABLE
OCTO> create table test (id integer generated by default as identity, name text);
CREATE TABLE
OCTO> insert into test(name) values('first'),('second');
INSERT 0 2
OCTO> -- valid query ids for the rows inserted here will be 1 and 2
insert into test values(NULL,'third');
[ERROR]: ERR_NULL_COL_VALUE: NULL value in column id violates NOT NULL constraint
OCTO> -- ERR_NULL_COL_VALUE
insert into test overriding system value values(NULL, 'third');
[ERROR]: ERR_NULL_COL_VALUE: NULL value in column id violates NOT NULL constraint
OCTO> -- ERR_NULL_COL_VALUE
insert into test overriding user value values(NULL, 'fourth');
INSERT 0 1
OCTO> -- valid query, id for this row will be 3
insert into test(name) values('fifth');
INSERT 0 1
OCTO> -- valid query, id from this row will be 4
select * from test;
id|name
1|first
2|second
3|fourth
4|fifth
(4 rows)
OCTO> drop table test;
DROP TABLE
OCTO> 
