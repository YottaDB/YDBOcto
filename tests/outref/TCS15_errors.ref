
-- Below queries are expected to throw a type missmatch error since CASE value and WHEN condition result types are different
select case firstname when firstname = 'Zero' then 'MyZero' else firstname end from names;
select case when 'Zero' then 'MyZero' else firstname end from names;
select case id when firstname='Zero' then 'MyZero' else firstname end from names;
select case id when firstname then 'MyZero' else firstname end from names;
select case (select 1) when firstname then 'MyZero' else firstname end from names;
select case 'Zero' when then 'MyZero' else firstname end from names;
select case when 'Zero' then 'MyZero' else 1 end from names;
select case 1 = 1 when 0 then 1 end;
select case 1 = 1 when 1 then 1 end;
select case 1 = 1 when 2 then 1 end;

-- Below queries check NULL usage in case statement (Second query fails in Postgres for type mismatch for second when clause)
select case NULL when NULL then 'abcd' when 'ab' then 'efgh' else 'xyz' end;
select case NULL when NULL then 'abcd' when 1 then 'efgh' else 'xyz' end;

-- Below queries check Cast between numeric and interger values in case statements (Work both in postgres and octo)
select case 1.5 when 1 then 'abcd' else 'efgh' end;
select case 1 when 1.5 then 'abcd' else 'efgh' end;

-- Below queries verify syntax highlighting of error queries happen for the entire query element which caused the error
select case when 12 then 'MyZero' end from names;
select case 'll' when 12 then 'MyZero' end from names;
select case when 12.33 then 'MyZero' end from names;
select case "asdf" when 12.33 then 'MyZero' end from names;
select case "asdf" when NULL then 'MyZero' end from names;
select case 112 when NULL then 'MyZero' end from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type BOOLEAN but is used in a context that expects a VARCHAR type
Error with syntax near (line 1, column 28):

select case firstname when firstname = 'Zero' then 'MyZero' else firstname end from names;
                           ^^^^^^^^^^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case firstname when firstname = 'Zero' then 'MyZero' else firstname end from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type VARCHAR but is used in a context that expects a BOOLEAN type
Error with syntax near (line 1, column 23):

select case when 'Zero' then 'MyZero' else firstname end from names;
                      ^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case when 'Zero' then 'MyZero' else firstname end from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type BOOLEAN but is used in a context that expects a INTEGER type
Error with syntax near (line 1, column 21):

select case id when firstname='Zero' then 'MyZero' else firstname end from names;
                    ^^^^^^^^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case id when firstname='Zero' then 'MyZero' else firstname end from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type VARCHAR but is used in a context that expects a INTEGER type
Error with syntax near (line 1, column 21):

select case id when firstname then 'MyZero' else firstname end from names;
                    ^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case id when firstname then 'MyZero' else firstname end from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type VARCHAR but is used in a context that expects a INTEGER type
Error with syntax near (line 1, column 29):

select case (select 1) when firstname then 'MyZero' else firstname end from names;
                            ^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case (select 1) when firstname then 'MyZero' else firstname end from names;
Error with syntax near (line 1, column 25):

select case 'Zero' when then 'MyZero' else firstname end from names;
                        ^^^^
syntax error, unexpected THEN

[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case 'Zero' when then 'MyZero' else firstname end from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type VARCHAR but is used in a context that expects a BOOLEAN type
Error with syntax near (line 1, column 23):

select case when 'Zero' then 'MyZero' else 1 end from names;
                      ^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case when 'Zero' then 'MyZero' else 1 end from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type INTEGER but is used in a context that expects a BOOLEAN type
Error with syntax near (line 1, column 24):

select case 1 = 1 when 0 then 1 end;
                       ^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case 1 = 1 when 0 then 1 end;
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type INTEGER but is used in a context that expects a BOOLEAN type
Error with syntax near (line 1, column 24):

select case 1 = 1 when 1 then 1 end;
                       ^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case 1 = 1 when 1 then 1 end;
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type INTEGER but is used in a context that expects a BOOLEAN type
Error with syntax near (line 1, column 24):

select case 1 = 1 when 2 then 1 end;
                       ^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case 1 = 1 when 2 then 1 end;
CASE
xyz
(1 row)
CASE
xyz
(1 row)
CASE
efgh
(1 row)
CASE
efgh
(1 row)
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type INTEGER but is used in a context that expects a BOOLEAN type
Error with syntax near (line 1, column 18):

select case when 12 then 'MyZero' end from names;
                 ^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case when 12 then 'MyZero' end from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type INTEGER but is used in a context that expects a VARCHAR type
Error with syntax near (line 1, column 23):

select case 'll' when 12 then 'MyZero' end from names;
                      ^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case 'll' when 12 then 'MyZero' end from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type NUMERIC but is used in a context that expects a BOOLEAN type
Error with syntax near (line 1, column 18):

select case when 12.33 then 'MyZero' end from names;
                 ^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case when 12.33 then 'MyZero' end from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_CASE_VALUE_TYPE_MISMATCH : WHEN argument is of type NUMERIC but is used in a context that expects a VARCHAR type
Error with syntax near (line 1, column 25):

select case "asdf" when 12.33 then 'MyZero' end from names;
                        ^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: select case "asdf" when 12.33 then 'MyZero' end from names;
CASE






(6 rows)
CASE






(6 rows)
