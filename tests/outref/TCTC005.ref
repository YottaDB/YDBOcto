# Run CREATE TABLE commands in TCTC005.sql that tests various types of CHECK constraints

-- TCTC005 : OCTO772 : Test CHECK constraint shows up correctly in CREATE TABLE text definition
-- Test all possible CHECK constraint expressions (i.e. all "case" code paths in "src/emit_check_constraint.c")

create table tmp01 (id integer, check ((true is unknown) and (false is null)));
create table tmp02 (id integer, check (('abcd' != 'efgh') and (1 <= id) and (1.5 > abs(-2.35))));
create table tmp03 (id integer, check (NOT nullif(1.0, 1) is not null));
create table tmp04 (id integer, firstname varchar, check (greatest(firstname, 'abcd', NULL, 'zzz') is null));
create table tmp05 (id integer, firstname varchar, lastname varchar, check (least(firstname || 'efgh', lastname, firstname || lastname) is null));
create table tmp06 (id integer, lastname varchar, check (coalesce(NULL, lastname) is null));
create table tmp07 (id integer, lastname varchar, check (nullif(NULL, 2) is null));
create table tmp08 (id integer, check(case id when 2 then true end));
create table tmp09 (id integer, check(case id when 2 then true else false end));
create table tmp10 (id integer, check(case when id is null then true end));
create table tmp11 (id integer, check(case when id is null then true else false end));
create table tmp12 (id integer, check(id::boolean));
create table tmp13 (id integer, check(id::numeric(3) = 3.0));
create table tmp14 (id integer, check(id::numeric(4,1) != 4.5));
create table tmp15 (id integer, check(id::integer < 4));
create table tmp16 (id integer, check(id::varchar(10) > 'abcd'));
create table tmp17 (id integer, check(+id >= -2));
create table tmp18 (id integer, check(NOT id::boolean));
create table tmp19 (id integer, check(id + (id % 3) - (id * 2) <= (id / 20)));
create table tmp20 (id integer, check(id::boolean OR NOT id::boolean));
create table tmp21 (id integer, check(id::boolean AND NOT id::boolean));
create table tmp22 (lastname varchar, check(lastname ~ 'abcd'));
create table tmp23 (lastname varchar, check(lastname ~* 'abcd'));
create table tmp24 (lastname varchar, check((lastname like 'abcd%') or (lastname not like 'abcd%')));
create table tmp25 (lastname varchar, check((lastname ilike 'ab%cd') or (lastname not ilike 'ab%cd')));
create table tmp26 (lastname varchar, check((lastname similar to 'ab%cd') and (lastname not similar to 'ab%cd')));
create table tmp27 (id integer, check(id in (2,3)));
create table tmp28 (id integer, check(id not in (2,3)));

-- Note: The below queries will not work because they need sub-query usage for ANY/ALL operator.
-- But sub-queries are not supported with CHECK constraint. So just recording them here but disabling it.
-- -- create table tmp29 (id integer, check(id = any (2,3)));
-- -- create table tmp30 (id integer, check(id != any (2,3)));
-- -- create table tmp31 (id integer, check(id < any (2,3)));
-- -- create table tmp32 (id integer, check(id > any (2,3)));
-- -- create table tmp33 (id integer, check(id <= any (2,3)));
-- -- create table tmp34 (id integer, check(id >= any (2,3)));
-- -- create table tmp35 (id integer, check(id = all (2,3)));
-- -- create table tmp36 (id integer, check(id != all (2,3)));
-- -- create table tmp37 (id integer, check(id < all (2,3)));
-- -- create table tmp38 (id integer, check(id > all (2,3)));
-- -- create table tmp39 (id integer, check(id <= all (2,3)));
-- -- create table tmp40 (id integer, check(id >= all (2,3)));

-- Test CHECK column constraint using a column ("price" below) that is going to be defined in the table in a later line
create table tmp29 (product_no integer CHECK (price > product_no), name text, price numeric);

-- Test that CONSTRAINT name is accepted but ignored for NOT NULL (proved below because same constraint name is accepted
-- for a different constraint without errors like it normally would if it was a real constraint name collision).
create table tmp30 (id integer unique, name varchar constraint name1 not null, firstname varchar constraint name1 check (firstname is not NULL));

-- Test that \d tablename in Octo matches that in Postgres for the below test case
-- This is a case where the constraint name is derived from an empty column name.
-- At one point, Octo used to create a constraint named PRODUCTS__CHECK whereas we expect it to be PRODUCTS_CHECK
-- (i.e. no double underscore).
create table tmp31 (id integer, check (1 + 2 = 3), check (2 + 3 = 5));

-- Test that constraint name of length 63 bytes is allowed
create table tmp32 (id integer CONSTRAINT toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrstu CHECK (id < 2));

-- Test that when an auto assigned name would collide with a user specified constraint name, the auto assigned name
-- would move on to the next number and try that until it finds a non-colliding name. In the below, the (price < 10)
-- check constraint would normally have gotten the name tmp33_price_check but since that name already exists it
-- would move on and then try tmp33_price_check1 but it finds that one taken as well and so moves on and then
-- assigns tmp33_price_check2 as the constraint name.
create table tmp33 (
	      product_no integer,
	      name text,
	      price numeric CONSTRAINT tmp33_price_check CHECK (price > 0) CONSTRAINT tmp33_price_check1 CHECK (price > 5)
	       CHECK (price < 10)
	  );

-- Test CHECK column constraint using another (but valid) column name automatically becomes a table level constraint
-- (indicated by the constraint name having just the table name and not any column name in it).
create table tmp34 (
	      product_no integer,
	      name text,
	      price numeric CHECK (price > product_no)
	  );

-- Test CHECK column constraint using a column that is not yet defined in the table but will be in a later line.
-- This should also become a table level constraint (indicated by the constraint name having just the table name
-- and not any column name in it).
create table tmp35 (
	      product_no integer CHECK (price > product_no),
	      name text,
	      price numeric
	  );

-- Test CHECK column constraint using a different column in its boolean condition expression.
-- It should be named after that column and not the current column (i.e. it should become that column's CHECK constraint).
-- In the below, the CHECK constraint is specified under the "name" column but uses "id" only. Therefore it becomes a column
-- level constraint of the "id" column as evidenced by the constraint named as "tmp36_id_check" (and not "tmp36_name_check").
create table tmp36 (id integer, name varchar check (id > 0));

-- Test a table definition that defines lots of column constraints but some correspond to a different column level constraint
-- and some correspond to a table level constraint. In the end, constraint names should be set correctly.
create table tmp37 (id integer, name varchar check (id > 0) check (name is not null) check ((name || id) = 'Zero2'));

-- Test that column level constraint that does not use any columns becomes a table level constraint.
-- Notice the (2 > 0) expression gets named as "tmp38_check" (and not "tmp38_name_check") because
-- it does not use "name" in the expression at all.
create table tmp38 (id integer, name varchar check (2 > 0) check (name is not null));

-- Test CREATE TABLE commands with a mix of table-level and column-level CHECK constraints.
-- This used to SIG-11/Assert-fail in a prior version of the code.
create table tmp39 (check (1 > 0), firstname varchar check (firstname > 'abcd'));
create table tmp40 (check (1 > 0), check (2 > 1), firstname varchar check (firstname > 'abcd'));
create table tmp41 (id integer, check (1 > 0), firstname varchar check (firstname > 'abcd'));

-- YDBOcto#582 : Test that UNIQUE constraint shows up correctly in CREATE TABLE text definition for all below queries
-- Additionally test the individual case described in comments before each query below

-- Test that column-level UNIQUE constraint can now specify a constraint name. And it shows in \d tablename.
create table tmp42 (id integer constraint uniq1 unique);

-- Test that table-level UNIQUE constraint can now specify a constraint name. And it shows in \d tablename.
-- Also test that table level UNIQUE constraint that specifies only one column is treated as a column level UNIQUE constraint
-- (i.e. UNIQUE shows up inside the "id" column in the table text definition)
create table tmp43 (id integer, constraint uniq1 unique (id));

-- Test table level UNIQUE constraint works if more than 1 column is specified
create table tmp44 (id1 integer, id2 integer, constraint uniq1 unique (id1, id2));

-- Test that \d tablename works even if table has a mix of CHECK and UNIQUE constraints
create table tmp45 (id1 integer, id2 integer, UNIQUE(id1, id2), CHECK (id1 > 2));

-- Test that only the first of multiple table-level unique constraints that correspond to the same set of columns gets
-- picked and the rest ignored. In the below example, the unique constraint "u2" gets ignored and "u1" gets picked.
create table tmp46 (id1 integer, constraint u1 unique (id1), constraint u2 unique (id1));

-- Test that if a mix of unnamed and named UNIQUE constraints are specified within one column, the first named constraint gets
-- picked and others get discarded.
create table tmp47 (id integer unique constraint uniq2 unique, name varchar constraint uniq1 unique);
create table tmp48 (id integer unique constraint uniq2 unique constraint uniq3 unique, name varchar constraint uniq1 unique);

-- Test that order of column names in UNIQUE constraint matters. That is (id1,id2) is different from (id2, id1).
-- The below example should create 2 UNIQUE constraints (instead of 1 which is what one would expect considering
-- the order of the columns should ideally not matter). Octo follows Postgres in this regard.
create table tmp49 (id1 integer, id2 integer, constraint u1 unique (id1, id2), constraint u2 unique (id2, id1));

-- Test that duplicate constraints get trimmed out even if multiple columns are involved in each constraint
create table tmp50 (id1 integer, id2 integer, constraint u1 unique (id1, id2), constraint u2 unique (id1, id2));

-- Test that if multiple table-level constraints are identical, the first NAMED table level constraint gets chosen.
-- In the below, the named constraint u2 gets chosen even though it is second after the first unnamed constraint.
-- Also u2 gets chosen ahead of u3 since both are named constraints and u2 is encountered first during the parse.
create table tmp51 (id1 integer, id2 integer, unique (id1, id2), constraint u2 unique (id1, id2), constraint u3 unique (id1, id2));

-- Test similar example as above except that this is with a table-level constraint that gets moved to a column-level constraint
-- because only 1 column is specified.
create table tmp52 (id1 integer, id2 integer, unique (id1), constraint u2 unique (id1), constraint u3 unique (id1));

-- Test that table-level UNIQUE constraint, using a column that will be defined later in the same CREATE TABLE, works fine
create table tmp53 (constraint uniq unique (id1), id1 integer);
create table tmp54 (id1 integer, constraint uniq unique (id2), id2 integer);
create table tmp55 (id1 integer, constraint uniq unique (id1, id2), id2 integer);

-- Test that multiple named UNIQUE constraints within one column cause the first one to be kept and remaining ones to be discarded.
-- In the below example, uniq2 named constraint in "id" column gets discarded because "uniq1" named constraint is already specified
-- and so there is no issue creating a constraint with that same name in "name" column.
create table tmp56 (id integer constraint uniq1 unique constraint uniq2 unique, name varchar constraint uniq2 unique);

-- Test that automatically assigned constraint name for UNIQUE is table_column1_column2_..._key.
create table tmp57 (id1 integer, id2 integer, unique (id1, id2), unique (id2, id1));

-- Test that UNIQUE constraints do NOT get trimmed out if one column list is a prefix of another column list.
-- In the below case `unique (id1, id2)` automatically implies `unique (id1, id2, id3)` so the second unique constraint
-- can be removed. But Postgres keeps both of them so Octo will also keep both of them.
create table tmp58 (id1 integer, id2 integer, id3 integer, unique (id1, id2), unique (id1, id2, id3));

-- Test auto generation of UNIQUE constraint name truncates table and/or column names as needed
-- Table name is short, Column name is long
create table tmp59 (toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrstu integer unique);
-- Table name is long, Column name is short
create table tmp60toolongabcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopq (id integer unique);
-- Table name is long, Column name is long
create table tmp61toolongabcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopq (toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrstu integer unique);
-- Table name is short, Column1 name is long, Column2 name is short
create table tmp62 (id1toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr integer, id2 integer, unique (id1toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr, id2));
-- Table name is short, Column1 name is long, Column2 name is long
create table tmp63 (id1toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr integer, id2toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr integer, unique (id1toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr, id2toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr));
-- Table name is long, Column1 name is short, Column2 name is short
create table tmp64toolongabcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopq (id1 integer, id2 integer, unique (id1, id2));
-- Table name is long, Column1 name is short, Column2 name is long
create table tmp65toolongabcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopq (id1 integer, id2toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr integer, unique (id1, id2toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr));
-- Table name is long, Column1 name is long, Column2 name is short
create table tmp66toolongabcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopq (id1toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr integer, id2 integer, unique (id1toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr, id2));
-- Table name is long, Column1 name is long, Column2 name is long
create table tmp67toolongabcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopq (id1toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr integer, id2toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr integer, unique (id1toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr, id2toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqr));
-- Table name is long, Column1 name is long, Column2 name is long : Multiple UNIQUE constraints with conflicts in auto generated name
create table tmp68toolongabcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopq (toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrid1 integer, toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrid2 integer, unique (toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrid1, toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrid2), unique (toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrid2, toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrid1));
-- Table name is short, Column1 name is half long, Column2 name is half long
-- The last column name gets shortened as much as needed to get the unique name (i.e. `z2` became `z` in `...xyz_key`).
create table tmp69 (abcdefghijklmnopqrstuvwxyz1 integer, abcdefghijklmnopqrstuvwxyz2 integer, unique (abcdefghijklmnopqrstuvwxyz1, abcdefghijklmnopqrstuvwxyz2));

-- Test that when auto generated name already exists, new names are generated using "_key1", "_key2" syntax
create table tmp70 (abcdefghijklmnopqrstuvwxyz1 integer, abcdefghijklmnopqrstuvwxyz2 integer, abcdefghijklmnopqrstuvwxyz3 integer, unique (abcdefghijklmnopqrstuvwxyz1, abcdefghijklmnopqrstuvwxyz2), unique (abcdefghijklmnopqrstuvwxyz1, abcdefghijklmnopqrstuvwxyz3));
create table tmp71 (abcdefghijklmnopqrstuvwxyz1 integer, abcdefghijklmnopqrstuvwxyz2 integer, abcdefghijklmnopqrstuvwxyz3 integer, abcdefghijklmnopqrstuvwxyz4 integer, unique (abcdefghijklmnopqrstuvwxyz1, abcdefghijklmnopqrstuvwxyz2), unique (abcdefghijklmnopqrstuvwxyz1, abcdefghijklmnopqrstuvwxyz2, abcdefghijklmnopqrstuvwxyz3), unique (abcdefghijklmnopqrstuvwxyz1, abcdefghijklmnopqrstuvwxyz4, abcdefghijklmnopqrstuvwxyz2, abcdefghijklmnopqrstuvwxyz3));

-- Test auto generated UNIQUE constraint name collision with another named UNIQUE constraint name
create table tmp72 (id1 integer constraint tmp72_id2_key unique, id2 integer unique);

-- Test auto generated UNIQUE constraint name collision with another named CHECK constraint name
create table tmp73 (id1 integer constraint tmp73_id2_key CHECK (id1 > 1), id2 integer unique);

-- Test auto generated CHECK constraint name collision with another named UNIQUE constraint name
create table tmp74 (id1 integer constraint tmp74_id2_check unique, id2 integer CHECK (id2 > 1));

-- Test auto generated UNIQUE constraint name collision with CHECK constraint causes it to use "_key2"
create table tmp75toolongabcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopq (toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrid1 integer, toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrid2 integer, constraint tmp75toolongabcdefghijklmnopq_toolong1abcdefghijklmnopqrst_key1 CHECK (1 > 1), unique (toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrid1, toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrid2), unique (toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrid2, toolong1abcdefghijklmnopqrstuvwxyztoolong2abcdefghijklmnopqrid1));

CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
# Generate and Run query file select.sql that does a SELECT * of all tables created in TCTC005.sql
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID|FIRSTNAME
(0 rows)
ID|FIRSTNAME|LASTNAME
(0 rows)
ID|LASTNAME
(0 rows)
ID|LASTNAME
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID
(0 rows)
LASTNAME
(0 rows)
LASTNAME
(0 rows)
LASTNAME
(0 rows)
LASTNAME
(0 rows)
LASTNAME
(0 rows)
ID
(0 rows)
ID
(0 rows)
PRODUCT_NO|NAME|PRICE
(0 rows)
ID|NAME|FIRSTNAME
(0 rows)
ID
(0 rows)
ID
(0 rows)
PRODUCT_NO|NAME|PRICE
(0 rows)
PRODUCT_NO|NAME|PRICE
(0 rows)
PRODUCT_NO|NAME|PRICE
(0 rows)
ID|NAME
(0 rows)
ID|NAME
(0 rows)
ID|NAME
(0 rows)
FIRSTNAME
(0 rows)
FIRSTNAME
(0 rows)
ID|FIRSTNAME
(0 rows)
ID
(0 rows)
ID
(0 rows)
ID1|ID2
(0 rows)
ID1|ID2
(0 rows)
ID1
(0 rows)
ID|NAME
(0 rows)
ID|NAME
(0 rows)
ID1|ID2
(0 rows)
ID1|ID2
(0 rows)
ID1|ID2
(0 rows)
ID1|ID2
(0 rows)
ID1
(0 rows)
ID1|ID2
(0 rows)
ID1|ID2
(0 rows)
ID|NAME
(0 rows)
ID1|ID2
(0 rows)
ID1|ID2|ID3
(0 rows)
TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRSTU
(0 rows)
ID
(0 rows)
TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRSTU
(0 rows)
ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR|ID2
(0 rows)
ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR|ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR
(0 rows)
ID1|ID2
(0 rows)
ID1|ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR
(0 rows)
ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR|ID2
(0 rows)
ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR|ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR
(0 rows)
TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1|TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2
(0 rows)
ABCDEFGHIJKLMNOPQRSTUVWXYZ1|ABCDEFGHIJKLMNOPQRSTUVWXYZ2
(0 rows)
ABCDEFGHIJKLMNOPQRSTUVWXYZ1|ABCDEFGHIJKLMNOPQRSTUVWXYZ2|ABCDEFGHIJKLMNOPQRSTUVWXYZ3
(0 rows)
ABCDEFGHIJKLMNOPQRSTUVWXYZ1|ABCDEFGHIJKLMNOPQRSTUVWXYZ2|ABCDEFGHIJKLMNOPQRSTUVWXYZ3|ABCDEFGHIJKLMNOPQRSTUVWXYZ4
(0 rows)
ID1|ID2
(0 rows)
ID1|ID2
(0 rows)
ID1|ID2
(0 rows)
TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1|TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2
(0 rows)
# Verify CHECK constraints are correctly stored in the CREATE TABLE text definition (in global variable nodes)
`TMP01` (`ID` INTEGER DELIM """",  CONSTRAINT TMP01_CHECK CHECK (((TRUE IS UNKNOWN) AND (FALSE IS NULL))))
`TMP02` (`ID` INTEGER CONSTRAINT TMP02_ID_CHECK CHECK (((('abcd' != 'efgh') AND (1 <= ID)) AND (1.5 > ABS((- 2.35))))) DELIM """")
`TMP03` (`ID` INTEGER DELIM """",  CONSTRAINT TMP03_CHECK CHECK ((NOT (NULLIF(1.0,1) IS NOT NULL))))
`TMP04` (`ID` INTEGER PIECE 1, `FIRSTNAME` VARCHAR CONSTRAINT TMP04_FIRSTNAME_CHECK CHECK ((GREATEST(FIRSTNAME, 'abcd', NULL, 'zzz') IS NULL)) PIECE 2)
`TMP05` (`ID` INTEGER PIECE 1, `FIRSTNAME` VARCHAR PIECE 2, `LASTNAME` VARCHAR PIECE 3,  CONSTRAINT TMP05_CHECK CHECK ((LEAST((FIRSTNAME || 'efgh'), LASTNAME, (FIRSTNAME || LASTNAME)) IS NULL)))
`TMP06` (`ID` INTEGER PIECE 1, `LASTNAME` VARCHAR CONSTRAINT TMP06_LASTNAME_CHECK CHECK ((COALESCE(NULL, LASTNAME) IS NULL)) PIECE 2)
`TMP07` (`ID` INTEGER PIECE 1, `LASTNAME` VARCHAR PIECE 2,  CONSTRAINT TMP07_CHECK CHECK ((NULLIF(NULL,2) IS NULL)))
`TMP08` (`ID` INTEGER CONSTRAINT TMP08_ID_CHECK CHECK (CASE ID WHEN 2 THEN TRUE END) DELIM """")
`TMP09` (`ID` INTEGER CONSTRAINT TMP09_ID_CHECK CHECK (CASE ID WHEN 2 THEN TRUE ELSE FALSE END) DELIM """")
`TMP10` (`ID` INTEGER CONSTRAINT TMP10_ID_CHECK CHECK (CASE WHEN (ID IS NULL) THEN TRUE END) DELIM """")
`TMP11` (`ID` INTEGER CONSTRAINT TMP11_ID_CHECK CHECK (CASE WHEN (ID IS NULL) THEN TRUE ELSE FALSE END) DELIM """")
`TMP12` (`ID` INTEGER CONSTRAINT TMP12_ID_CHECK CHECK (ID::BOOLEAN) DELIM """")
`TMP13` (`ID` INTEGER CONSTRAINT TMP13_ID_CHECK CHECK ((ID::NUMERIC(3) = 3.0)) DELIM """")
`TMP14` (`ID` INTEGER CONSTRAINT TMP14_ID_CHECK CHECK ((ID::NUMERIC(4,1) != 4.5)) DELIM """")
`TMP15` (`ID` INTEGER CONSTRAINT TMP15_ID_CHECK CHECK ((ID::INTEGER < 4)) DELIM """")
`TMP16` (`ID` INTEGER CONSTRAINT TMP16_ID_CHECK CHECK ((ID::VARCHAR(10) > 'abcd')) DELIM """")
`TMP17` (`ID` INTEGER CONSTRAINT TMP17_ID_CHECK CHECK (((+ ID) >= (- 2))) DELIM """")
`TMP18` (`ID` INTEGER CONSTRAINT TMP18_ID_CHECK CHECK ((NOT ID::BOOLEAN)) DELIM """")
`TMP19` (`ID` INTEGER CONSTRAINT TMP19_ID_CHECK CHECK ((((ID + (ID % 3)) - (ID * 2)) <= (ID / 20))) DELIM """")
`TMP20` (`ID` INTEGER CONSTRAINT TMP20_ID_CHECK CHECK ((ID::BOOLEAN OR (NOT ID::BOOLEAN))) DELIM """")
`TMP21` (`ID` INTEGER CONSTRAINT TMP21_ID_CHECK CHECK ((ID::BOOLEAN AND (NOT ID::BOOLEAN))) DELIM """")
`TMP22` (`LASTNAME` VARCHAR CONSTRAINT TMP22_LASTNAME_CHECK CHECK ((LASTNAME ~ 'abcd')) DELIM """")
`TMP23` (`LASTNAME` VARCHAR CONSTRAINT TMP23_LASTNAME_CHECK CHECK ((LASTNAME ~* 'abcd')) DELIM """")
`TMP24` (`LASTNAME` VARCHAR CONSTRAINT TMP24_LASTNAME_CHECK CHECK (((LASTNAME LIKE 'abcd%') OR (NOT (LASTNAME LIKE 'abcd%')))) DELIM """")
`TMP25` (`LASTNAME` VARCHAR CONSTRAINT TMP25_LASTNAME_CHECK CHECK (((LASTNAME ILIKE 'ab%cd') OR (NOT (LASTNAME ILIKE 'ab%cd')))) DELIM """")
`TMP26` (`LASTNAME` VARCHAR CONSTRAINT TMP26_LASTNAME_CHECK CHECK (((LASTNAME SIMILAR TO 'ab%cd') AND (NOT (LASTNAME SIMILAR TO 'ab%cd')))) DELIM """")
`TMP27` (`ID` INTEGER CONSTRAINT TMP27_ID_CHECK CHECK ((ID IN (2, 3))) DELIM """")
`TMP28` (`ID` INTEGER CONSTRAINT TMP28_ID_CHECK CHECK ((ID NOT IN (2, 3))) DELIM """")
`TMP29` (`PRODUCT_NO` INTEGER PIECE 1, `NAME` VARCHAR PIECE 2, `PRICE` NUMERIC PIECE 3,  CONSTRAINT TMP29_CHECK CHECK ((PRICE > PRODUCT_NO)))
`TMP30` (`ID` INTEGER CONSTRAINT TMP30_ID_KEY UNIQUE (ID) PIECE 1, `NAME` VARCHAR NOT NULL PIECE 2, `FIRSTNAME` VARCHAR CONSTRAINT NAME1 CHECK ((FIRSTNAME IS NOT NULL)) PIECE 3)
`TMP31` (`ID` INTEGER DELIM """",  CONSTRAINT TMP31_CHECK CHECK (((1 + 2) = 3)),  CONSTRAINT TMP31_CHECK1 CHECK (((2 + 3) = 5)))
`TMP32` (`ID` INTEGER CONSTRAINT TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRSTU CHECK ((ID < 2)) DELIM """")
`TMP33` (`PRODUCT_NO` INTEGER PIECE 1, `NAME` VARCHAR PIECE 2, `PRICE` NUMERIC CONSTRAINT TMP33_PRICE_CHECK CHECK ((PRICE > 0)) CONSTRAINT TMP33_PRICE_CHECK1 CHECK ((PRICE > 5)) CONSTRAINT TMP33_PRICE_CHECK2 CHECK ((PRICE < 10)) PIECE 3)
`TMP34` (`PRODUCT_NO` INTEGER PIECE 1, `NAME` VARCHAR PIECE 2, `PRICE` NUMERIC PIECE 3,  CONSTRAINT TMP34_CHECK CHECK ((PRICE > PRODUCT_NO)))
`TMP35` (`PRODUCT_NO` INTEGER PIECE 1, `NAME` VARCHAR PIECE 2, `PRICE` NUMERIC PIECE 3,  CONSTRAINT TMP35_CHECK CHECK ((PRICE > PRODUCT_NO)))
`TMP36` (`ID` INTEGER CONSTRAINT TMP36_ID_CHECK CHECK ((ID > 0)) PIECE 1, `NAME` VARCHAR PIECE 2)
`TMP37` (`ID` INTEGER CONSTRAINT TMP37_ID_CHECK CHECK ((ID > 0)) PIECE 1, `NAME` VARCHAR CONSTRAINT TMP37_NAME_CHECK CHECK ((NAME IS NOT NULL)) PIECE 2,  CONSTRAINT TMP37_CHECK CHECK (((NAME || ID) = 'Zero2')))
`TMP38` (`ID` INTEGER PIECE 1, `NAME` VARCHAR CONSTRAINT TMP38_NAME_CHECK CHECK ((NAME IS NOT NULL)) PIECE 2,  CONSTRAINT TMP38_CHECK CHECK ((2 > 0)))
`TMP39` ( CONSTRAINT TMP39_CHECK CHECK ((1 > 0)), `FIRSTNAME` VARCHAR CONSTRAINT TMP39_FIRSTNAME_CHECK CHECK ((FIRSTNAME > 'abcd')) DELIM """")
`TMP40` ( CONSTRAINT TMP40_CHECK CHECK ((1 > 0)),  CONSTRAINT TMP40_CHECK1 CHECK ((2 > 1)), `FIRSTNAME` VARCHAR CONSTRAINT TMP40_FIRSTNAME_CHECK CHECK ((FIRSTNAME > 'abcd')) DELIM """")
`TMP41` (`ID` INTEGER PIECE 1,  CONSTRAINT TMP41_CHECK CHECK ((1 > 0)), `FIRSTNAME` VARCHAR CONSTRAINT TMP41_FIRSTNAME_CHECK CHECK ((FIRSTNAME > 'abcd')) PIECE 2)
`TMP42` (`ID` INTEGER CONSTRAINT UNIQ1 UNIQUE (ID) DELIM """")
`TMP43` (`ID` INTEGER CONSTRAINT UNIQ1 UNIQUE (ID) DELIM """")
`TMP44` (`ID1` INTEGER PIECE 1, `ID2` INTEGER PIECE 2,  CONSTRAINT UNIQ1 UNIQUE (ID1, ID2))
`TMP45` (`ID1` INTEGER CONSTRAINT TMP45_ID1_CHECK CHECK ((ID1 > 2)) PIECE 1, `ID2` INTEGER PIECE 2,  CONSTRAINT TMP45_ID1_ID2_KEY UNIQUE (ID1, ID2))
`TMP46` (`ID1` INTEGER CONSTRAINT U1 UNIQUE (ID1) DELIM """")
`TMP47` (`ID` INTEGER CONSTRAINT UNIQ2 UNIQUE (ID) PIECE 1, `NAME` VARCHAR CONSTRAINT UNIQ1 UNIQUE (NAME) PIECE 2)
`TMP48` (`ID` INTEGER CONSTRAINT UNIQ2 UNIQUE (ID) PIECE 1, `NAME` VARCHAR CONSTRAINT UNIQ1 UNIQUE (NAME) PIECE 2)
`TMP49` (`ID1` INTEGER PIECE 1, `ID2` INTEGER PIECE 2,  CONSTRAINT U1 UNIQUE (ID1, ID2),  CONSTRAINT U2 UNIQUE (ID2, ID1))
`TMP50` (`ID1` INTEGER PIECE 1, `ID2` INTEGER PIECE 2,  CONSTRAINT U1 UNIQUE (ID1, ID2))
`TMP51` (`ID1` INTEGER PIECE 1, `ID2` INTEGER PIECE 2,  CONSTRAINT U2 UNIQUE (ID1, ID2))
`TMP52` (`ID1` INTEGER CONSTRAINT U2 UNIQUE (ID1) PIECE 1, `ID2` INTEGER PIECE 2)
`TMP53` (`ID1` INTEGER CONSTRAINT UNIQ UNIQUE (ID1) DELIM """")
`TMP54` (`ID1` INTEGER PIECE 1, `ID2` INTEGER CONSTRAINT UNIQ UNIQUE (ID2) PIECE 2)
`TMP55` (`ID1` INTEGER PIECE 1,  CONSTRAINT UNIQ UNIQUE (ID1, ID2), `ID2` INTEGER PIECE 2)
`TMP56` (`ID` INTEGER CONSTRAINT UNIQ1 UNIQUE (ID) PIECE 1, `NAME` VARCHAR CONSTRAINT UNIQ2 UNIQUE (NAME) PIECE 2)
`TMP57` (`ID1` INTEGER PIECE 1, `ID2` INTEGER PIECE 2,  CONSTRAINT TMP57_ID1_ID2_KEY UNIQUE (ID1, ID2),  CONSTRAINT TMP57_ID2_ID1_KEY UNIQUE (ID2, ID1))
`TMP58` (`ID1` INTEGER PIECE 1, `ID2` INTEGER PIECE 2, `ID3` INTEGER PIECE 3,  CONSTRAINT TMP58_ID1_ID2_KEY UNIQUE (ID1, ID2),  CONSTRAINT TMP58_ID1_ID2_ID3_KEY UNIQUE (ID1, ID2, ID3))
`TMP59` (`TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRSTU` INTEGER CONSTRAINT TMP59_TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJK_KEY UNIQUE (TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRSTU) DELIM """")
`TMP60TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ` (`ID` INTEGER CONSTRAINT TMP60TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJ_ID_KEY UNIQUE (ID) DELIM """")
`TMP61TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ` (`TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRSTU` INTEGER CONSTRAINT TMP61TOOLONGABCDEFGHIJKLMNOPQ_TOOLONG1ABCDEFGHIJKLMNOPQRSTU_KEY UNIQUE (TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRSTU) DELIM """")
`TMP62` (`ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR` INTEGER PIECE 1, `ID2` INTEGER PIECE 2,  CONSTRAINT TMP62_ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGH_KEY UNIQUE (ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR, ID2))
`TMP63` (`ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR` INTEGER PIECE 1, `ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR` INTEGER PIECE 2,  CONSTRAINT TMP63_ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGH_KEY UNIQUE (ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR, ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR))
`TMP64TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ` (`ID1` INTEGER PIECE 1, `ID2` INTEGER PIECE 2,  CONSTRAINT TMP64TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDE_ID1_ID2_KEY UNIQUE (ID1, ID2))
`TMP65TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ` (`ID1` INTEGER PIECE 1, `ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR` INTEGER PIECE 2,  CONSTRAINT TMP65TOOLONGABCDEFGHIJKLMNOPQ_ID1_ID2TOOLONG1ABCDEFGHIJKLMN_KEY UNIQUE (ID1, ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR))
`TMP66TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ` (`ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR` INTEGER PIECE 1, `ID2` INTEGER PIECE 2,  CONSTRAINT TMP66TOOLONGABCDEFGHIJKLMNOPQ_ID1TOOLONG1ABCDEFGHIJKLMNOPQR_KEY UNIQUE (ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR, ID2))
`TMP67TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ` (`ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR` INTEGER PIECE 1, `ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR` INTEGER PIECE 2,  CONSTRAINT TMP67TOOLONGABCDEFGHIJKLMNOPQ_ID1TOOLONG1ABCDEFGHIJKLMNOPQR_KEY UNIQUE (ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR, ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR))
`TMP68TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ` (`TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1` INTEGER PIECE 1, `TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2` INTEGER PIECE 2,  CONSTRAINT TMP68TOOLONGABCDEFGHIJKLMNOPQ_TOOLONG1ABCDEFGHIJKLMNOPQRSTU_KEY UNIQUE (TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1, TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2),  CONSTRAINT TMP68TOOLONGABCDEFGHIJKLMNOPQ_TOOLONG1ABCDEFGHIJKLMNOPQRST_KEY1 UNIQUE (TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2, TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1))
`TMP69` (`ABCDEFGHIJKLMNOPQRSTUVWXYZ1` INTEGER PIECE 1, `ABCDEFGHIJKLMNOPQRSTUVWXYZ2` INTEGER PIECE 2,  CONSTRAINT TMP69_ABCDEFGHIJKLMNOPQRSTUVWXYZ1_ABCDEFGHIJKLMNOPQRSTUVWXY_KEY UNIQUE (ABCDEFGHIJKLMNOPQRSTUVWXYZ1, ABCDEFGHIJKLMNOPQRSTUVWXYZ2))
`TMP70` (`ABCDEFGHIJKLMNOPQRSTUVWXYZ1` INTEGER PIECE 1, `ABCDEFGHIJKLMNOPQRSTUVWXYZ2` INTEGER PIECE 2, `ABCDEFGHIJKLMNOPQRSTUVWXYZ3` INTEGER PIECE 3,  CONSTRAINT TMP70_ABCDEFGHIJKLMNOPQRSTUVWXYZ1_ABCDEFGHIJKLMNOPQRSTUVWXY_KEY UNIQUE (ABCDEFGHIJKLMNOPQRSTUVWXYZ1, ABCDEFGHIJKLMNOPQRSTUVWXYZ2),  CONSTRAINT TMP70_ABCDEFGHIJKLMNOPQRSTUVWXYZ1_ABCDEFGHIJKLMNOPQRSTUVWX_KEY1 UNIQUE (ABCDEFGHIJKLMNOPQRSTUVWXYZ1, ABCDEFGHIJKLMNOPQRSTUVWXYZ3))
`TMP71` (`ABCDEFGHIJKLMNOPQRSTUVWXYZ1` INTEGER PIECE 1, `ABCDEFGHIJKLMNOPQRSTUVWXYZ2` INTEGER PIECE 2, `ABCDEFGHIJKLMNOPQRSTUVWXYZ3` INTEGER PIECE 3, `ABCDEFGHIJKLMNOPQRSTUVWXYZ4` INTEGER PIECE 4,  CONSTRAINT TMP71_ABCDEFGHIJKLMNOPQRSTUVWXYZ1_ABCDEFGHIJKLMNOPQRSTUVWXY_KEY UNIQUE (ABCDEFGHIJKLMNOPQRSTUVWXYZ1, ABCDEFGHIJKLMNOPQRSTUVWXYZ2),  CONSTRAINT TMP71_ABCDEFGHIJKLMNOPQRSTUVWXYZ1_ABCDEFGHIJKLMNOPQRSTUVWX_KEY1 UNIQUE (ABCDEFGHIJKLMNOPQRSTUVWXYZ1, ABCDEFGHIJKLMNOPQRSTUVWXYZ2, ABCDEFGHIJKLMNOPQRSTUVWXYZ3),  CONSTRAINT TMP71_ABCDEFGHIJKLMNOPQRSTUVWXYZ1_ABCDEFGHIJKLMNOPQRSTUVWX_KEY2 UNIQUE (ABCDEFGHIJKLMNOPQRSTUVWXYZ1, ABCDEFGHIJKLMNOPQRSTUVWXYZ4, ABCDEFGHIJKLMNOPQRSTUVWXYZ2, ABCDEFGHIJKLMNOPQRSTUVWXYZ3))
`TMP72` (`ID1` INTEGER CONSTRAINT TMP72_ID2_KEY UNIQUE (ID1) PIECE 1, `ID2` INTEGER CONSTRAINT TMP72_ID2_KEY1 UNIQUE (ID2) PIECE 2)
`TMP73` (`ID1` INTEGER CONSTRAINT TMP73_ID2_KEY CHECK ((ID1 > 1)) PIECE 1, `ID2` INTEGER CONSTRAINT TMP73_ID2_KEY1 UNIQUE (ID2) PIECE 2)
`TMP74` (`ID1` INTEGER CONSTRAINT TMP74_ID2_CHECK UNIQUE (ID1) PIECE 1, `ID2` INTEGER CONSTRAINT TMP74_ID2_CHECK1 CHECK ((ID2 > 1)) PIECE 2)
`TMP75TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ` (`TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1` INTEGER PIECE 1, `TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2` INTEGER PIECE 2,  CONSTRAINT TMP75TOOLONGABCDEFGHIJKLMNOPQ_TOOLONG1ABCDEFGHIJKLMNOPQRST_KEY1 CHECK ((1 > 1)),  CONSTRAINT TMP75TOOLONGABCDEFGHIJKLMNOPQ_TOOLONG1ABCDEFGHIJKLMNOPQRSTU_KEY UNIQUE (TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1, TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2),  CONSTRAINT TMP75TOOLONGABCDEFGHIJKLMNOPQ_TOOLONG1ABCDEFGHIJKLMNOPQRST_KEY2 UNIQUE (TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2, TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1))
# Generate and Run query file slashd.sql that does a \d of all tables created in TCTC005.sql
# Also verify that constraint names are created correctly
# 1) Constraints that use only one column in the table end up as column-level constraints
#    and have that column name in their name.
# 2) Constraints that use 0 or more than 1 column in the table end up as table-level constraints
#    and have no column name in their name.
Table "TMP01" stored in Global: ^%ydboctoDQmXuZ0ZhXXnogY33Yp3q34
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP01_CHECK" CHECK (((TRUE IS UNKNOWN) AND (FALSE IS NULL)))
Table "TMP02" stored in Global: ^%ydboctoDqWif6wHKMWPlTwmB7GKf7B
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP02_ID_CHECK" CHECK (((('abcd' != 'efgh') AND (1 <= ID)) AND (1.5 > ABS((- 2.35)))))
Table "TMP03" stored in Global: ^%ydboctoDE9WvrlrreoHZnLdDC6Jt7A
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP03_CHECK" CHECK ((NOT (NULLIF(1.0,1) IS NOT NULL)))
Table "TMP04" stored in Global: ^%ydboctoDyW56dvwoACfnnhXg4IFm2J
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
FIRSTNAME|VARCHAR|||
Check constraints:
    "TMP04_FIRSTNAME_CHECK" CHECK ((GREATEST(FIRSTNAME, 'abcd', NULL, 'zzz') IS NULL))
Table "TMP05" stored in Global: ^%ydboctoDWwRJlJwMkGqjDWD51YrRK7
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
FIRSTNAME|VARCHAR|||
LASTNAME|VARCHAR|||
Check constraints:
    "TMP05_CHECK" CHECK ((LEAST((FIRSTNAME || 'efgh'), LASTNAME, (FIRSTNAME || LASTNAME)) IS NULL))
Table "TMP06" stored in Global: ^%ydboctoDG5UUAQM4Ai5IsSBjAF0H15
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
LASTNAME|VARCHAR|||
Check constraints:
    "TMP06_LASTNAME_CHECK" CHECK ((COALESCE(NULL, LASTNAME) IS NULL))
Table "TMP07" stored in Global: ^%ydboctoDYABuKFTqQ2Imp5bE72Vb12
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
LASTNAME|VARCHAR|||
Check constraints:
    "TMP07_CHECK" CHECK ((NULLIF(NULL,2) IS NULL))
Table "TMP08" stored in Global: ^%ydboctoDZwB968K3LgUM4Km4V8yk0K
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP08_ID_CHECK" CHECK (CASE ID WHEN 2 THEN TRUE END)
Table "TMP09" stored in Global: ^%ydboctoDYnD3qJGcM5i7701mZlhHC1
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP09_ID_CHECK" CHECK (CASE ID WHEN 2 THEN TRUE ELSE FALSE END)
Table "TMP10" stored in Global: ^%ydboctoDsB9o7K9SdzhnoZdZHB3G79
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP10_ID_CHECK" CHECK (CASE WHEN (ID IS NULL) THEN TRUE END)
Table "TMP11" stored in Global: ^%ydboctoDePHJ8U1ic9ZmpfbO1jBcCI
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP11_ID_CHECK" CHECK (CASE WHEN (ID IS NULL) THEN TRUE ELSE FALSE END)
Table "TMP12" stored in Global: ^%ydboctoDuqP3PRpIuwuoFIfKqHrsBF
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP12_ID_CHECK" CHECK (ID::BOOLEAN)
Table "TMP13" stored in Global: ^%ydboctoDoMQoH61fSwIQ3JWq41AHBI
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP13_ID_CHECK" CHECK ((ID::NUMERIC(3) = 3.0))
Table "TMP14" stored in Global: ^%ydboctoDl98Mecj8NkjLdib9rTvbHB
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP14_ID_CHECK" CHECK ((ID::NUMERIC(4,1) != 4.5))
Table "TMP15" stored in Global: ^%ydboctoDHiGzd8PSa1IoUJDIX3ky4C
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP15_ID_CHECK" CHECK ((ID::INTEGER < 4))
Table "TMP16" stored in Global: ^%ydboctoDa2DKCUZKYWHh1leGdHqFC7
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP16_ID_CHECK" CHECK ((ID::VARCHAR(10) > 'abcd'))
Table "TMP17" stored in Global: ^%ydboctoDrGMwHc1f2FW5EH2TZlpBCI
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP17_ID_CHECK" CHECK (((+ ID) >= (- 2)))
Table "TMP18" stored in Global: ^%ydboctoD7TKkBrXRXgVontkJw7lnF9
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP18_ID_CHECK" CHECK ((NOT ID::BOOLEAN))
Table "TMP19" stored in Global: ^%ydboctoDWQUquMmwZzNl2xLkfyTrJ4
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP19_ID_CHECK" CHECK ((((ID + (ID % 3)) - (ID * 2)) <= (ID / 20)))
Table "TMP20" stored in Global: ^%ydboctoDmc0cfWZ8eVqFFEQZsSxc94
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP20_ID_CHECK" CHECK ((ID::BOOLEAN OR (NOT ID::BOOLEAN)))
Table "TMP21" stored in Global: ^%ydboctoDKTOqCmhsHpvjRIbaDcPK5D
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP21_ID_CHECK" CHECK ((ID::BOOLEAN AND (NOT ID::BOOLEAN)))
Table "TMP22" stored in Global: ^%ydboctoDrMa5ZppyPAU1guMtwytpF7
Column|Type|Collation|Nullable|Default
LASTNAME|VARCHAR|||
Check constraints:
    "TMP22_LASTNAME_CHECK" CHECK ((LASTNAME ~ 'abcd'))
Table "TMP23" stored in Global: ^%ydboctoD38b31KcX3xmef68bHU1OJJ
Column|Type|Collation|Nullable|Default
LASTNAME|VARCHAR|||
Check constraints:
    "TMP23_LASTNAME_CHECK" CHECK ((LASTNAME ~* 'abcd'))
Table "TMP24" stored in Global: ^%ydboctoD6q5EN4gpq4TVu1pDBs4gF7
Column|Type|Collation|Nullable|Default
LASTNAME|VARCHAR|||
Check constraints:
    "TMP24_LASTNAME_CHECK" CHECK (((LASTNAME LIKE 'abcd%') OR (NOT (LASTNAME LIKE 'abcd%'))))
Table "TMP25" stored in Global: ^%ydboctoDnScgPBXMUPw3CF2uAm4K79
Column|Type|Collation|Nullable|Default
LASTNAME|VARCHAR|||
Check constraints:
    "TMP25_LASTNAME_CHECK" CHECK (((LASTNAME ILIKE 'ab%cd') OR (NOT (LASTNAME ILIKE 'ab%cd'))))
Table "TMP26" stored in Global: ^%ydboctoD2GzyprwzrOC9fhEZe18x1D
Column|Type|Collation|Nullable|Default
LASTNAME|VARCHAR|||
Check constraints:
    "TMP26_LASTNAME_CHECK" CHECK (((LASTNAME SIMILAR TO 'ab%cd') AND (NOT (LASTNAME SIMILAR TO 'ab%cd'))))
Table "TMP27" stored in Global: ^%ydboctoDRF0bjzkA7Vt7YEFPlg1yJ1
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP27_ID_CHECK" CHECK ((ID IN (2, 3)))
Table "TMP28" stored in Global: ^%ydboctoDgis2ceFzmGYL9N7m17IOE6
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP28_ID_CHECK" CHECK ((ID NOT IN (2, 3)))
Table "TMP29" stored in Global: ^%ydboctoDqAlD285yusTp7hFPDnw6HK
Column|Type|Collation|Nullable|Default
PRODUCT_NO|INTEGER|||
NAME|VARCHAR|||
PRICE|NUMERIC|||
Check constraints:
    "TMP29_CHECK" CHECK ((PRICE > PRODUCT_NO))
Table "TMP30" stored in Global: ^%ydboctoDng1fk24YdpuoN2wSE2S388
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
NAME|VARCHAR||NOT NULL|
FIRSTNAME|VARCHAR|||
Indexes:
    "TMP30_ID_KEY" UNIQUE CONSTRAINT, Column(s) (ID), Global ^%ydboctoUkUJh60m5ogKUKCHm1geTB6
Check constraints:
    "NAME1" CHECK ((FIRSTNAME IS NOT NULL))
Table "TMP31" stored in Global: ^%ydboctoDZjm1TG01SPrHokEnBGZmE6
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TMP31_CHECK" CHECK (((1 + 2) = 3))
    "TMP31_CHECK1" CHECK (((2 + 3) = 5))
Table "TMP32" stored in Global: ^%ydboctoDXLF0Tgu3y0Xs2HcDxzqg1B
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Check constraints:
    "TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRSTU" CHECK ((ID < 2))
Table "TMP33" stored in Global: ^%ydboctoDLkY5Rovedt81jvEdO3dY41
Column|Type|Collation|Nullable|Default
PRODUCT_NO|INTEGER|||
NAME|VARCHAR|||
PRICE|NUMERIC|||
Check constraints:
    "TMP33_PRICE_CHECK" CHECK ((PRICE > 0))
    "TMP33_PRICE_CHECK1" CHECK ((PRICE > 5))
    "TMP33_PRICE_CHECK2" CHECK ((PRICE < 10))
Table "TMP34" stored in Global: ^%ydboctoDYIVBdmvNQV4KWXkSEJTF2F
Column|Type|Collation|Nullable|Default
PRODUCT_NO|INTEGER|||
NAME|VARCHAR|||
PRICE|NUMERIC|||
Check constraints:
    "TMP34_CHECK" CHECK ((PRICE > PRODUCT_NO))
Table "TMP35" stored in Global: ^%ydboctoDJk8vaQo21o9AKH7BPtER6G
Column|Type|Collation|Nullable|Default
PRODUCT_NO|INTEGER|||
NAME|VARCHAR|||
PRICE|NUMERIC|||
Check constraints:
    "TMP35_CHECK" CHECK ((PRICE > PRODUCT_NO))
Table "TMP36" stored in Global: ^%ydboctoDQZtA4nt6vFk0JTzw9eUqEE
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
NAME|VARCHAR|||
Check constraints:
    "TMP36_ID_CHECK" CHECK ((ID > 0))
Table "TMP37" stored in Global: ^%ydboctoDSfl6pGJHvOJsSFNWeZ9cI8
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
NAME|VARCHAR|||
Check constraints:
    "TMP37_ID_CHECK" CHECK ((ID > 0))
    "TMP37_NAME_CHECK" CHECK ((NAME IS NOT NULL))
    "TMP37_CHECK" CHECK (((NAME || ID) = 'Zero2'))
Table "TMP38" stored in Global: ^%ydboctoDolISbGNJJV4N71nDQe0l7A
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
NAME|VARCHAR|||
Check constraints:
    "TMP38_NAME_CHECK" CHECK ((NAME IS NOT NULL))
    "TMP38_CHECK" CHECK ((2 > 0))
Table "TMP39" stored in Global: ^%ydboctoDFMYiNJ1X4rWL0DqL2e4oAI
Column|Type|Collation|Nullable|Default
FIRSTNAME|VARCHAR|||
Check constraints:
    "TMP39_CHECK" CHECK ((1 > 0))
    "TMP39_FIRSTNAME_CHECK" CHECK ((FIRSTNAME > 'abcd'))
Table "TMP40" stored in Global: ^%ydboctoD4eHCNF7wv5GqioVHSXpDJ0
Column|Type|Collation|Nullable|Default
FIRSTNAME|VARCHAR|||
Check constraints:
    "TMP40_CHECK" CHECK ((1 > 0))
    "TMP40_CHECK1" CHECK ((2 > 1))
    "TMP40_FIRSTNAME_CHECK" CHECK ((FIRSTNAME > 'abcd'))
Table "TMP41" stored in Global: ^%ydboctoDUuUOQQSpxbOogPa3qD93JL
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
FIRSTNAME|VARCHAR|||
Check constraints:
    "TMP41_CHECK" CHECK ((1 > 0))
    "TMP41_FIRSTNAME_CHECK" CHECK ((FIRSTNAME > 'abcd'))
Table "TMP42" stored in Global: ^%ydboctoDyHkIain830pZNbh9OfPiD9
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Indexes:
    "UNIQ1" UNIQUE CONSTRAINT, Column(s) (ID), Global ^%ydboctoU2BIiBPQiuuCJq3kHWdL01D
Table "TMP43" stored in Global: ^%ydboctoD2jrTPMuugsLtHEGzuHQVEL
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Indexes:
    "UNIQ1" UNIQUE CONSTRAINT, Column(s) (ID), Global ^%ydboctoU69KUyxVlcvsJqm1X1WpjDK
Table "TMP44" stored in Global: ^%ydboctoDS8fJus40eBmKfRARUsLhKF
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "UNIQ1" UNIQUE CONSTRAINT, Column(s) (ID1, ID2), Global ^%ydboctoUbdEbGW5g5OacP5JHoyStIL
Table "TMP45" stored in Global: ^%ydboctoD47cwyRSDqqpIRLVCnYYKFA
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "TMP45_ID1_ID2_KEY" UNIQUE CONSTRAINT, Column(s) (ID1, ID2), Global ^%ydboctoUsxVBUiXJxFAxqECAUJeR3K
Check constraints:
    "TMP45_ID1_CHECK" CHECK ((ID1 > 2))
Table "TMP46" stored in Global: ^%ydboctoDotxjYlgFcME3lvkhIKCw6L
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
Indexes:
    "U1" UNIQUE CONSTRAINT, Column(s) (ID1), Global ^%ydboctoUCfvb6WNyVhDoVSxIMiL193
Table "TMP47" stored in Global: ^%ydboctoDpPBJpez3d0AtkAI2FEVxI4
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
NAME|VARCHAR|||
Indexes:
    "UNIQ2" UNIQUE CONSTRAINT, Column(s) (ID), Global ^%ydboctoUCASuuiDF20vsLEHmPGMYIG
    "UNIQ1" UNIQUE CONSTRAINT, Column(s) (NAME), Global ^%ydboctoU3CKj6KyThQ76ycneOaX26C
Table "TMP48" stored in Global: ^%ydboctoDon7iGajRdrASMnTNgFA3JD
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
NAME|VARCHAR|||
Indexes:
    "UNIQ2" UNIQUE CONSTRAINT, Column(s) (ID), Global ^%ydboctoUOpVCqUnXp9YpGJPpt9rKK9
    "UNIQ1" UNIQUE CONSTRAINT, Column(s) (NAME), Global ^%ydboctoUz1AlU2XJOBtB21dVyHEe3B
Table "TMP49" stored in Global: ^%ydboctoDmAcmKV2omwL3C9rwmss722
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "U1" UNIQUE CONSTRAINT, Column(s) (ID1, ID2), Global ^%ydboctoUI4e1vxbtrQd2L0o5XohO20
    "U2" UNIQUE CONSTRAINT, Column(s) (ID2, ID1), Global ^%ydboctoU37krKzq9aFPAh9dPeMLkA6
Table "TMP50" stored in Global: ^%ydboctoDShHfHsyqiAATDUVMzru3BB
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "U1" UNIQUE CONSTRAINT, Column(s) (ID1, ID2), Global ^%ydboctoUKmxuxZS5EIpFxXQzkW3v2F
Table "TMP51" stored in Global: ^%ydboctoDhU1BsHiBeW3BB1amYgtd8K
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "U2" UNIQUE CONSTRAINT, Column(s) (ID1, ID2), Global ^%ydboctoUljITRbYPU1bjwNqfzqgt2G
Table "TMP52" stored in Global: ^%ydboctoDRX77t3PYczbmVhhtZxYSHI
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "U2" UNIQUE CONSTRAINT, Column(s) (ID1), Global ^%ydboctoUQVEZ6VDE2VSfkKUb2ioi70
Table "TMP53" stored in Global: ^%ydboctoDhZwc8lu5JTzF14PD70oF1E
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
Indexes:
    "UNIQ" UNIQUE CONSTRAINT, Column(s) (ID1), Global ^%ydboctoUi4IxZq0Vzy9j11Q8pFCJCI
Table "TMP54" stored in Global: ^%ydboctoD72ylbReGS2dtN6WtTAPbH3
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "UNIQ" UNIQUE CONSTRAINT, Column(s) (ID2), Global ^%ydboctoUm2Eacmm5KSFrzB1ua1ZsEA
Table "TMP55" stored in Global: ^%ydboctoDjYhIsdn9QRxh2aPuf2nL08
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "UNIQ" UNIQUE CONSTRAINT, Column(s) (ID1, ID2), Global ^%ydboctoUIAc6gjR0keHXrfu0f38w0B
Table "TMP56" stored in Global: ^%ydboctoDpCPVAhveA3Lik4IM6a4hLD
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
NAME|VARCHAR|||
Indexes:
    "UNIQ1" UNIQUE CONSTRAINT, Column(s) (ID), Global ^%ydboctoUoqFez7TJvRRg2qIZmVIw1C
    "UNIQ2" UNIQUE CONSTRAINT, Column(s) (NAME), Global ^%ydboctoUuh4SpcsnWyytsWItm1WMCJ
Table "TMP57" stored in Global: ^%ydboctoDVHZk3XXw6EyDdJussqz6E1
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "TMP57_ID1_ID2_KEY" UNIQUE CONSTRAINT, Column(s) (ID1, ID2), Global ^%ydboctoUjSIsqpojHJPnhSj42MWU82
    "TMP57_ID2_ID1_KEY" UNIQUE CONSTRAINT, Column(s) (ID2, ID1), Global ^%ydboctoUtl25Ueq3Qng4q8yaMH4DCL
Table "TMP58" stored in Global: ^%ydboctoDdhisDkHG2kiXEYpFlfXrL0
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
ID3|INTEGER|||
Indexes:
    "TMP58_ID1_ID2_KEY" UNIQUE CONSTRAINT, Column(s) (ID1, ID2), Global ^%ydboctoUb1D4fT7hrOufsqHgmZYo73
    "TMP58_ID1_ID2_ID3_KEY" UNIQUE CONSTRAINT, Column(s) (ID1, ID2, ID3), Global ^%ydboctoU7dlPXw4iEQwcjAkhxkmEJI
Table "TMP59" stored in Global: ^%ydboctoDO9cXd4xl7Al9HrCWJLplA2
Column|Type|Collation|Nullable|Default
TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRSTU|INTEGER|||
Indexes:
    "TMP59_TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJK_KEY" UNIQUE CONSTRAINT, Column(s) (TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRSTU), Global ^%ydboctoUyCpLqWN0cy8flwctbJ0gE7
Table "TMP60TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ" stored in Global: ^%ydboctoDTSTnRDBZQOg8DEUAdRzo7F
Column|Type|Collation|Nullable|Default
ID|INTEGER|||
Indexes:
    "TMP60TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJ_ID_KEY" UNIQUE CONSTRAINT, Column(s) (ID), Global ^%ydboctoU9PD6mmQRQCAzF4KZ5qjm45
Table "TMP61TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ" stored in Global: ^%ydboctoDQfatBFD2DRmGq2MnIZxn7G
Column|Type|Collation|Nullable|Default
TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRSTU|INTEGER|||
Indexes:
    "TMP61TOOLONGABCDEFGHIJKLMNOPQ_TOOLONG1ABCDEFGHIJKLMNOPQRSTU_KEY" UNIQUE CONSTRAINT, Column(s) (TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRSTU), Global ^%ydboctoUL8Fmz9joirrnHX69PjpCHK
Table "TMP62" stored in Global: ^%ydboctoD1ToCbK6BOjD9O1pzxNllDB
Column|Type|Collation|Nullable|Default
ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR|INTEGER|||
ID2|INTEGER|||
Indexes:
    "TMP62_ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGH_KEY" UNIQUE CONSTRAINT, Column(s) (ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR, ID2), Global ^%ydboctoUbFuaWSbrWVLVL8wbdrW69J
Table "TMP63" stored in Global: ^%ydboctoDwy9zKil0yO3GVAblTgh4K9
Column|Type|Collation|Nullable|Default
ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR|INTEGER|||
ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR|INTEGER|||
Indexes:
    "TMP63_ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGH_KEY" UNIQUE CONSTRAINT, Column(s) (ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR, ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR), Global ^%ydboctoUgs5a8ySsbRLlJTLl5x4pBK
Table "TMP64TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ" stored in Global: ^%ydboctoDlu4mNvKwkGhDRgJG47viB9
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "TMP64TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDE_ID1_ID2_KEY" UNIQUE CONSTRAINT, Column(s) (ID1, ID2), Global ^%ydboctoUfNuu8mBIVHFHHTpFoOut96
Table "TMP65TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ" stored in Global: ^%ydboctoDWYDnaKrMdU8GWt6Lqi324I
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR|INTEGER|||
Indexes:
    "TMP65TOOLONGABCDEFGHIJKLMNOPQ_ID1_ID2TOOLONG1ABCDEFGHIJKLMN_KEY" UNIQUE CONSTRAINT, Column(s) (ID1, ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR), Global ^%ydboctoU91EsgOCkIintfiV9UiG093
Table "TMP66TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ" stored in Global: ^%ydboctoDsnq6rI9eAa36QntRX6qj3A
Column|Type|Collation|Nullable|Default
ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR|INTEGER|||
ID2|INTEGER|||
Indexes:
    "TMP66TOOLONGABCDEFGHIJKLMNOPQ_ID1TOOLONG1ABCDEFGHIJKLMNOPQR_KEY" UNIQUE CONSTRAINT, Column(s) (ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR, ID2), Global ^%ydboctoUE8PIe6hDLpGjTjjAWSSk96
Table "TMP67TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ" stored in Global: ^%ydboctoDSAxHDcsn1gwKs5AxmROkIF
Column|Type|Collation|Nullable|Default
ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR|INTEGER|||
ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR|INTEGER|||
Indexes:
    "TMP67TOOLONGABCDEFGHIJKLMNOPQ_ID1TOOLONG1ABCDEFGHIJKLMNOPQR_KEY" UNIQUE CONSTRAINT, Column(s) (ID1TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR, ID2TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQR), Global ^%ydboctoUAwT2KVloPvCihWSbhxQsE1
Table "TMP68TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ" stored in Global: ^%ydboctoDouDhmoHRHw0JQiDNbn32L9
Column|Type|Collation|Nullable|Default
TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1|INTEGER|||
TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2|INTEGER|||
Indexes:
    "TMP68TOOLONGABCDEFGHIJKLMNOPQ_TOOLONG1ABCDEFGHIJKLMNOPQRSTU_KEY" UNIQUE CONSTRAINT, Column(s) (TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1, TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2), Global ^%ydboctoUJj8AadutVRP9hCKEeUSK17
    "TMP68TOOLONGABCDEFGHIJKLMNOPQ_TOOLONG1ABCDEFGHIJKLMNOPQRST_KEY1" UNIQUE CONSTRAINT, Column(s) (TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2, TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1), Global ^%ydboctoUVvUjhvSbJUPaoqaXu3rj83
Table "TMP69" stored in Global: ^%ydboctoDVRDKWLTi6is2Btk535MNJB
Column|Type|Collation|Nullable|Default
ABCDEFGHIJKLMNOPQRSTUVWXYZ1|INTEGER|||
ABCDEFGHIJKLMNOPQRSTUVWXYZ2|INTEGER|||
Indexes:
    "TMP69_ABCDEFGHIJKLMNOPQRSTUVWXYZ1_ABCDEFGHIJKLMNOPQRSTUVWXY_KEY" UNIQUE CONSTRAINT, Column(s) (ABCDEFGHIJKLMNOPQRSTUVWXYZ1, ABCDEFGHIJKLMNOPQRSTUVWXYZ2), Global ^%ydboctoUfjOtYJk5OeNP3yAKGKHE9K
Table "TMP70" stored in Global: ^%ydboctoDrbOwimMdsiyNQlvVrmFFD9
Column|Type|Collation|Nullable|Default
ABCDEFGHIJKLMNOPQRSTUVWXYZ1|INTEGER|||
ABCDEFGHIJKLMNOPQRSTUVWXYZ2|INTEGER|||
ABCDEFGHIJKLMNOPQRSTUVWXYZ3|INTEGER|||
Indexes:
    "TMP70_ABCDEFGHIJKLMNOPQRSTUVWXYZ1_ABCDEFGHIJKLMNOPQRSTUVWXY_KEY" UNIQUE CONSTRAINT, Column(s) (ABCDEFGHIJKLMNOPQRSTUVWXYZ1, ABCDEFGHIJKLMNOPQRSTUVWXYZ2), Global ^%ydboctoUwFfbUzZcYqsCgOYkjKb88J
    "TMP70_ABCDEFGHIJKLMNOPQRSTUVWXYZ1_ABCDEFGHIJKLMNOPQRSTUVWX_KEY1" UNIQUE CONSTRAINT, Column(s) (ABCDEFGHIJKLMNOPQRSTUVWXYZ1, ABCDEFGHIJKLMNOPQRSTUVWXYZ3), Global ^%ydboctoU2kRNP79ufYY7CvtxZpEd21
Table "TMP71" stored in Global: ^%ydboctoDgCmZ843khZGf631zfaSTF7
Column|Type|Collation|Nullable|Default
ABCDEFGHIJKLMNOPQRSTUVWXYZ1|INTEGER|||
ABCDEFGHIJKLMNOPQRSTUVWXYZ2|INTEGER|||
ABCDEFGHIJKLMNOPQRSTUVWXYZ3|INTEGER|||
ABCDEFGHIJKLMNOPQRSTUVWXYZ4|INTEGER|||
Indexes:
    "TMP71_ABCDEFGHIJKLMNOPQRSTUVWXYZ1_ABCDEFGHIJKLMNOPQRSTUVWXY_KEY" UNIQUE CONSTRAINT, Column(s) (ABCDEFGHIJKLMNOPQRSTUVWXYZ1, ABCDEFGHIJKLMNOPQRSTUVWXYZ2), Global ^%ydboctoUrHbinjK5KZlzsBed2RKh4A
    "TMP71_ABCDEFGHIJKLMNOPQRSTUVWXYZ1_ABCDEFGHIJKLMNOPQRSTUVWX_KEY1" UNIQUE CONSTRAINT, Column(s) (ABCDEFGHIJKLMNOPQRSTUVWXYZ1, ABCDEFGHIJKLMNOPQRSTUVWXYZ2, ABCDEFGHIJKLMNOPQRSTUVWXYZ3), Global ^%ydboctoUU6thiREF7U2rUGuBYtc8C1
    "TMP71_ABCDEFGHIJKLMNOPQRSTUVWXYZ1_ABCDEFGHIJKLMNOPQRSTUVWX_KEY2" UNIQUE CONSTRAINT, Column(s) (ABCDEFGHIJKLMNOPQRSTUVWXYZ1, ABCDEFGHIJKLMNOPQRSTUVWXYZ4, ABCDEFGHIJKLMNOPQRSTUVWXYZ2, ABCDEFGHIJKLMNOPQRSTUVWXYZ3), Global ^%ydboctoUqyxUDCFIbpAkiT1UUJXqH3
Table "TMP72" stored in Global: ^%ydboctoDAEKaNRAOYHbMNfTsgV7v38
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "TMP72_ID2_KEY" UNIQUE CONSTRAINT, Column(s) (ID1), Global ^%ydboctoU0sURjSLRS8urzhIJGYVl81
    "TMP72_ID2_KEY1" UNIQUE CONSTRAINT, Column(s) (ID2), Global ^%ydboctoUiwSuGFcLtnGOeBS3RKCJEA
Table "TMP73" stored in Global: ^%ydboctoDMlDZ20anMaEyfpfmd4bu50
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "TMP73_ID2_KEY1" UNIQUE CONSTRAINT, Column(s) (ID2), Global ^%ydboctoUgOLFbGVg89j5uaCfjFLXIG
Check constraints:
    "TMP73_ID2_KEY" CHECK ((ID1 > 1))
Table "TMP74" stored in Global: ^%ydboctoDBovtZGL6EZJvCoLhXYCg57
Column|Type|Collation|Nullable|Default
ID1|INTEGER|||
ID2|INTEGER|||
Indexes:
    "TMP74_ID2_CHECK" UNIQUE CONSTRAINT, Column(s) (ID1), Global ^%ydboctoU0ko9r1ORsiThGJJBKJ9kH3
Check constraints:
    "TMP74_ID2_CHECK1" CHECK ((ID2 > 1))
Table "TMP75TOOLONGABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQ" stored in Global: ^%ydboctoDS4KvXvnZSoHSW51W1S2D81
Column|Type|Collation|Nullable|Default
TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1|INTEGER|||
TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2|INTEGER|||
Indexes:
    "TMP75TOOLONGABCDEFGHIJKLMNOPQ_TOOLONG1ABCDEFGHIJKLMNOPQRSTU_KEY" UNIQUE CONSTRAINT, Column(s) (TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1, TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2), Global ^%ydboctoUmnFgQbBwh1Oyys028o6nH8
    "TMP75TOOLONGABCDEFGHIJKLMNOPQ_TOOLONG1ABCDEFGHIJKLMNOPQRST_KEY2" UNIQUE CONSTRAINT, Column(s) (TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID2, TOOLONG1ABCDEFGHIJKLMNOPQRSTUVWXYZTOOLONG2ABCDEFGHIJKLMNOPQRID1), Global ^%ydboctoUiYU0iFru9b4G6jEvgDxWCH
Check constraints:
    "TMP75TOOLONGABCDEFGHIJKLMNOPQ_TOOLONG1ABCDEFGHIJKLMNOPQRST_KEY1" CHECK ((1 > 1))
