# Run 8 queries from TCF023.sql that use ABSF and REPLACEF functions
# Verify generated _ydbocto*.m and _ydbocto*.o plan files
_ydboctoP*.m
_ydboctoP*.o
_ydboctoP*.m
_ydboctoP*.o
_ydboctoP*.m
_ydboctoP*.o
_ydboctoP*.m
_ydboctoP*.o
_ydboctoP*.m
_ydboctoP*.o
_ydboctoP*.m
_ydboctoP*.o
_ydboctoP*.m
_ydboctoP*.o
_ydboctoP*.m
_ydboctoP*.o
# Verify how many queries created new plans
[ INFO] PATH:LINENUM DATE TIME: INFO_M_PLAN: Generating M file [$PWD/_ydboctoP*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME: INFO_M_PLAN: Generating M file [$PWD/_ydboctoP*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME: INFO_M_PLAN: Generating M file [$PWD/_ydboctoP*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME: INFO_M_PLAN: Generating M file [$PWD/_ydboctoP*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME: INFO_M_PLAN: Generating M file [$PWD/_ydboctoP*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME: INFO_M_PLAN: Generating M file [$PWD/_ydboctoP*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME: INFO_M_PLAN: Generating M file [$PWD/_ydboctoP*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME: INFO_M_PLAN: Generating M file [$PWD/_ydboctoP*.m] (to execute SQL query)
# Verify db nodes correctly represent tables and plans (including xref plans) that rely on them
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
# Verify db nodes correctly represent functions and plans that rely on them
^%ydboctoocto("functions","absf","%ydboctoFp4Bl71cdwVMnOEy435VRD0","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","absf","%ydboctoFp4Bl71cdwVMnOEy435VRD0","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","absf","%ydboctoFp4Bl71cdwVMnOEy435VRD0","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","absf","%ydboctoFp4Bl71cdwVMnOEy435VRD0","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","absf","%ydboctoFp4Bl71cdwVMnOEy435VRD0","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","absf","%ydboctoFp4Bl71cdwVMnOEy435VRD0","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","replacef","%ydboctoF9A28JSsStJpASPA8ktWJL7","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","replacef","%ydboctoF9A28JSsStJpASPA8ktWJL7","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","replacef","%ydboctoF9A28JSsStJpASPA8ktWJL7","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","replacef","%ydboctoF9A28JSsStJpASPA8ktWJL7","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","replacef","%ydboctoF9A28JSsStJpASPA8ktWJL7","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","replacef","%ydboctoF9A28JSsStJpASPA8ktWJL7","plan_metadata","$PWD/_ydboctoP*.m")=""
# Verify db nodes for plans that are reusable (i.e. do not need to be regenerated)
^%ydboctoocto("plan_metadata","$PWD/_ydboctoP*.m","output_key")="3"
^%ydboctoocto("plan_metadata","$PWD/_ydboctoP*.m","output_key")="3"
^%ydboctoocto("plan_metadata","$PWD/_ydboctoP*.m","output_key")="3"
^%ydboctoocto("plan_metadata","$PWD/_ydboctoP*.m","output_key")="3"
^%ydboctoocto("plan_metadata","$PWD/_ydboctoP*.m","output_key")="3"
^%ydboctoocto("plan_metadata","$PWD/_ydboctoP*.m","output_key")="3"
^%ydboctoocto("plan_metadata","$PWD/_ydboctoP*.m","output_key")="3"
^%ydboctoocto("plan_metadata","$PWD/_ydboctoP*.m","output_key")="3"
# Verify db nodes correctly represent cross-references
# Verify db nodes correctly represent src/obj dirs of generated plans (including xref plans)
^%ydboctoocto("plandirs","$PWD/_ydboctoP*.m","$PWD/_ydboctoP*.o")=""
^%ydboctoocto("plandirs","$PWD/_ydboctoP*.m","$PWD/_ydboctoP*.o")=""
^%ydboctoocto("plandirs","$PWD/_ydboctoP*.m","$PWD/_ydboctoP*.o")=""
^%ydboctoocto("plandirs","$PWD/_ydboctoP*.m","$PWD/_ydboctoP*.o")=""
^%ydboctoocto("plandirs","$PWD/_ydboctoP*.m","$PWD/_ydboctoP*.o")=""
^%ydboctoocto("plandirs","$PWD/_ydboctoP*.m","$PWD/_ydboctoP*.o")=""
^%ydboctoocto("plandirs","$PWD/_ydboctoP*.m","$PWD/_ydboctoP*.o")=""
^%ydboctoocto("plandirs","$PWD/_ydboctoP*.m","$PWD/_ydboctoP*.o")=""
# Verify currently installed triggers

# Run DROP FUNCTION of REPLACEF
DROP FUNCTION
# Verify generated _ydbocto*.m and _ydbocto*.o plan files
_ydboctoP*.m
_ydboctoP*.o
_ydboctoP*.m
_ydboctoP*.o
# Verify how many queries created new plans
# Verify db nodes correctly represent tables and plans (including xref plans) that rely on them
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("tableplans","names","$PWD/_ydboctoP*.m")=""
# Verify db nodes correctly represent functions and plans that rely on them
^%ydboctoocto("functions","absf","%ydboctoFp4Bl71cdwVMnOEy435VRD0","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","absf","%ydboctoFp4Bl71cdwVMnOEy435VRD0","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","absf","%ydboctoFp4Bl71cdwVMnOEy435VRD0","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","absf","%ydboctoFp4Bl71cdwVMnOEy435VRD0","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","absf","%ydboctoFp4Bl71cdwVMnOEy435VRD0","plan_metadata","$PWD/_ydboctoP*.m")=""
^%ydboctoocto("functions","absf","%ydboctoFp4Bl71cdwVMnOEy435VRD0","plan_metadata","$PWD/_ydboctoP*.m")=""
# Verify db nodes for plans that are reusable (i.e. do not need to be regenerated)
^%ydboctoocto("plan_metadata","$PWD/_ydboctoP*.m","output_key")="3"
^%ydboctoocto("plan_metadata","$PWD/_ydboctoP*.m","output_key")="3"
# Verify db nodes correctly represent cross-references
# Verify db nodes correctly represent src/obj dirs of generated plans (including xref plans)
^%ydboctoocto("plandirs","$PWD/_ydboctoP*.m","$PWD/_ydboctoP*.o")=""
^%ydboctoocto("plandirs","$PWD/_ydboctoP*.m","$PWD/_ydboctoP*.o")=""
# Verify currently installed triggers

