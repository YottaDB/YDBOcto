# Load SAMEVALUE function (used in TVC01.sql) in Octo and Postgres
# Run cross check
# Include key parts of generated M plans in reference file
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  delete from TDFT01 where lastname = 'Last6';
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of deleted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME")=%ydboctoexpr IF '$ZYISSQLNULL(%ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME")) IF $DATA(^%ydboctoxref("TDFT01","LASTNAME",%ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME"))) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoxref("TDFT01","LASTNAME",%ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME"),%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  insert into TDFT01 (select * FROM names where lastname != 'Cool' AND id > 3);
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",4,"","")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",4,"","")=$ORDER(%ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",4,"","")="")  DO
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  delete from TDFT01 n1 where lastname = 'Cool';
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of deleted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME")=%ydboctoexpr IF '$ZYISSQLNULL(%ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME")) IF $DATA(^%ydboctoxref("TDFT01","LASTNAME",%ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME"))) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoxref("TDFT01","LASTNAME",%ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME"),%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  delete from TDFT01 as n1 where EXISTS (select * FROM names n2 where n2.id = n1.id + 2);
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of deleted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",3,"TDFT01","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",3,"TDFT01","ID")=$ORDER(^%ydboctoDgWgAGcpPXtQQ3rYDwgYlG1(%ydboctocursor(cursorId,"keys",3,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",3,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
_ydboctoP*.m:    . SET %ydboctoexpr(1)=$$ForceNumeric^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . SET %ydboctoexpr=$$ForceNumeric^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))=%ydboctoexpr
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  insert into TDFT01 (select * FROM names where lastname = 'Cool');
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"NAMES","LASTNAME")=%ydboctoexpr IF '$ZYISSQLNULL(%ydboctocursor(cursorId,"keys",1,"NAMES","LASTNAME")) IF $DATA(^%ydboctoxref("NAMES","LASTNAME",%ydboctocursor(cursorId,"keys",1,"NAMES","LASTNAME"))) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^%ydboctoxref("NAMES","LASTNAME",%ydboctocursor(cursorId,"keys",1,"NAMES","LASTNAME"),%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
_ydboctoP*.m:    . . . SET %ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",4,"","")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",4,"","")=$ORDER(%ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",4,"","")="")  DO
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  insert into TDFT01 (select * FROM names n1 where EXISTS (select * from names n2 where n2.id = n1.id + 2));
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",7,"","",%ydboctocursor(cursorId,"keys",7,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",7,"","")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",7,"","")=$ORDER(%ydboctocursor(cursorId,"keys",7,"","",%ydboctocursor(cursorId,"keys",7,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",7,"","")="")  DO
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:octoPlan3(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",2,"NAMES","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",2,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",2,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",2,"NAMES","ID")="")  DO
_ydboctoP*.m:    . SET %ydboctoexpr(1)=$$ForceNumeric^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . SET %ydboctoexpr=$$ForceNumeric^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",6,"","",%ydboctocursor(cursorId,"keys",6,"",""))=%ydboctoexpr
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  delete from TDFT01 where lastname is NULL;
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of deleted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME")=%ydboctoexpr IF $DATA(^%ydboctoxref("TDFT01","LASTNAME","")) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoxref("TDFT01","LASTNAME","",%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  insert into TDFT01 VALUES((SAMEVALUE(6)), 'First6', 'Last6');
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"","",%ydboctocursor(cursorId,"keys",1,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"","")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"","")=$ORDER(%ydboctocursor(cursorId,"keys",1,"","",%ydboctocursor(cursorId,"keys",1,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",1,"","")="")  DO
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  insert into TDFT01 (select * FROM names);
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",4,"","")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",4,"","")=$ORDER(%ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",4,"","")="")  DO
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  delete from TDFT01 where lastname = 'Cool' OR firstname = 'Zero';
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of deleted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME")=%ydboctoexpr IF '$ZYISSQLNULL(%ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME")) IF $DATA(^%ydboctoxref("TDFT01","LASTNAME",%ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME"))) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoxref("TDFT01","LASTNAME",%ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME"),%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","FIRSTNAME")=%ydboctoexpr IF '$ZYISSQLNULL(%ydboctocursor(cursorId,"keys",1,"TDFT01","FIRSTNAME")) IF $DATA(^%ydboctoxref("TDFT01","FIRSTNAME",%ydboctocursor(cursorId,"keys",1,"TDFT01","FIRSTNAME"))) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoxref("TDFT01","FIRSTNAME",%ydboctocursor(cursorId,"keys",1,"TDFT01","FIRSTNAME"),%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  insert into TDFT01 (select * FROM names where lastname != 'Cool');
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",4,"","")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",4,"","")=$ORDER(%ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",4,"","")="")  DO
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  insert into TDFT01 (select * FROM names where lastname = 'Cool' OR firstname = 'Zero');
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"NAMES","LASTNAME")=%ydboctoexpr IF '$ZYISSQLNULL(%ydboctocursor(cursorId,"keys",1,"NAMES","LASTNAME")) IF $DATA(^%ydboctoxref("NAMES","LASTNAME",%ydboctocursor(cursorId,"keys",1,"NAMES","LASTNAME"))) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^%ydboctoxref("NAMES","LASTNAME",%ydboctocursor(cursorId,"keys",1,"NAMES","LASTNAME"),%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
_ydboctoP*.m:    . . . SET %ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"NAMES","FIRSTNAME")=%ydboctoexpr IF '$ZYISSQLNULL(%ydboctocursor(cursorId,"keys",1,"NAMES","FIRSTNAME")) IF $DATA(^%ydboctoxref("NAMES","FIRSTNAME",%ydboctocursor(cursorId,"keys",1,"NAMES","FIRSTNAME"))) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^%ydboctoxref("NAMES","FIRSTNAME",%ydboctocursor(cursorId,"keys",1,"NAMES","FIRSTNAME"),%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
_ydboctoP*.m:    . . . SET %ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan3(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",4,"","")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",4,"","")=$ORDER(%ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",4,"","")="")  DO
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  insert into TDFT01 (select * FROM names where lastname is NULL);
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"NAMES","LASTNAME")=%ydboctoexpr IF $DATA(^%ydboctoxref("NAMES","LASTNAME","")) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^%ydboctoxref("NAMES","LASTNAME","",%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
_ydboctoP*.m:    . . . SET %ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",4,"","")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",4,"","")=$ORDER(%ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",4,"","")="")  DO
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  delete from TDFT01;
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of deleted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoDgWgAGcpPXtQQ3rYDwgYlG1(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  insert into TDFT01 VALUES(8, SAMEVALUE('First8'), 'Last8');
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"","",%ydboctocursor(cursorId,"keys",1,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"","")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"","")=$ORDER(%ydboctocursor(cursorId,"keys",1,"","",%ydboctocursor(cursorId,"keys",1,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",1,"","")="")  DO
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  delete from TDFT01 where lastname != 'Cool' AND id > 3;
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of deleted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoDgWgAGcpPXtQQ3rYDwgYlG1(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  delete from TDFT01 where lastname is NULL OR firstname = 'Zero';
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of deleted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","LASTNAME")=%ydboctoexpr IF $DATA(^%ydboctoxref("TDFT01","LASTNAME","")) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoxref("TDFT01","LASTNAME","",%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","FIRSTNAME")=%ydboctoexpr IF '$ZYISSQLNULL(%ydboctocursor(cursorId,"keys",1,"TDFT01","FIRSTNAME")) IF $DATA(^%ydboctoxref("TDFT01","FIRSTNAME",%ydboctocursor(cursorId,"keys",1,"TDFT01","FIRSTNAME"))) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoxref("TDFT01","FIRSTNAME",%ydboctocursor(cursorId,"keys",1,"TDFT01","FIRSTNAME"),%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  insert into TDFT01 (select * FROM names where lastname is NULL OR firstname = 'Zero');
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"NAMES","LASTNAME")=%ydboctoexpr IF $DATA(^%ydboctoxref("NAMES","LASTNAME","")) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^%ydboctoxref("NAMES","LASTNAME","",%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
_ydboctoP*.m:    . . . SET %ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"NAMES","FIRSTNAME")=%ydboctoexpr IF '$ZYISSQLNULL(%ydboctocursor(cursorId,"keys",1,"NAMES","FIRSTNAME")) IF $DATA(^%ydboctoxref("NAMES","FIRSTNAME",%ydboctocursor(cursorId,"keys",1,"NAMES","FIRSTNAME"))) DO
_ydboctoP*.m:    . SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^%ydboctoxref("NAMES","FIRSTNAME",%ydboctocursor(cursorId,"keys",1,"NAMES","FIRSTNAME"),%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
_ydboctoP*.m:    . . . SET %ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan3(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",4,"","")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",4,"","")=$ORDER(%ydboctocursor(cursorId,"keys",4,"","",%ydboctocursor(cursorId,"keys",4,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",4,"","")="")  DO
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  delete from TDFT01 n1 where n1.lastname != 'Cool';
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of deleted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoDgWgAGcpPXtQQ3rYDwgYlG1(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  select * from TDFT01;
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoDgWgAGcpPXtQQ3rYDwgYlG1(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",3,"","",%ydboctocursor(cursorId,"keys",3,"",""))=%ydboctoexpr
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  insert into TDFT01 VALUES(7, 'First7', 'Last7');
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"","",%ydboctocursor(cursorId,"keys",1,"",""))=%ydboctoexpr
_ydboctoP*.m:octoPlan2(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"","")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"","")=$ORDER(%ydboctocursor(cursorId,"keys",1,"","",%ydboctocursor(cursorId,"keys",1,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",1,"","")="")  DO
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  delete from TDFT01 where lastname = SAMEVALUE('Last7');
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of deleted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoDgWgAGcpPXtQQ3rYDwgYlG1(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:;  delete from TDFT01 where lastname != 'Cool';
_ydboctoP*.m:;; ---------------------------------------------------------
_ydboctoP*.m:octoPlan0(cursorId,wrapInTp)
_ydboctoP*.m:octoPlan1(cursorId)
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of deleted records
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=""
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"TDFT01","ID")=$ORDER(^%ydboctoDgWgAGcpPXtQQ3rYDwgYlG1(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"TDFT01","ID")="")  DO
_ydboctoP*.m:    . . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of deleted records
_ydboctoX*.m:;; ---------------------------------------------------------
_ydboctoX*.m:;; Generated M code maintains cross reference for LASTNAME column in TDFT01 table
_ydboctoX*.m:;; ---------------------------------------------------------
_ydboctoX*.m:    ; Store state information in case query is canceled in middle of xref building
_ydboctoX*.m:    ; Actual cleanup happens in _ydboctoCleanup.m using this saved state information
_ydboctoX*.m:    ; Now that xref building is complete, cleanup saved cancel related state information
_ydboctoX*.m:    ; Build cross reference for LASTNAME column in TDFT01 table
_ydboctoX*.m:    SET %ydboctocursor(cursorId,"keys",2,"TDFT01","ID")=""
_ydboctoX*.m:    FOR  SET %ydboctocursor(cursorId,"keys",2,"TDFT01","ID")=$ORDER(^%ydboctoDgWgAGcpPXtQQ3rYDwgYlG1(%ydboctocursor(cursorId,"keys",2,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",2,"TDFT01","ID")="")  DO
_ydboctoX*.m:    ; M routine that is invoked by SET/KILL/ZKILL trigger to keep xref for LASTNAME column in TDFT01 table in sync
_ydboctoX*.m:;; ---------------------------------------------------------
_ydboctoX*.m:;; Generated M code maintains cross reference for LASTNAME column in NAMES table
_ydboctoX*.m:;; ---------------------------------------------------------
_ydboctoX*.m:    ; Store state information in case query is canceled in middle of xref building
_ydboctoX*.m:    ; Actual cleanup happens in _ydboctoCleanup.m using this saved state information
_ydboctoX*.m:    ; Now that xref building is complete, cleanup saved cancel related state information
_ydboctoX*.m:    ; Build cross reference for LASTNAME column in NAMES table
_ydboctoX*.m:    SET %ydboctocursor(cursorId,"keys",5,"NAMES","ID")=""
_ydboctoX*.m:    FOR  SET %ydboctocursor(cursorId,"keys",5,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",5,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",5,"NAMES","ID")="")  DO
_ydboctoX*.m:    ; M routine that is invoked by SET/KILL/ZKILL trigger to keep xref for LASTNAME column in NAMES table in sync
_ydboctoX*.m:;; ---------------------------------------------------------
_ydboctoX*.m:;; Generated M code maintains cross reference for FIRSTNAME column in NAMES table
_ydboctoX*.m:;; ---------------------------------------------------------
_ydboctoX*.m:    ; Store state information in case query is canceled in middle of xref building
_ydboctoX*.m:    ; Actual cleanup happens in _ydboctoCleanup.m using this saved state information
_ydboctoX*.m:    ; Now that xref building is complete, cleanup saved cancel related state information
_ydboctoX*.m:    ; Build cross reference for FIRSTNAME column in NAMES table
_ydboctoX*.m:    SET %ydboctocursor(cursorId,"keys",6,"NAMES","ID")=""
_ydboctoX*.m:    FOR  SET %ydboctocursor(cursorId,"keys",6,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",6,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",6,"NAMES","ID")="")  DO
_ydboctoX*.m:    ; M routine that is invoked by SET/KILL/ZKILL trigger to keep xref for FIRSTNAME column in NAMES table in sync
_ydboctoX*.m:;; ---------------------------------------------------------
_ydboctoX*.m:;; Generated M code maintains cross reference for FIRSTNAME column in TDFT01 table
_ydboctoX*.m:;; ---------------------------------------------------------
_ydboctoX*.m:    ; Store state information in case query is canceled in middle of xref building
_ydboctoX*.m:    ; Actual cleanup happens in _ydboctoCleanup.m using this saved state information
_ydboctoX*.m:    ; Now that xref building is complete, cleanup saved cancel related state information
_ydboctoX*.m:    ; Build cross reference for FIRSTNAME column in TDFT01 table
_ydboctoX*.m:    SET %ydboctocursor(cursorId,"keys",3,"TDFT01","ID")=""
_ydboctoX*.m:    FOR  SET %ydboctocursor(cursorId,"keys",3,"TDFT01","ID")=$ORDER(^%ydboctoDgWgAGcpPXtQQ3rYDwgYlG1(%ydboctocursor(cursorId,"keys",3,"TDFT01","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",3,"TDFT01","ID")="")  DO
_ydboctoX*.m:    ; M routine that is invoked by SET/KILL/ZKILL trigger to keep xref for FIRSTNAME column in TDFT01 table in sync
# Test [DROP TABLE names] removes all plans using names table for INSERT INTO and DELETE FROM queries too
# Below are plans that remain after [DROP TABLE names]
_ydboctoP*.m:;  delete from TDFT01 where lastname = 'Last6';
_ydboctoP*.m:;  delete from TDFT01 n1 where lastname = 'Cool';
_ydboctoP*.m:;  delete from TDFT01 where lastname is NULL;
_ydboctoP*.m:;  insert into TDFT01 VALUES((SAMEVALUE(6)), 'First6', 'Last6');
_ydboctoP*.m:;  delete from TDFT01 where lastname = 'Cool' OR firstname = 'Zero';
_ydboctoP*.m:;  delete from TDFT01;
_ydboctoP*.m:;  insert into TDFT01 VALUES(8, SAMEVALUE('First8'), 'Last8');
_ydboctoP*.m:;  delete from TDFT01 where lastname != 'Cool' AND id > 3;
_ydboctoP*.m:;  delete from TDFT01 where lastname is NULL OR firstname = 'Zero';
_ydboctoP*.m:;  delete from TDFT01 n1 where n1.lastname != 'Cool';
_ydboctoP*.m:;  select * from TDFT01;
_ydboctoP*.m:;  insert into TDFT01 VALUES(7, 'First7', 'Last7');
_ydboctoP*.m:;  delete from TDFT01 where lastname = SAMEVALUE('Last7');
_ydboctoP*.m:;  delete from TDFT01 where lastname != 'Cool';
_ydboctoX*.m:;; Generated M code maintains cross reference for LASTNAME column in TDFT01 table
_ydboctoX*.m:;; Generated M code maintains cross reference for FIRSTNAME column in TDFT01 table
# Test [DROP FUNCTION SAMEVALUE(VARCHAR)] removes all plans using SAMEVALUE function for INSERT INTO and DELETE FROM queries too
# Below are plans that remain after DROP FUNCTION SAMEVALUE(VARCHAR)
# SAMEVALUE(INTEGER) function plans should show up below since only SAMEVALUE(VARCHAR) function was dropped
_ydboctoP*.m:;  delete from TDFT01 where lastname = 'Last6';
_ydboctoP*.m:;  delete from TDFT01 n1 where lastname = 'Cool';
_ydboctoP*.m:;  delete from TDFT01 where lastname is NULL;
_ydboctoP*.m:;  insert into TDFT01 VALUES((SAMEVALUE(6)), 'First6', 'Last6');
_ydboctoP*.m:;  delete from TDFT01 where lastname = 'Cool' OR firstname = 'Zero';
_ydboctoP*.m:;  delete from TDFT01;
_ydboctoP*.m:;  delete from TDFT01 where lastname != 'Cool' AND id > 3;
_ydboctoP*.m:;  delete from TDFT01 where lastname is NULL OR firstname = 'Zero';
_ydboctoP*.m:;  delete from TDFT01 n1 where n1.lastname != 'Cool';
_ydboctoP*.m:;  select * from TDFT01;
_ydboctoP*.m:;  insert into TDFT01 VALUES(7, 'First7', 'Last7');
_ydboctoP*.m:;  delete from TDFT01 where lastname != 'Cool';
_ydboctoX*.m:;; Generated M code maintains cross reference for LASTNAME column in TDFT01 table
_ydboctoX*.m:;; Generated M code maintains cross reference for FIRSTNAME column in TDFT01 table
# Test [DROP TABLE TDFT01] removes all plans using TDFT01 table for INSERT INTO and DELETE FROM queries too
# Verify NO plans remain now
