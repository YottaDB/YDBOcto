
set datestyle='MDY';
create table testr(id int primary key, dob date(fileman)) GLOBAL "^date" readonly;
select * from testr;
select * from testr where dob > date'02-01-2023';
select * from testr where dob between date'02-01-2023' and date(fileman)'3230301';

create table testrtext(id int primary key, dob date) GLOBAL "^datetext" readonly;
select * from testrtext;
select * from testrtext where dob > date'02-01-2023';
select * from testrtext where dob between date'02-01-2023' and date(fileman)'3230301';

create table testrtexttz(id int primary key, dob timestamp with time zone) GLOBAL "^tstexttz" readonly;
select * from testrtexttz;
select * from testrtexttz where dob > date'02-01-2023';
select * from testrtexttz where dob between date'02-01-2023' and date(fileman)'3230301';

create table testrtexttziso(id int primary key, dob timestamp with time zone) GLOBAL "^tstexttziso" readonly;
select * from testrtexttziso;
select * from testrtexttziso where dob > date'02-01-2023';
select * from testrtexttziso where dob between date'02-01-2023' and date(fileman)'3230301';
select * from testrtexttziso where dob > timestamp with time zone'03-01-2023T01:01:01-05';
select * from testrtexttziso where dob = timestamp with time zone'03-01-2023T01:01:01-05';
select * from testrtexttziso where dob > timestamp with time zone'03-01-2023 01:01:01-05';
select * from testrtexttziso where dob = timestamp with time zone'03-01-2023 01:01:01-05';

set datestyle='YMD';
drop table if exists txt;
create table txt (id integer primary key, firstname varchar, lastname varchar, dateofbirth date) GLOBAL "^text" READONLY;
drop table if exists flmn;
create table flmn (id integer primary key, firstname varchar, lastname varchar, dateofbirth date(fileman)) GLOBAL "^fileman" READONLY;
select t.id as t_id, t.dateofbirth as t_dateofbirth from txt t order by dateofbirth;
select f.id as f_id, f.dateofbirth as f_dateofbirth from flmn f order by dateofbirth;
select t.id as t_id,f.id as f_id,t.dateofbirth,f.dateofbirth from txt t, flmn f where t.dateofbirth = f.dateofbirth;

drop table if exists orders;
create table orders (order_id INTEGER PRIMARY KEY, order_date DATE, order_amount VARCHAR(7), customer_id INTEGER) GLOBAL "^orders" READONLY;
set datestyle='mdy';
select * from orders where orders.order_date = DATE '03-14-1760';
select * from orders where orders.order_date IN (DATE '03-14-1760');

SELECT ALL orders.order_date FROM orders  WHERE (TRUE);
SELECT ALL orders.order_date FROM orders  WHERE (TRUE OR (DATE '03-14-1760' > orders.order_date));

create table timestamp_zut_tbl (order_id integer primary key, order_timestamp timestamp(zut)) GLOBAL "^timestampzuttbl" READONLY;
create table timestamp_fileman_tbl (order_id integer primary key, order_timestamp timestamp(fileman)) GLOBAL "^timestampfilemantbl" READONLY;
select order_timestamp from timestamp_zut_tbl order by order_timestamp;
select order_timestamp from timestamp_fileman_tbl order by order_timestamp;
select * from timestamp_zut_tbl t1 inner join timestamp_fileman_tbl t2 on t1.order_timestamp = t2.order_timestamp order by t1.order_timestamp;
OCTO> set datestyle='MDY';
OCTO> create table testr(id int primary key, dob date(fileman)) GLOBAL "^date" readonly;
CREATE TABLE
OCTO> select * from testr;
id|dob
0|2023-02-01
1|2023-03-01
2|2023-04-01
(3 rows)
OCTO> select * from testr where dob > date'02-01-2023';
id|dob
1|2023-03-01
2|2023-04-01
(2 rows)
OCTO> select * from testr where dob between date'02-01-2023' and date(fileman)'3230301';
id|dob
0|2023-02-01
1|2023-03-01
(2 rows)
OCTO> create table testrtext(id int primary key, dob date) GLOBAL "^datetext" readonly;
CREATE TABLE
OCTO> select * from testrtext;
id|dob
0|2023-02-01
1|2023-03-01
2|2023-04-01
(3 rows)
OCTO> select * from testrtext where dob > date'02-01-2023';
id|dob
1|2023-03-01
2|2023-04-01
(2 rows)
OCTO> select * from testrtext where dob between date'02-01-2023' and date(fileman)'3230301';
id|dob
0|2023-02-01
1|2023-03-01
(2 rows)
OCTO> create table testrtexttz(id int primary key, dob timestamp with time zone) GLOBAL "^tstexttz" readonly;
CREATE TABLE
OCTO> select * from testrtexttz;
id|dob
0|2023-02-01 01:01:01-05
1|2023-03-01 01:01:01-05
2|2023-04-01 02:01:01-04
3|2023-01-31 19:00:00-05
4|2023-02-01 01:00:00-05
(5 rows)
OCTO> select * from testrtexttz where dob > date'02-01-2023';
id|dob
4|2023-02-01 01:00:00-05
0|2023-02-01 01:01:01-05
1|2023-03-01 01:01:01-05
2|2023-04-01 02:01:01-04
(4 rows)
OCTO> select * from testrtexttz where dob between date'02-01-2023' and date(fileman)'3230301';
id|dob
4|2023-02-01 01:00:00-05
0|2023-02-01 01:01:01-05
(2 rows)
OCTO> create table testrtexttziso(id int primary key, dob timestamp with time zone) GLOBAL "^tstexttziso" readonly;
CREATE TABLE
OCTO> select * from testrtexttziso;
id|dob
0|2023-02-01 01:01:01-05
1|2023-03-01 01:01:01-05
2|2023-04-01 02:01:01-04
3|2023-01-31 19:00:00-05
4|2023-02-01 01:00:00-05
(5 rows)
OCTO> select * from testrtexttziso where dob > date'02-01-2023';
id|dob
4|2023-02-01 01:00:00-05
0|2023-02-01 01:01:01-05
1|2023-03-01 01:01:01-05
2|2023-04-01 02:01:01-04
(4 rows)
OCTO> select * from testrtexttziso where dob between date'02-01-2023' and date(fileman)'3230301';
id|dob
4|2023-02-01 01:00:00-05
0|2023-02-01 01:01:01-05
(2 rows)
OCTO> select * from testrtexttziso where dob > timestamp with time zone'03-01-2023T01:01:01-05';
id|dob
2|2023-04-01 02:01:01-04
(1 row)
OCTO> select * from testrtexttziso where dob = timestamp with time zone'03-01-2023T01:01:01-05';
id|dob
1|2023-03-01 01:01:01-05
(1 row)
OCTO> select * from testrtexttziso where dob > timestamp with time zone'03-01-2023 01:01:01-05';
id|dob
2|2023-04-01 02:01:01-04
(1 row)
OCTO> select * from testrtexttziso where dob = timestamp with time zone'03-01-2023 01:01:01-05';
id|dob
1|2023-03-01 01:01:01-05
(1 row)
OCTO> set datestyle='YMD';
OCTO> drop table if exists txt;
DROP TABLE
OCTO> create table txt (id integer primary key, firstname varchar, lastname varchar, dateofbirth date) GLOBAL "^text" READONLY;
CREATE TABLE
OCTO> drop table if exists flmn;
DROP TABLE
OCTO> create table flmn (id integer primary key, firstname varchar, lastname varchar, dateofbirth date(fileman)) GLOBAL "^fileman" READONLY;
CREATE TABLE
OCTO> select t.id as t_id, t.dateofbirth as t_dateofbirth from txt t order by dateofbirth;
t_id|t_dateofbirth
1|1729-11-24
2|1774-05-28
3|2195-08-16
4|2299-06-28
5|2418-03-09
(5 rows)
OCTO> select f.id as f_id, f.dateofbirth as f_dateofbirth from flmn f order by dateofbirth;
f_id|f_dateofbirth
4|1729-11-24
2|1774-05-28
3|2195-08-16
5|2418-03-09
1|2683-08-11
(5 rows)
OCTO> select t.id as t_id,f.id as f_id,t.dateofbirth,f.dateofbirth from txt t, flmn f where t.dateofbirth = f.dateofbirth;
t_id|f_id|dateofbirth|dateofbirth
1|4|1729-11-24|1729-11-24
2|2|1774-05-28|1774-05-28
3|3|2195-08-16|2195-08-16
5|5|2418-03-09|2418-03-09
(4 rows)
OCTO> drop table if exists orders;
DROP TABLE
OCTO> create table orders (order_id INTEGER PRIMARY KEY, order_date DATE, order_amount VARCHAR(7), customer_id INTEGER) GLOBAL "^orders" READONLY;
CREATE TABLE
OCTO> set datestyle='mdy';
OCTO> select * from orders where orders.order_date = DATE '03-14-1760';
order_id|order_date|order_amount|customer_id
1|1760-03-14|$234.56|1
(1 row)
OCTO> select * from orders where orders.order_date IN (DATE '03-14-1760');
order_id|order_date|order_amount|customer_id
1|1760-03-14|$234.56|1
(1 row)
OCTO> SELECT ALL orders.order_date FROM orders  WHERE (TRUE);
order_date
1760-03-14
(1 row)
OCTO> SELECT ALL orders.order_date FROM orders  WHERE (TRUE OR (DATE '03-14-1760' > orders.order_date));
order_date
1760-03-14
(1 row)
OCTO> create table timestamp_zut_tbl (order_id integer primary key, order_timestamp timestamp(zut)) GLOBAL "^timestampzuttbl" READONLY;
CREATE TABLE
OCTO> create table timestamp_fileman_tbl (order_id integer primary key, order_timestamp timestamp(fileman)) GLOBAL "^timestampfilemantbl" READONLY;
CREATE TABLE
OCTO> select order_timestamp from timestamp_zut_tbl order by order_timestamp;
order_timestamp
2011-12-08 17:18:39
2030-04-09 09:24:57
2082-02-24 04:42:48
2085-10-06 21:41:19
2267-01-05 02:20:58
2346-03-18 20:34:10
2438-08-09 15:29:22
2560-02-01 11:36:30
2589-04-26 20:53:34
2619-04-02 21:19:13
(10 rows)
OCTO> select order_timestamp from timestamp_fileman_tbl order by order_timestamp;
order_timestamp
2011-12-08 17:18:39
2030-04-09 09:24:57
2082-02-24 04:42:48
2085-10-06 21:41:19
2267-01-05 02:20:58
2346-03-18 20:34:10
2438-08-09 15:29:22
2560-02-01 11:36:30
2589-04-26 20:53:34
2619-04-02 21:19:13
(10 rows)
OCTO> select * from timestamp_zut_tbl t1 inner join timestamp_fileman_tbl t2 on t1.order_timestamp = t2.order_timestamp order by t1.order_timestamp;
order_id|order_timestamp|order_id|order_timestamp
2|2011-12-08 17:18:39|2|2011-12-08 17:18:39
6|2030-04-09 09:24:57|6|2030-04-09 09:24:57
9|2082-02-24 04:42:48|9|2082-02-24 04:42:48
4|2085-10-06 21:41:19|4|2085-10-06 21:41:19
10|2267-01-05 02:20:58|10|2267-01-05 02:20:58
3|2346-03-18 20:34:10|3|2346-03-18 20:34:10
5|2438-08-09 15:29:22|5|2438-08-09 15:29:22
1|2560-02-01 11:36:30|1|2560-02-01 11:36:30
8|2589-04-26 20:53:34|8|2589-04-26 20:53:34
7|2619-04-02 21:19:13|7|2619-04-02 21:19:13
(10 rows)
OCTO> 
# ----------------------------------------------------------------------------
# Include generated M code in reference file to verify all optimizations there
# ----------------------------------------------------------------------------
_ydboctoP*.m:;  SELECT ALL orders.order_date FROM orders  WHERE (TRUE);
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"orders","order_id")=$ORDER(^orders(%ydboctocursor(cursorId,"keys",1,"orders","order_id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"orders","order_id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($PIECE($GET(^orders(%ydboctocursor(cursorId,"keys",1,"orders","order_id"))),"|",1),17,36,"%m-%d-%Y") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from timestamp_zut_tbl t1 inner join timestamp_fileman_tbl t2 on t1.order_timestamp = t2.order_timestamp order by t1.order_timestamp;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"timestamp_zut_tbl","order_id")=$ORDER(^timestampzuttbl(%ydboctocursor(cursorId,"keys",1,"timestamp_zut_tbl","order_id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"timestamp_zut_tbl","order_id")="")  DO
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(^timestampzuttbl(%ydboctocursor(cursorId,"keys",1,"timestamp_zut_tbl","order_id"))),20,35,"""") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",2,"timestamp_fileman_tbl","order_id")=$ORDER(^%ydbAIMDgmM7RmNPM9XGmqZIpo9C7I(0,%ydboctocursor(cursorId,"keys",2,"timestamp_fileman_tbl","order_timestamp"),%ydboctocursor(cursorId,"keys",2,"timestamp_fileman_tbl","order_id"))) QUIT:(%ydboctocursor(cursorId,"keys",2,"timestamp_fileman_tbl","order_id")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(^timestampzuttbl(%ydboctocursor(cursorId,"keys",1,"timestamp_zut_tbl","order_id"))),20,35,"""") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,20,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,20,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctocursor(cursorId,"keys",4,"","","OrderBy",$$ForceNumeric^%ydboctoplanhelpers($$Transform2UnixTime^%ydboctoplanhelpers($$piecevalue2colvalue^%ydboctoplanhelpers($GET(^timestampzuttbl(%ydboctocursor(cursorId,"keys",1,"timestamp_zut_tbl","order_id")))),20,35,"""")),%ydboctocursor(cursorId,"keys",4,"",""))=%ydboctoexpr
_ydboctoP*.m:    SET %ydboctoi(1)="" FOR  DO:$DATA(%ydboctocursor(cursorId,"keys",4,"","","OrderBy",%ydboctoi(1)))  SET %ydboctoi(1)=$ORDER(%ydboctocursor(cursorId,"keys",4,"","","OrderBy",%ydboctoi(1)),1)  QUIT:(%ydboctoi(1)="")
_ydboctoP*.m:    . SET %ydboctoi(2)="" FOR  SET %ydboctoi(2)=$ORDER(%ydboctocursor(cursorId,"keys",4,"","","OrderBy",%ydboctoi(1),%ydboctoi(2))) QUIT:(%ydboctoi(2)="")  DO
_ydboctoP*.m:;  SELECT ALL orders.order_date FROM orders  WHERE (TRUE OR (DATE '03-14-1760' > orders.order_date));
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"orders","order_id")=$ORDER(^orders(%ydboctocursor(cursorId,"keys",1,"orders","order_id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"orders","order_id")="")  DO
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($PIECE($GET(^orders(%ydboctocursor(cursorId,"keys",1,"orders","order_id"))),"|",1),17,36,"%m-%d-%Y") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",2)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0,1)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDi2PV9xtCoB7dRj9l9xcIGC(1,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)'<%ydboctozkeyfix(1,0,1))  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"orders","order_id")=$ORDER(^%ydbAIMDi2PV9xtCoB7dRj9l9xcIGC(1,%ydboctocursor(cursorId,"keys",1,"orders","order_date"),%ydboctocursor(cursorId,"keys",1,"orders","order_id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"orders","order_id")="")  DO
_ydboctoP*.m:    . . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrtexttziso;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"testrtexttziso","id")=$ORDER(^tstexttziso(%ydboctocursor(cursorId,"keys",1,"testrtexttziso","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrtexttziso","id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(^tstexttziso(%ydboctocursor(cursorId,"keys",1,"testrtexttziso","id"))),21,36,"%m-%d-%Y %H:%M:%S%z") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrtexttziso where dob > date'02-01-2023';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    SET %ydboctoexpr=$$DateTimeCast^%ydboctoplanhelpers(%ydboctoexpr,17,10)
_ydboctoP*.m:    IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDQJzNe0fwBJcDx6XPGULN50(0,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrtexttziso","id")=$ORDER(^%ydbAIMDQJzNe0fwBJcDx6XPGULN50(0,%ydboctocursor(cursorId,"keys",1,"testrtexttziso","dob"),%ydboctocursor(cursorId,"keys",1,"testrtexttziso","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrtexttziso","id")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrtexttziso where dob = timestamp with time zone'03-01-2023T01:01:01-05';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),21,36,"%m-%d-%Y %H:%M:%S%z")
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrtexttziso","id")=$ORDER(^%ydbAIMDQJzNe0fwBJcDx6XPGULN50(0,%ydboctocursor(cursorId,"keys",1,"testrtexttziso","dob"),%ydboctocursor(cursorId,"keys",1,"testrtexttziso","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrtexttziso","id")="")  DO
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrtext;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"testrtext","id")=$ORDER(^datetext(%ydboctocursor(cursorId,"keys",1,"testrtext","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrtext","id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(^datetext(%ydboctocursor(cursorId,"keys",1,"testrtext","id"))),17,36,"%m-%d-%Y") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testr;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"testr","id")=$ORDER(^date(%ydboctocursor(cursorId,"keys",1,"testr","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testr","id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(^date(%ydboctocursor(cursorId,"keys",1,"testr","id"))),17,34,"""") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select f.id as f_id, f.dateofbirth as f_dateofbirth from flmn f order by dateofbirth;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"flmn","id")=$ORDER(^fileman(%ydboctocursor(cursorId,"keys",1,"flmn","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"flmn","id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($PIECE($GET(^fileman(%ydboctocursor(cursorId,"keys",1,"flmn","id"))),"|",3),17,34,"""") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",3,"","","OrderBy",$$ForceNumeric^%ydboctoplanhelpers($$Transform2UnixTime^%ydboctoplanhelpers($$piecevalue2colvalue^%ydboctoplanhelpers($PIECE($GET(^fileman(%ydboctocursor(cursorId,"keys",1,"flmn","id"))),"|",3)),17,34,"""")),%ydboctocursor(cursorId,"keys",3,"",""))=%ydboctoexpr
_ydboctoP*.m:    SET %ydboctoi(1)="" FOR  DO:$DATA(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)))  SET %ydboctoi(1)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)),1)  QUIT:(%ydboctoi(1)="")
_ydboctoP*.m:    . SET %ydboctoi(2)="" FOR  SET %ydboctoi(2)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1),%ydboctoi(2))) QUIT:(%ydboctoi(2)="")  DO
_ydboctoP*.m:;  select order_timestamp from timestamp_zut_tbl order by order_timestamp;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"timestamp_zut_tbl","order_id")=$ORDER(^timestampzuttbl(%ydboctocursor(cursorId,"keys",1,"timestamp_zut_tbl","order_id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"timestamp_zut_tbl","order_id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(^timestampzuttbl(%ydboctocursor(cursorId,"keys",1,"timestamp_zut_tbl","order_id"))),20,35,"""") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,20,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",3,"","","OrderBy",$$ForceNumeric^%ydboctoplanhelpers($$Transform2UnixTime^%ydboctoplanhelpers($$piecevalue2colvalue^%ydboctoplanhelpers($GET(^timestampzuttbl(%ydboctocursor(cursorId,"keys",1,"timestamp_zut_tbl","order_id")))),20,35,"""")),%ydboctocursor(cursorId,"keys",3,"",""))=%ydboctoexpr
_ydboctoP*.m:    SET %ydboctoi(1)="" FOR  DO:$DATA(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)))  SET %ydboctoi(1)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)),1)  QUIT:(%ydboctoi(1)="")
_ydboctoP*.m:    . SET %ydboctoi(2)="" FOR  SET %ydboctoi(2)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1),%ydboctoi(2))) QUIT:(%ydboctoi(2)="")  DO
_ydboctoP*.m:;  select * from testrtexttz where dob between date'02-01-2023' and date(fileman)'3230301';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    SET %ydboctoexpr=$$DateTimeCast^%ydboctoplanhelpers(%ydboctoexpr,17,10)
_ydboctoP*.m:    DO  IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDbrlGJLjOfZ4Ny6NYwuiXJH(0,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrtexttz","id")=$ORDER(^%ydbAIMDbrlGJLjOfZ4Ny6NYwuiXJH(0,%ydboctocursor(cursorId,"keys",1,"testrtexttz","dob"),%ydboctocursor(cursorId,"keys",1,"testrtexttz","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrtexttz","id")="")  DO
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$ConvertToLocalTimezone^%ydboctoplanhelpers(21,%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",2)),17,34,"""")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrtext where dob between date'02-01-2023' and date(fileman)'3230301';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    DO  IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDXKfpLub6qTj0HPPtsIOoFH(0,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrtext","id")=$ORDER(^%ydbAIMDXKfpLub6qTj0HPPtsIOoFH(0,%ydboctocursor(cursorId,"keys",1,"testrtext","dob"),%ydboctocursor(cursorId,"keys",1,"testrtext","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrtext","id")="")  DO
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",2)),17,34,"""")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrtexttziso where dob > timestamp with time zone'03-01-2023T01:01:01-05';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),21,36,"%m-%d-%Y %H:%M:%S%z")
_ydboctoP*.m:    IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDQJzNe0fwBJcDx6XPGULN50(0,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrtexttziso","id")=$ORDER(^%ydbAIMDQJzNe0fwBJcDx6XPGULN50(0,%ydboctocursor(cursorId,"keys",1,"testrtexttziso","dob"),%ydboctocursor(cursorId,"keys",1,"testrtexttziso","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrtexttziso","id")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrtexttziso where dob between date'02-01-2023' and date(fileman)'3230301';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    SET %ydboctoexpr=$$DateTimeCast^%ydboctoplanhelpers(%ydboctoexpr,17,10)
_ydboctoP*.m:    DO  IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDQJzNe0fwBJcDx6XPGULN50(0,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrtexttziso","id")=$ORDER(^%ydbAIMDQJzNe0fwBJcDx6XPGULN50(0,%ydboctocursor(cursorId,"keys",1,"testrtexttziso","dob"),%ydboctocursor(cursorId,"keys",1,"testrtexttziso","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrtexttziso","id")="")  DO
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$ConvertToLocalTimezone^%ydboctoplanhelpers(21,%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",2)),17,34,"""")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrtexttz;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"testrtexttz","id")=$ORDER(^tstexttz(%ydboctocursor(cursorId,"keys",1,"testrtexttz","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrtexttz","id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(^tstexttz(%ydboctocursor(cursorId,"keys",1,"testrtexttz","id"))),21,36,"%m-%d-%Y %H:%M:%S%z") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from orders where orders.order_date = DATE '03-14-1760';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"orders","order_id")=$ORDER(^%ydbAIMDi2PV9xtCoB7dRj9l9xcIGC(1,%ydboctocursor(cursorId,"keys",1,"orders","order_date"),%ydboctocursor(cursorId,"keys",1,"orders","order_id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"orders","order_id")="")  DO
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select order_timestamp from timestamp_fileman_tbl order by order_timestamp;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"timestamp_fileman_tbl","order_id")=$ORDER(^timestampfilemantbl(%ydboctocursor(cursorId,"keys",1,"timestamp_fileman_tbl","order_id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"timestamp_fileman_tbl","order_id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(^timestampfilemantbl(%ydboctocursor(cursorId,"keys",1,"timestamp_fileman_tbl","order_id"))),20,34,"""") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,20,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",3,"","","OrderBy",$$ForceNumeric^%ydboctoplanhelpers($$Transform2UnixTime^%ydboctoplanhelpers($$piecevalue2colvalue^%ydboctoplanhelpers($GET(^timestampfilemantbl(%ydboctocursor(cursorId,"keys",1,"timestamp_fileman_tbl","order_id")))),20,34,"""")),%ydboctocursor(cursorId,"keys",3,"",""))=%ydboctoexpr
_ydboctoP*.m:    SET %ydboctoi(1)="" FOR  DO:$DATA(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)))  SET %ydboctoi(1)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)),1)  QUIT:(%ydboctoi(1)="")
_ydboctoP*.m:    . SET %ydboctoi(2)="" FOR  SET %ydboctoi(2)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1),%ydboctoi(2))) QUIT:(%ydboctoi(2)="")  DO
_ydboctoP*.m:;  select * from testr where dob between date'02-01-2023' and date(fileman)'3230301';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    DO  IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDw8D4uI9xbuaUbohj5z9rF7(0,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testr","id")=$ORDER(^%ydbAIMDw8D4uI9xbuaUbohj5z9rF7(0,%ydboctocursor(cursorId,"keys",1,"testr","dob"),%ydboctocursor(cursorId,"keys",1,"testr","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testr","id")="")  DO
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",2)),17,34,"""")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrtexttz where dob > date'02-01-2023';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    SET %ydboctoexpr=$$DateTimeCast^%ydboctoplanhelpers(%ydboctoexpr,17,10)
_ydboctoP*.m:    IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDbrlGJLjOfZ4Ny6NYwuiXJH(0,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrtexttz","id")=$ORDER(^%ydbAIMDbrlGJLjOfZ4Ny6NYwuiXJH(0,%ydboctocursor(cursorId,"keys",1,"testrtexttz","dob"),%ydboctocursor(cursorId,"keys",1,"testrtexttz","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrtexttz","id")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select t.id as t_id, t.dateofbirth as t_dateofbirth from txt t order by dateofbirth;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"txt","id")=$ORDER(^text(%ydboctocursor(cursorId,"keys",1,"txt","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"txt","id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($PIECE($GET(^text(%ydboctocursor(cursorId,"keys",1,"txt","id"))),"|",3),17,36,"%Y-%m-%d") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",3,"","","OrderBy",$$ForceNumeric^%ydboctoplanhelpers($$Transform2UnixTime^%ydboctoplanhelpers($$piecevalue2colvalue^%ydboctoplanhelpers($PIECE($GET(^text(%ydboctocursor(cursorId,"keys",1,"txt","id"))),"|",3)),17,36,"%Y-%m-%d")),%ydboctocursor(cursorId,"keys",3,"",""))=%ydboctoexpr
_ydboctoP*.m:    SET %ydboctoi(1)="" FOR  DO:$DATA(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)))  SET %ydboctoi(1)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)),1)  QUIT:(%ydboctoi(1)="")
_ydboctoP*.m:    . SET %ydboctoi(2)="" FOR  SET %ydboctoi(2)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1),%ydboctoi(2))) QUIT:(%ydboctoi(2)="")  DO
_ydboctoP*.m:;  select t.id as t_id,f.id as f_id,t.dateofbirth,f.dateofbirth from txt t, flmn f where t.dateofbirth = f.dateofbirth;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"txt","id")=$ORDER(^text(%ydboctocursor(cursorId,"keys",1,"txt","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"txt","id")="")  DO
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($PIECE($GET(^text(%ydboctocursor(cursorId,"keys",1,"txt","id"))),"|",3),17,36,"%Y-%m-%d") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",2,"flmn","id")=$ORDER(^%ydbAIMDK6pEQR0jQmxV4lvhEdGN73(3,%ydboctocursor(cursorId,"keys",2,"flmn","dateofbirth"),%ydboctocursor(cursorId,"keys",2,"flmn","id"))) QUIT:(%ydboctocursor(cursorId,"keys",2,"flmn","id")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($PIECE($GET(^text(%ydboctocursor(cursorId,"keys",1,"txt","id"))),"|",3),17,36,"%Y-%m-%d") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrtext where dob > date'02-01-2023';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDXKfpLub6qTj0HPPtsIOoFH(0,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrtext","id")=$ORDER(^%ydbAIMDXKfpLub6qTj0HPPtsIOoFH(0,%ydboctocursor(cursorId,"keys",1,"testrtext","dob"),%ydboctocursor(cursorId,"keys",1,"testrtext","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrtext","id")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testr where dob > date'02-01-2023';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDw8D4uI9xbuaUbohj5z9rF7(0,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testr","id")=$ORDER(^%ydbAIMDw8D4uI9xbuaUbohj5z9rF7(0,%ydboctocursor(cursorId,"keys",1,"testr","dob"),%ydboctocursor(cursorId,"keys",1,"testr","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testr","id")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from orders where orders.order_date IN (DATE '03-14-1760');
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    SET %ydboctoin0="" FOR  DO:$DATA(%ydboctoin0(%ydboctoin0))  SET %ydboctoin0=$ORDER(%ydboctoin0(%ydboctoin0)) QUIT:""=%ydboctoin0
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"orders","order_id")=$ORDER(^%ydbAIMDi2PV9xtCoB7dRj9l9xcIGC(1,%ydboctocursor(cursorId,"keys",1,"orders","order_date"),%ydboctocursor(cursorId,"keys",1,"orders","order_id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"orders","order_id")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoX*.m:;; Generated M code maintains cross reference for dob column in testr table
_ydboctoX*.m:    ;   stat (always 2), AIM Metadata Type (depending if the table has it specified or not);   forceStrOrder (1 for STRING type columns so canonical strings are correctly ordered, 0 otherwise)
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"",,0,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,17,34,"""")")
_ydboctoX*.m:    ; Now that xref building is complete, cleanup saved cancel related state information
_ydboctoX*.m:    ; Put the comment in again, in case it's deleted after the metadata is created but before the xref is built
_ydboctoX*.m:    NEW comment SET comment="xref for table testr column dob"
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"","",1,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,17,34,"""")")
_ydboctoX*.m:    ; Cancelation information for _ydboctoCleanup.m
_ydboctoX*.m:    NEW comment SET comment="xref for table testr column dob"
_ydboctoX*.m:baseSubs:(base,subs) ; Private entry point for use by other labels in this routine
_ydboctoX*.m:    NEW subn for subn=1:1:$QLENGTH(global) DO
_ydboctoX*.m:;; Generated M code maintains cross reference for order_timestamp column in timestamp_fileman_tbl table
_ydboctoX*.m:    ;   stat (always 2), AIM Metadata Type (depending if the table has it specified or not);   forceStrOrder (1 for STRING type columns so canonical strings are correctly ordered, 0 otherwise)
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"",,0,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,20,34,"""")")
_ydboctoX*.m:    ; Now that xref building is complete, cleanup saved cancel related state information
_ydboctoX*.m:    ; Put the comment in again, in case it's deleted after the metadata is created but before the xref is built
_ydboctoX*.m:    NEW comment SET comment="xref for table timestamp_fileman_tbl column order_timestamp"
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"","",1,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,20,34,"""")")
_ydboctoX*.m:    ; Cancelation information for _ydboctoCleanup.m
_ydboctoX*.m:    NEW comment SET comment="xref for table timestamp_fileman_tbl column order_timestamp"
_ydboctoX*.m:baseSubs:(base,subs) ; Private entry point for use by other labels in this routine
_ydboctoX*.m:    NEW subn for subn=1:1:$QLENGTH(global) DO
_ydboctoX*.m:;; Generated M code maintains cross reference for order_date column in orders table
_ydboctoX*.m:    ;   stat (always 2), AIM Metadata Type (depending if the table has it specified or not);   forceStrOrder (1 for STRING type columns so canonical strings are correctly ordered, 0 otherwise)
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"|",1,0,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,17,36,""%m-%d-%Y"")")
_ydboctoX*.m:    ; Now that xref building is complete, cleanup saved cancel related state information
_ydboctoX*.m:    ; Put the comment in again, in case it's deleted after the metadata is created but before the xref is built
_ydboctoX*.m:    NEW comment SET comment="xref for table orders column order_date"
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"|",1,1,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,17,36,""%m-%d-%Y"")")
_ydboctoX*.m:    ; Cancelation information for _ydboctoCleanup.m
_ydboctoX*.m:    NEW comment SET comment="xref for table orders column order_date"
_ydboctoX*.m:baseSubs:(base,subs) ; Private entry point for use by other labels in this routine
_ydboctoX*.m:    NEW subn for subn=1:1:$QLENGTH(global) DO
_ydboctoX*.m:;; Generated M code maintains cross reference for dob column in testrtexttz table
_ydboctoX*.m:    ;   stat (always 2), AIM Metadata Type (depending if the table has it specified or not);   forceStrOrder (1 for STRING type columns so canonical strings are correctly ordered, 0 otherwise)
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"",,0,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,21,36,""%m-%d-%Y %H:%M:%S%z"")")
_ydboctoX*.m:    ; Now that xref building is complete, cleanup saved cancel related state information
_ydboctoX*.m:    ; Put the comment in again, in case it's deleted after the metadata is created but before the xref is built
_ydboctoX*.m:    NEW comment SET comment="xref for table testrtexttz column dob"
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"","",1,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,21,36,""%m-%d-%Y %H:%M:%S%z"")")
_ydboctoX*.m:    ; Cancelation information for _ydboctoCleanup.m
_ydboctoX*.m:    NEW comment SET comment="xref for table testrtexttz column dob"
_ydboctoX*.m:baseSubs:(base,subs) ; Private entry point for use by other labels in this routine
_ydboctoX*.m:    NEW subn for subn=1:1:$QLENGTH(global) DO
_ydboctoX*.m:;; Generated M code maintains cross reference for dateofbirth column in flmn table
_ydboctoX*.m:    ;   stat (always 2), AIM Metadata Type (depending if the table has it specified or not);   forceStrOrder (1 for STRING type columns so canonical strings are correctly ordered, 0 otherwise)
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"|",3,0,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,17,34,"""")")
_ydboctoX*.m:    ; Now that xref building is complete, cleanup saved cancel related state information
_ydboctoX*.m:    ; Put the comment in again, in case it's deleted after the metadata is created but before the xref is built
_ydboctoX*.m:    NEW comment SET comment="xref for table flmn column dateofbirth"
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"|",3,1,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,17,34,"""")")
_ydboctoX*.m:    ; Cancelation information for _ydboctoCleanup.m
_ydboctoX*.m:    NEW comment SET comment="xref for table flmn column dateofbirth"
_ydboctoX*.m:baseSubs:(base,subs) ; Private entry point for use by other labels in this routine
_ydboctoX*.m:    NEW subn for subn=1:1:$QLENGTH(global) DO
_ydboctoX*.m:;; Generated M code maintains cross reference for dob column in testrtexttziso table
_ydboctoX*.m:    ;   stat (always 2), AIM Metadata Type (depending if the table has it specified or not);   forceStrOrder (1 for STRING type columns so canonical strings are correctly ordered, 0 otherwise)
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"",,0,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,21,36,""%m-%d-%Y %H:%M:%S%z"")")
_ydboctoX*.m:    ; Now that xref building is complete, cleanup saved cancel related state information
_ydboctoX*.m:    ; Put the comment in again, in case it's deleted after the metadata is created but before the xref is built
_ydboctoX*.m:    NEW comment SET comment="xref for table testrtexttziso column dob"
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"","",1,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,21,36,""%m-%d-%Y %H:%M:%S%z"")")
_ydboctoX*.m:    ; Cancelation information for _ydboctoCleanup.m
_ydboctoX*.m:    NEW comment SET comment="xref for table testrtexttziso column dob"
_ydboctoX*.m:baseSubs:(base,subs) ; Private entry point for use by other labels in this routine
_ydboctoX*.m:    NEW subn for subn=1:1:$QLENGTH(global) DO
_ydboctoX*.m:;; Generated M code maintains cross reference for dob column in testrtext table
_ydboctoX*.m:    ;   stat (always 2), AIM Metadata Type (depending if the table has it specified or not);   forceStrOrder (1 for STRING type columns so canonical strings are correctly ordered, 0 otherwise)
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"",,0,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,17,36,""%m-%d-%Y"")")
_ydboctoX*.m:    ; Now that xref building is complete, cleanup saved cancel related state information
_ydboctoX*.m:    ; Put the comment in again, in case it's deleted after the metadata is created but before the xref is built
_ydboctoX*.m:    NEW comment SET comment="xref for table testrtext column dob"
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"","",1,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,17,36,""%m-%d-%Y"")")
_ydboctoX*.m:    ; Cancelation information for _ydboctoCleanup.m
_ydboctoX*.m:    NEW comment SET comment="xref for table testrtext column dob"
_ydboctoX*.m:baseSubs:(base,subs) ; Private entry point for use by other labels in this routine
_ydboctoX*.m:    NEW subn for subn=1:1:$QLENGTH(global) DO

set datestyle='MDY';
create table testrw (id int,dob date);
insert into testrw values(1,date'01-01-2023');
insert into testrw values(1,date(fileman)'3230201');
insert into testrw values(2,date'03-01-2023');
select * from testrw;
select * from testrw where dob between date'01-01-2023' AND date'02-01-2023';
select * from testrw where dob > date'01-01-2023';

set datestyle='YMD';
drop table if exists txt;
create table txt (id integer primary key, firstname varchar, lastname varchar, dateofbirth date) GLOBAL "^text" READWRITE;
insert into txt values (1, 'a8', 'b8', '1729-11-24');
insert into txt values (2, 'a9', 'b9', '1774-05-28');
insert into txt values (3, 'a5', 'b5', '2195-08-16');
insert into txt values (4, 'a6', 'b6', '2299-06-28');
insert into txt values (5, 'a7', 'b7', '2418-03-09');
drop table if exists flmn;
create table flmn (id integer primary key, firstname varchar, lastname varchar, dateofbirth date(fileman)) GLOBAL "^fileman" READWRITE;
insert into flmn values (1, 'a5', 'b5', '9830811');
insert into flmn values (2, 'a6', 'b6', '0740528');
insert into flmn values (3, 'a7', 'b7', '4950816');
insert into flmn values (4, 'a8', 'b8', '0291124');
insert into flmn values (5, 'a9', 'b9', '7180309');
select t.id as t_id, t.dateofbirth as t_dateofbirth from txt t order by dateofbirth;
select f.id as f_id, f.dateofbirth as f_dateofbirth from flmn f order by dateofbirth;
select t.id as t_id,f.id as f_id,t.dateofbirth,f.dateofbirth from txt t, flmn f where t.dateofbirth = f.dateofbirth;

create table testrwtexttziso(id int primary key, dob timestamp with time zone);
insert into testrwtexttziso values(0, timestamp with time zone'2023-02-01T01:01:01-05:00');
insert into testrwtexttziso values(1, timestamp with time zone'2023-03-01T01:01:01-05:00');
insert into testrwtexttziso values(2, timestamp with time zone'2023-04-01T01:01:01-05:00');
insert into testrwtexttziso values(3, timestamp with time zone'2023-02-01T00:00:00+00:00');
insert into testrwtexttziso values(4, timestamp with time zone'2023-02-01T00:00:00-06:00');
select * from testrwtexttziso;
select * from testrwtexttziso where dob > date'2023-02-01';
select * from testrwtexttziso where dob between date'2023-02-01' and date(fileman)'3230301';
select * from testrwtexttziso where dob > timestamp with time zone'2023-03-01T01:01:01-05';
select * from testrwtexttziso where dob = timestamp with time zone'2023-03-01T01:01:01-05';
select * from testrwtexttziso where dob > timestamp with time zone'2023-03-01 01:01:01-05';
select * from testrwtexttziso where dob = timestamp with time zone'2023-03-01 01:01:01-05';
OCTO> set datestyle='MDY';
OCTO> create table testrw (id int,dob date);
CREATE TABLE
OCTO> insert into testrw values(1,date'01-01-2023');
INSERT 0 1
OCTO> insert into testrw values(1,date(fileman)'3230201');
INSERT 0 1
OCTO> insert into testrw values(2,date'03-01-2023');
INSERT 0 1
OCTO> select * from testrw;
id|dob
1|2023-01-01
1|2023-02-01
2|2023-03-01
(3 rows)
OCTO> select * from testrw where dob between date'01-01-2023' AND date'02-01-2023';
id|dob
1|2023-01-01
1|2023-02-01
(2 rows)
OCTO> select * from testrw where dob > date'01-01-2023';
id|dob
1|2023-02-01
2|2023-03-01
(2 rows)
OCTO> set datestyle='YMD';
OCTO> drop table if exists txt;
DROP TABLE
OCTO> create table txt (id integer primary key, firstname varchar, lastname varchar, dateofbirth date) GLOBAL "^text" READWRITE;
CREATE TABLE
OCTO> insert into txt values (1, 'a8', 'b8', '1729-11-24');
INSERT 0 1
OCTO> insert into txt values (2, 'a9', 'b9', '1774-05-28');
INSERT 0 1
OCTO> insert into txt values (3, 'a5', 'b5', '2195-08-16');
INSERT 0 1
OCTO> insert into txt values (4, 'a6', 'b6', '2299-06-28');
INSERT 0 1
OCTO> insert into txt values (5, 'a7', 'b7', '2418-03-09');
INSERT 0 1
OCTO> drop table if exists flmn;
DROP TABLE
OCTO> create table flmn (id integer primary key, firstname varchar, lastname varchar, dateofbirth date(fileman)) GLOBAL "^fileman" READWRITE;
CREATE TABLE
OCTO> insert into flmn values (1, 'a5', 'b5', '9830811');
INSERT 0 1
OCTO> insert into flmn values (2, 'a6', 'b6', '0740528');
INSERT 0 1
OCTO> insert into flmn values (3, 'a7', 'b7', '4950816');
INSERT 0 1
OCTO> insert into flmn values (4, 'a8', 'b8', '0291124');
INSERT 0 1
OCTO> insert into flmn values (5, 'a9', 'b9', '7180309');
INSERT 0 1
OCTO> select t.id as t_id, t.dateofbirth as t_dateofbirth from txt t order by dateofbirth;
t_id|t_dateofbirth
1|1729-11-24
2|1774-05-28
3|2195-08-16
4|2299-06-28
5|2418-03-09
(5 rows)
OCTO> select f.id as f_id, f.dateofbirth as f_dateofbirth from flmn f order by dateofbirth;
f_id|f_dateofbirth
4|1729-11-24
2|1774-05-28
3|2195-08-16
5|2418-03-09
1|2683-08-11
(5 rows)
OCTO> select t.id as t_id,f.id as f_id,t.dateofbirth,f.dateofbirth from txt t, flmn f where t.dateofbirth = f.dateofbirth;
t_id|f_id|dateofbirth|dateofbirth
1|4|1729-11-24|1729-11-24
2|2|1774-05-28|1774-05-28
3|3|2195-08-16|2195-08-16
5|5|2418-03-09|2418-03-09
(4 rows)
OCTO> create table testrwtexttziso(id int primary key, dob timestamp with time zone);
CREATE TABLE
OCTO> insert into testrwtexttziso values(0, timestamp with time zone'2023-02-01T01:01:01-05:00');
INSERT 0 1
OCTO> insert into testrwtexttziso values(1, timestamp with time zone'2023-03-01T01:01:01-05:00');
INSERT 0 1
OCTO> insert into testrwtexttziso values(2, timestamp with time zone'2023-04-01T01:01:01-05:00');
INSERT 0 1
OCTO> insert into testrwtexttziso values(3, timestamp with time zone'2023-02-01T00:00:00+00:00');
INSERT 0 1
OCTO> insert into testrwtexttziso values(4, timestamp with time zone'2023-02-01T00:00:00-06:00');
INSERT 0 1
OCTO> select * from testrwtexttziso;
id|dob
0|2023-02-01 01:01:01-05
1|2023-03-01 01:01:01-05
2|2023-04-01 02:01:01-04
3|2023-01-31 19:00:00-05
4|2023-02-01 01:00:00-05
(5 rows)
OCTO> select * from testrwtexttziso where dob > date'2023-02-01';
id|dob
4|2023-02-01 01:00:00-05
0|2023-02-01 01:01:01-05
1|2023-03-01 01:01:01-05
2|2023-04-01 02:01:01-04
(4 rows)
OCTO> select * from testrwtexttziso where dob between date'2023-02-01' and date(fileman)'3230301';
id|dob
4|2023-02-01 01:00:00-05
0|2023-02-01 01:01:01-05
(2 rows)
OCTO> select * from testrwtexttziso where dob > timestamp with time zone'2023-03-01T01:01:01-05';
id|dob
2|2023-04-01 02:01:01-04
(1 row)
OCTO> select * from testrwtexttziso where dob = timestamp with time zone'2023-03-01T01:01:01-05';
id|dob
1|2023-03-01 01:01:01-05
(1 row)
OCTO> select * from testrwtexttziso where dob > timestamp with time zone'2023-03-01 01:01:01-05';
id|dob
2|2023-04-01 02:01:01-04
(1 row)
OCTO> select * from testrwtexttziso where dob = timestamp with time zone'2023-03-01 01:01:01-05';
id|dob
1|2023-03-01 01:01:01-05
(1 row)
OCTO> 
# ----------------------------------------------------------------------------
# Include generated M code in reference file to verify all optimizations there
# ----------------------------------------------------------------------------
_ydboctoP*.m:;  insert into flmn values (1, 'a5', 'b5', '9830811');
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"","")=$ORDER(%ydboctocursor(cursorId,"keys",1,"","",%ydboctocursor(cursorId,"keys",1,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",1,"","")="")  DO
_ydboctoP*.m:    . DO:$ZYISSQLNULL(col(1)) NullColValue^%ydboctoplanhelpers("id")
_ydboctoP*.m:    . SET col(4)=$$Transform2UnixTime^%ydboctoplanhelpers(col(4),17,34,"""",1)
_ydboctoP*.m:    . . DO DuplicateKeyValue^%ydboctoplanhelpers("flmn_pkey","Key ("_"id"_")=("_col(1)_")")
_ydboctoP*.m:    . SET ^fileman(col(1))=$$colvalue2piecevalue^%ydboctoplanhelpers(col(2))_"|"_$$colvalue2piecevalue^%ydboctoplanhelpers(col(3))_"|"_$$colvalue2piecevalue^%ydboctoplanhelpers(col(4))
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;  insert into testrwtexttziso values(0, timestamp with time zone'2023-02-01T01:01:01-05:00');
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",2)),21,36,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"","")=$ORDER(%ydboctocursor(cursorId,"keys",1,"","",%ydboctocursor(cursorId,"keys",1,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",1,"","")="")  DO
_ydboctoP*.m:    . DO:$ZYISSQLNULL(col(1)) NullColValue^%ydboctoplanhelpers("id")
_ydboctoP*.m:    . . DO DuplicateKeyValue^%ydboctoplanhelpers("testrwtexttziso_pkey","Key ("_"id"_")=("_col(1)_")")
_ydboctoP*.m:    . SET ^%ydboctoDLx11XrPku7QbnRXvLepo11(col(1))=$$colvalue2piecevalue^%ydboctoplanhelpers(col(2))
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;  select * from testrwtexttziso where dob > timestamp with time zone'2023-03-01T01:01:01-05';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),21,36,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDDSLLtuKkqAmKJMAnZBo57F(0,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id")=$ORDER(^%ydbAIMDDSLLtuKkqAmKJMAnZBo57F(0,%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","dob"),%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  insert into txt values (1, 'a8', 'b8', '1729-11-24');
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"","")=$ORDER(%ydboctocursor(cursorId,"keys",1,"","",%ydboctocursor(cursorId,"keys",1,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",1,"","")="")  DO
_ydboctoP*.m:    . DO:$ZYISSQLNULL(col(1)) NullColValue^%ydboctoplanhelpers("id")
_ydboctoP*.m:    . SET col(4)=$$Transform2UnixTime^%ydboctoplanhelpers(col(4),17,36,"%Y-%m-%d",1)
_ydboctoP*.m:    . . DO DuplicateKeyValue^%ydboctoplanhelpers("txt_pkey","Key ("_"id"_")=("_col(1)_")")
_ydboctoP*.m:    . SET ^text(col(1))=$$colvalue2piecevalue^%ydboctoplanhelpers(col(2))_"|"_$$colvalue2piecevalue^%ydboctoplanhelpers(col(3))_"|"_$$colvalue2piecevalue^%ydboctoplanhelpers(col(4))
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;  select * from testrwtexttziso;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id")=$ORDER(^%ydboctoDLx11XrPku7QbnRXvLepo11(%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  insert into testrw values(1,date(fileman)'3230201');
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",2)),17,34,"""")
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"","")=$ORDER(%ydboctocursor(cursorId,"keys",1,"","",%ydboctocursor(cursorId,"keys",1,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",1,"","")="")  DO
_ydboctoP*.m:    . SET ^%ydboctoDbh4e9WVklToOY0QJZDtrE6(col(0))=$$colvalue2piecevalue^%ydboctoplanhelpers(col(1))_"|"_$$colvalue2piecevalue^%ydboctoplanhelpers(col(2))
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;  select f.id as f_id, f.dateofbirth as f_dateofbirth from flmn f order by dateofbirth;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"flmn","id")=$ORDER(^fileman(%ydboctocursor(cursorId,"keys",1,"flmn","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"flmn","id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",3,"","","OrderBy",$$ForceNumeric^%ydboctoplanhelpers($$piecevalue2colvalue^%ydboctoplanhelpers($PIECE($GET(^fileman(%ydboctocursor(cursorId,"keys",1,"flmn","id"))),"|",3))),%ydboctocursor(cursorId,"keys",3,"",""))=%ydboctoexpr
_ydboctoP*.m:    SET %ydboctoi(1)="" FOR  DO:$DATA(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)))  SET %ydboctoi(1)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)),1)  QUIT:(%ydboctoi(1)="")
_ydboctoP*.m:    . SET %ydboctoi(2)="" FOR  SET %ydboctoi(2)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1),%ydboctoi(2))) QUIT:(%ydboctoi(2)="")  DO
_ydboctoP*.m:;  insert into testrw values(1,date'01-01-2023');
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",2)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    SET %ydboctocursor(cursorId,"RowCount")=0 ; Initialize count of inserted records
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"","")=$ORDER(%ydboctocursor(cursorId,"keys",1,"","",%ydboctocursor(cursorId,"keys",1,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",1,"","")="")  DO
_ydboctoP*.m:    . SET ^%ydboctoDbh4e9WVklToOY0QJZDtrE6(col(0))=$$colvalue2piecevalue^%ydboctoplanhelpers(col(1))_"|"_$$colvalue2piecevalue^%ydboctoplanhelpers(col(2))
_ydboctoP*.m:    . IF $INCREMENT(%ydboctocursor(cursorId,"RowCount")) ; Increment count of inserted records
_ydboctoP*.m:;  select * from testrwtexttziso where dob = timestamp with time zone'2023-03-01T01:01:01-05';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),21,36,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id")=$ORDER(^%ydbAIMDDSLLtuKkqAmKJMAnZBo57F(0,%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","dob"),%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id")="")  DO
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrwtexttziso where dob between date'2023-02-01' and date(fileman)'3230301';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%Y-%m-%d")
_ydboctoP*.m:    SET %ydboctoexpr=$$DateTimeCast^%ydboctoplanhelpers(%ydboctoexpr,17,10)
_ydboctoP*.m:    DO  IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDDSLLtuKkqAmKJMAnZBo57F(0,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id")=$ORDER(^%ydbAIMDDSLLtuKkqAmKJMAnZBo57F(0,%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","dob"),%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id")="")  DO
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$ConvertToLocalTimezone^%ydboctoplanhelpers(21,%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",2)),17,34,"""")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrw where dob between date'01-01-2023' AND date'02-01-2023';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    DO  IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDuMQoFbfFR2I3i2QuRnKPG5(2,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrw","%yo_keycol")=$ORDER(^%ydbAIMDuMQoFbfFR2I3i2QuRnKPG5(2,%ydboctocursor(cursorId,"keys",1,"testrw","dob"),%ydboctocursor(cursorId,"keys",1,"testrw","%yo_keycol"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrw","%yo_keycol")="")  DO
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",2)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrw where dob > date'01-01-2023';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%m-%d-%Y")
_ydboctoP*.m:    IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDuMQoFbfFR2I3i2QuRnKPG5(2,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrw","%yo_keycol")=$ORDER(^%ydbAIMDuMQoFbfFR2I3i2QuRnKPG5(2,%ydboctocursor(cursorId,"keys",1,"testrw","dob"),%ydboctocursor(cursorId,"keys",1,"testrw","%yo_keycol"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrw","%yo_keycol")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrwtexttziso where dob > date'2023-02-01';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%Y-%m-%d")
_ydboctoP*.m:    SET %ydboctoexpr=$$DateTimeCast^%ydboctoplanhelpers(%ydboctoexpr,17,10)
_ydboctoP*.m:    IF '$ZYISSQLNULL(%ydboctozkeyfix(1,0)) FOR  SET %ydboctozkeyfix(1,0)=$ORDER(^%ydbAIMDDSLLtuKkqAmKJMAnZBo57F(0,%ydboctozkeyfix(1,0))) QUIT:(%ydboctozkeyfix(1,0)="")!(%ydboctozkeyfix(1,0)="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id")=$ORDER(^%ydbAIMDDSLLtuKkqAmKJMAnZBo57F(0,%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","dob"),%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrwtexttziso","id")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,21,%ydboctodatetimeoutputformat,"%Y-%m-%d %H:%M:%S%z")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select t.id as t_id, t.dateofbirth as t_dateofbirth from txt t order by dateofbirth;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"txt","id")=$ORDER(^text(%ydboctocursor(cursorId,"keys",1,"txt","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"txt","id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctocursor(cursorId,"keys",3,"","","OrderBy",$$ForceNumeric^%ydboctoplanhelpers($$piecevalue2colvalue^%ydboctoplanhelpers($PIECE($GET(^text(%ydboctocursor(cursorId,"keys",1,"txt","id"))),"|",3))),%ydboctocursor(cursorId,"keys",3,"",""))=%ydboctoexpr
_ydboctoP*.m:    SET %ydboctoi(1)="" FOR  DO:$DATA(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)))  SET %ydboctoi(1)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1)),1)  QUIT:(%ydboctoi(1)="")
_ydboctoP*.m:    . SET %ydboctoi(2)="" FOR  SET %ydboctoi(2)=$ORDER(%ydboctocursor(cursorId,"keys",3,"","","OrderBy",%ydboctoi(1),%ydboctoi(2))) QUIT:(%ydboctoi(2)="")  DO
_ydboctoP*.m:;  select t.id as t_id,f.id as f_id,t.dateofbirth,f.dateofbirth from txt t, flmn f where t.dateofbirth = f.dateofbirth;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"txt","id")=$ORDER(^text(%ydboctocursor(cursorId,"keys",1,"txt","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"txt","id")="")  DO
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",2,"flmn","id")=$ORDER(^%ydbAIMDjJExfi96Coro4KWSA6Q3JI(3,%ydboctocursor(cursorId,"keys",2,"flmn","dateofbirth"),%ydboctocursor(cursorId,"keys",2,"flmn","id"))) QUIT:(%ydboctocursor(cursorId,"keys",2,"flmn","id")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from testrw;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"testrw","%yo_keycol")=$ORDER(^%ydboctoDbh4e9WVklToOY0QJZDtrE6(%ydboctocursor(cursorId,"keys",1,"testrw","%yo_keycol"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"testrw","%yo_keycol")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
