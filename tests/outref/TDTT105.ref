
drop table if exists datep;
drop table if exists dater;
create table datep (dob date primary key, id integer) global "^datetimepdate" readonly;
create table dater (id integer primary key, dob date) global "^datetimedate" readonly;
select * from datep where dob = date'2023-01-02';
select * from dater where dob = date'2023-01-02';
select * from datep n1,dater n2 where n1.dob = n2.dob;
-- Tests IN key fix optimization when date/time column is primary key
select * from datep where dob in (date(fileman)'3230101');
-- Tests IN key fix optimization when date/time column is not a primary key
select * from dater where dob in (date(fileman)'3230101');
OCTO> drop table if exists datep;
DROP TABLE
OCTO> drop table if exists dater;
DROP TABLE
OCTO> create table datep (dob date primary key, id integer) global "^datetimepdate" readonly;
CREATE TABLE
OCTO> create table dater (id integer primary key, dob date) global "^datetimedate" readonly;
CREATE TABLE
OCTO> select * from datep where dob = date'2023-01-02';
dob|id
2023-01-02|1
(1 row)
OCTO> select * from dater where dob = date'2023-01-02';
id|dob
1|2023-01-02
(1 row)
OCTO> select * from datep n1,dater n2 where n1.dob = n2.dob;
dob|id|id|dob
2023-01-01|0|0|2023-01-01
2023-01-02|1|1|2023-01-02
(2 rows)
OCTO> select * from datep where dob in (date(fileman)'3230101');
dob|id
2023-01-01|0
(1 row)
OCTO> select * from dater where dob in (date(fileman)'3230101');
id|dob
0|2023-01-01
(1 row)
OCTO> 
_ydboctoP*.m:;  select * from datep n1,dater n2 where n1.dob = n2.dob;
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"datep","dob")=$ORDER(^datetimepdate(%ydboctocursor(cursorId,"keys",1,"datep","dob"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"datep","dob")="")  DO
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",2,"dater","id")=$ORDER(^datetimedate(%ydboctocursor(cursorId,"keys",2,"dater","id"))) QUIT:(%ydboctocursor(cursorId,"keys",2,"dater","id")="")  DO
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers(%ydboctocursor(cursorId,"keys",1,"datep","dob"),17,36,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr(1)=$$ForceNumeric^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(^datetimedate(%ydboctocursor(cursorId,"keys",2,"dater","id"))),17,36,"%Y-%m-%d") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . SET %ydboctoexpr=$$ForceNumeric^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers(%ydboctocursor(cursorId,"keys",1,"datep","dob"),17,36,"%Y-%m-%d")
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(^datetimedate(%ydboctocursor(cursorId,"keys",2,"dater","id"))),17,36,"%Y-%m-%d") SET:(""=%ydboctoexpr) %ydboctoexpr=$ZYSQLNULL
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from datep where dob in (date(fileman)'3230101');
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"datep","dob")=$ORDER(^datetimepdate(%ydboctocursor(cursorId,"keys",1,"datep","dob"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"datep","dob")="")  DO
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers(%ydboctocursor(cursorId,"keys",1,"datep","dob"),17,36,"%Y-%m-%d")
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,34,"""")
_ydboctoP*.m:    . SET %ydboctoexpr(1)=%ydboctoexpr(1)!($$ForceNumeric^%ydboctoplanhelpers(%ydboctoexpr(1,0))=$$ForceNumeric^%ydboctoplanhelpers(%ydboctoexpr(1,1)))
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers(%ydboctocursor(cursorId,"keys",1,"datep","dob"),17,36,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from dater where dob = date'2023-01-02';
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%Y-%m-%d")
_ydboctoP*.m:    . FOR  SET %ydboctocursor(cursorId,"keys",1,"dater","id")=$ORDER(^%ydbAIMDOcM7s6yOEHLZv0DnhuLlE0(0,%ydboctocursor(cursorId,"keys",1,"dater","dob"),%ydboctocursor(cursorId,"keys",1,"dater","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"dater","id")="")  DO
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from datep where dob = date'2023-01-02';
_ydboctoP*.m:    FOR  SET %ydboctocursor(cursorId,"keys",1,"datep","dob")=$ORDER(^datetimepdate(%ydboctocursor(cursorId,"keys",1,"datep","dob"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"datep","dob")="")  DO
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers(%ydboctocursor(cursorId,"keys",1,"datep","dob"),17,36,"%Y-%m-%d")
_ydboctoP*.m:    . SET %ydboctoexpr(1)=$$ForceNumeric^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,36,"%Y-%m-%d")
_ydboctoP*.m:    . SET %ydboctoexpr=$$ForceNumeric^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers(%ydboctocursor(cursorId,"keys",1,"datep","dob"),17,36,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:;  select * from dater where dob in (date(fileman)'3230101');
_ydboctoP*.m:    . SET %ydboctoexpr=$$Transform2UnixTime^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",1)),17,34,"""")
_ydboctoP*.m:    SET %ydboctoin0="" FOR  DO:$DATA(%ydboctoin0(%ydboctoin0))  SET %ydboctoin0=$ORDER(%ydboctoin0(%ydboctoin0)) QUIT:""=%ydboctoin0
_ydboctoP*.m:    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"dater","id")=$ORDER(^%ydbAIMDOcM7s6yOEHLZv0DnhuLlE0(0,%ydboctocursor(cursorId,"keys",1,"dater","dob"),%ydboctocursor(cursorId,"keys",1,"dater","id"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"dater","id")="")  DO
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$PrintDateTimeResultColumnValue^%ydboctoplanhelpers(%ydboctoexpr,17,%ydboctodatetimeoutputformat,"%Y-%m-%d")
_ydboctoP*.m:    . . . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
_ydboctoX*.m:;; Generated M code maintains cross reference for dob column in dater table
_ydboctoX*.m:    ;   stat (always 2), AIM Metadata Type (depending if the table has it specified or not);   forceStrOrder (1 for STRING type columns so canonical strings are correctly ordered, 0 otherwise)
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"",,0,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,17,36,""%Y-%m-%d"")")
_ydboctoX*.m:    ; Now that xref building is complete, cleanup saved cancel related state information
_ydboctoX*.m:    ; Put the comment in again, in case it's deleted after the metadata is created but before the xref is built
_ydboctoX*.m:    NEW comment SET comment="xref for table dater column dob"
_ydboctoX*.m:    NEW aimglobal SET aimglobal=$$XREFDATA^%YDBAIM(base,.subs,"","",1,0,1,2,2,"$$Transform2UnixTime^%ydboctoplanhelpers(,17,36,""%Y-%m-%d"")")
_ydboctoX*.m:    ; Cancelation information for _ydboctoCleanup.m
_ydboctoX*.m:    NEW comment SET comment="xref for table dater column dob"
_ydboctoX*.m:baseSubs:(base,subs) ; Private entry point for use by other labels in this routine
_ydboctoX*.m:    NEW subn for subn=1:1:$QLENGTH(global) DO
