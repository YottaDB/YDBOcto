
-- TII05 : OCTO502 : Test various errors in INSERT INTO

SELECT '-- Test ERR_INSERT_TYPE_MISMATCH error';
INSERT INTO names SELECT firstname FROM names;
INSERT INTO names SELECT lastname FROM names;
INSERT INTO names SELECT firstname,id+6 FROM names;
INSERT INTO names SELECT firstname,firstname,lastname FROM names;
INSERT INTO names SELECT id+6,id,lastname FROM names;
INSERT INTO names SELECT id+6,firstname,TRUE from names;
INSERT INTO names SELECT (id+6)::BOOLEAN,firstname,lastname from names;
INSERT INTO names SELECT id::BOOLEAN,firstname,lastname from names;
INSERT INTO names(firstname,id) SELECT id,firstname FROM names;
INSERT INTO names(firstname,id,lastname) SELECT * FROM names;

SELECT '-- Test ERR_INSERT_TOO_MANY_EXPRESSIONS error';
INSERT INTO names SELECT id,firstname,lastname,id FROM names;
INSERT INTO names SELECT NULL,NULL,NULL,NULL FROM names;
INSERT INTO names(id) SELECT id,firstname FROM names;
INSERT INTO names(id) SELECT id,firstname FROM names;
INSERT INTO names(id,firstname) SELECT id,firstname,id FROM names;

SELECT '-- Test ERR_INSERT_TOO_MANY_COLUMNS error';
INSERT INTO names(id,firstname) SELECT id FROM names;

SELECT '-- Test ERR_TABLE_UNKNOWN_COLUMN_NAME error';
INSERT INTO names(invalid) SELECT * FROM names;
INSERT INTO names(firstname,invalid) SELECT * FROM names;
INSERT INTO names(id,lastname,invalid) SELECT * FROM names;

SELECT '-- Test that only ERR_TABLE_UNKNOWN_COLUMN_NAME error is issued if ERR_DUPLICATE_COLUMN error also exists';
INSERT INTO names(invalid,invalid) SELECT * FROM names;

SELECT '-- Test ERR_DUPLICATE_COLUMN error';
INSERT INTO names(id,invalid,id) SELECT * FROM names;
INSERT INTO names(id,firstname,firstname,lastname) SELECT * FROM names;
INSERT INTO names(id,firstname,firstname,firstname,lastname) SELECT * FROM names;

SELECT '-- Simple ERR_VARCHAR_TOO_LONG error test case';
CREATE TABLE test1 (id INTEGER PRIMARY KEY, column1 VARCHAR(3));
INSERT INTO test1 VALUES (1,'abcd');		-- 4 ascii characters
INSERT INTO test1 VALUES (2,'ＡＢＣＤ');	-- 4 utf-8 characters
SELECT * FROM test1;
DROP TABLE test1;

SELECT '-- Fancy ERR_VARCHAR_TOO_LONG error test case';
SELECT '-- Test that VARCHAR(4) does not allow 7 character strings to be stored if not all last 3 characters are spaces.';
CREATE TABLE test1 (column1 VARCHAR(4));
INSERT INTO test1 VALUES ('abcd  e');
INSERT INTO test1 VALUES ('abcd e ');
INSERT INTO test1 VALUES ('abcde  ');
INSERT INTO test1 VALUES ('ＡＢＣＤ  Ｅ');
INSERT INTO test1 VALUES ('ＡＢＣＤ Ｅ ');
INSERT INTO test1 VALUES ('ＡＢＣＤＥ  ');
SELECT * FROM test1;
DROP TABLE test1;

SELECT '-- Fancier ERR_VARCHAR_TOO_LONG error test case';
SELECT '-- Test that an over length value when typecast to varchar(N) will be truncated to N characters';
SELECT '-- And that and an error will be issued if N is over length compared to the maximum column size';
CREATE TABLE test1 (column1 character(4));
INSERT INTO test1 SELECT '|' || 'abcd'::varchar(3) || '|';
INSERT INTO test1 SELECT '|' || 'ＡＢＣＤ'::varchar(3) || '|';
SELECT * FROM test1;
DROP TABLE test1;

SELECT '-- Test of ERR_NUMERIC_OVERFLOW';
CREATE TABLE test1 (column1 NUMERIC(2,1));
INSERT INTO test1 VALUES (10);
INSERT INTO test1 VALUES (-10);
INSERT INTO test1 VALUES (9.99);
INSERT INTO test1 VALUES (-9.99);
DROP TABLE test1;

SELECT '-- Test of VARCHAR_TOO_LONG midway in the INSERT INTO';
CREATE TABLE test1 (id INTEGER PRIMARY KEY, column1 VARCHAR(3));
INSERT INTO test1 VALUES (1, 'abc'), (2, 'abcd'), (3, 'ab');
SELECT '-- Verify that no rows are inserted at the end (expecting no rows to be output below)';
SELECT * FROM test1;
DROP TABLE test1;
SELECT '-- Test that valid queries work fine after an INSERT INTO query that had an error midway';
SELECT * FROM names WHERE id = 4;

SELECT '-- Test of ERR_TABLE_READONLY error against various catalog tables';
INSERT INTO octoOneRowTable SELECT * from names;
INSERT INTO pg_catalog.pg_namespace SELECT * from names;
INSERT INTO pg_catalog.pg_type SELECT * from names;
INSERT INTO pg_catalog.pg_class SELECT * from names;
INSERT INTO pg_catalog.pg_description SELECT * from names;
INSERT INTO information_schema.tables SELECT * from names;
INSERT INTO pg_catalog.pg_proc SELECT * from names;
INSERT INTO pg_catalog.pg_attribute SELECT * from names;
INSERT INTO pg_catalog.pg_attrdef SELECT * from names;
INSERT INTO pg_catalog.pg_settings SELECT * from names;
INSERT INTO pg_catalog.pg_database SELECT * from names;
INSERT INTO pg_catalog.pg_roles SELECT * from names;
INSERT INTO pg_catalog.pg_user SELECT * from names;

SELECT '-- Test of ERR_TABLE_READONLY error in a table created with READONLY';
CREATE TABLE test1 (id INTEGER PRIMARY KEY) READONLY;
INSERT INTO test1 SELECT 1;
DROP TABLE test1;

SELECT '-- Test same table created with READWRITE works fine with INSERT INTO';
CREATE TABLE test1 (id INTEGER PRIMARY KEY) READWRITE;
INSERT INTO test1 SELECT 1;
SELECT * from test1;
DROP TABLE test1;

SELECT '-- Test of ERR_TABLE_READONLY error in a table created with READONLY implicitly assumed';
CREATE TABLE test1 (id INTEGER PRIMARY KEY, firstname VARCHAR DELIM "", lastname VARCHAR DELIM "");
-- The below command used to previously assert fail as follows previously.
-- octo: build/src/tmpl_insert_into.ctemplate.c:230: tmpl_insert_into: Assertion `((void *)0) != get_keyword(cur_column, OPTIONAL_PIECE)' failed.
INSERT INTO test1 VALUES (1, 'abcd', 'efgh');
DROP TABLE test1;

???
-- Test ERR_INSERT_TYPE_MISMATCH error
(1 row)
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TYPE_MISMATCH : Column 'ID' is of type INTEGER but expression is of type VARCHAR
Error with syntax near (line 1, column 26):

INSERT INTO names SELECT firstname FROM names;
                         ^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names SELECT firstname FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TYPE_MISMATCH : Column 'ID' is of type INTEGER but expression is of type VARCHAR
Error with syntax near (line 1, column 26):

INSERT INTO names SELECT lastname FROM names;
                         ^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names SELECT lastname FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TYPE_MISMATCH : Column 'ID' is of type INTEGER but expression is of type VARCHAR
Error with syntax near (line 1, column 26):

INSERT INTO names SELECT firstname,id+6 FROM names;
                         ^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names SELECT firstname,id+6 FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TYPE_MISMATCH : Column 'ID' is of type INTEGER but expression is of type VARCHAR
Error with syntax near (line 1, column 26):

INSERT INTO names SELECT firstname,firstname,lastname FROM names;
                         ^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names SELECT firstname,firstname,lastname FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TYPE_MISMATCH : Column 'FIRSTNAME' is of type VARCHAR but expression is of type INTEGER
Error with syntax near (line 1, column 31):

INSERT INTO names SELECT id+6,id,lastname FROM names;
                              ^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names SELECT id+6,id,lastname FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TYPE_MISMATCH : Column 'LASTNAME' is of type VARCHAR but expression is of type BOOLEAN
Error with syntax near (line 1, column 41):

INSERT INTO names SELECT id+6,firstname,TRUE from names;
                                        ^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names SELECT id+6,firstname,TRUE from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TYPE_MISMATCH : Column 'ID' is of type INTEGER but expression is of type BOOLEAN
Error with syntax near (line 1, column 26):

INSERT INTO names SELECT (id+6)::BOOLEAN,firstname,lastname from names;
                         ^^^^^^^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names SELECT (id+6)::BOOLEAN,firstname,lastname from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TYPE_MISMATCH : Column 'ID' is of type INTEGER but expression is of type BOOLEAN
Error with syntax near (line 1, column 26):

INSERT INTO names SELECT id::BOOLEAN,firstname,lastname from names;
                         ^^^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names SELECT id::BOOLEAN,firstname,lastname from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TYPE_MISMATCH : Column 'FIRSTNAME' is of type VARCHAR but expression is of type INTEGER
Error with syntax near (line 1, column 19):

INSERT INTO names(firstname,id) SELECT id,firstname FROM names;
                  ^^^^^^^^^
Error with syntax near (line 1, column 40):

INSERT INTO names(firstname,id) SELECT id,firstname FROM names;
                                       ^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(firstname,id) SELECT id,firstname FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TYPE_MISMATCH : Column 'FIRSTNAME' is of type VARCHAR but expression is of type INTEGER
Error with syntax near (line 1, column 19):

INSERT INTO names(firstname,id,lastname) SELECT * FROM names;
                  ^^^^^^^^^
Error with syntax near (line 1, column 49):

INSERT INTO names(firstname,id,lastname) SELECT * FROM names;
                                                ^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(firstname,id,lastname) SELECT * FROM names;
???
-- Test ERR_INSERT_TOO_MANY_EXPRESSIONS error
(1 row)
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TOO_MANY_EXPRESSIONS : INSERT has more expressions than target columns
Error with syntax near (line 1, column 48):

INSERT INTO names SELECT id,firstname,lastname,id FROM names;
                                               ^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names SELECT id,firstname,lastname,id FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TOO_MANY_EXPRESSIONS : INSERT has more expressions than target columns
Error with syntax near (line 1, column 41):

INSERT INTO names SELECT NULL,NULL,NULL,NULL FROM names;
                                        ^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names SELECT NULL,NULL,NULL,NULL FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TOO_MANY_EXPRESSIONS : INSERT has more expressions than target columns
Error with syntax near (line 1, column 33):

INSERT INTO names(id) SELECT id,firstname FROM names;
                                ^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(id) SELECT id,firstname FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TOO_MANY_EXPRESSIONS : INSERT has more expressions than target columns
Error with syntax near (line 1, column 33):

INSERT INTO names(id) SELECT id,firstname FROM names;
                                ^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(id) SELECT id,firstname FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TOO_MANY_EXPRESSIONS : INSERT has more expressions than target columns
Error with syntax near (line 1, column 53):

INSERT INTO names(id,firstname) SELECT id,firstname,id FROM names;
                                                    ^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(id,firstname) SELECT id,firstname,id FROM names;
???
-- Test ERR_INSERT_TOO_MANY_COLUMNS error
(1 row)
[ERROR] PATH:LINENUM DATE TIME : ERR_INSERT_TOO_MANY_COLUMNS : INSERT has more target columns than expressions
Error with syntax near (line 1, column 22):

INSERT INTO names(id,firstname) SELECT id FROM names;
                     ^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(id,firstname) SELECT id FROM names;
???
-- Test ERR_TABLE_UNKNOWN_COLUMN_NAME error
(1 row)
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_UNKNOWN_COLUMN_NAME : Column 'INVALID' of table 'NAMES' does not exist
Error with syntax near (line 1, column 19):

INSERT INTO names(invalid) SELECT * FROM names;
                  ^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(invalid) SELECT * FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_UNKNOWN_COLUMN_NAME : Column 'INVALID' of table 'NAMES' does not exist
Error with syntax near (line 1, column 29):

INSERT INTO names(firstname,invalid) SELECT * FROM names;
                            ^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(firstname,invalid) SELECT * FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_UNKNOWN_COLUMN_NAME : Column 'INVALID' of table 'NAMES' does not exist
Error with syntax near (line 1, column 31):

INSERT INTO names(id,lastname,invalid) SELECT * FROM names;
                              ^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(id,lastname,invalid) SELECT * FROM names;
???
-- Test that only ERR_TABLE_UNKNOWN_COLUMN_NAME error is issued if ERR_DUPLICATE_COLUMN error also exists
(1 row)
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_UNKNOWN_COLUMN_NAME : Column 'INVALID' of table 'NAMES' does not exist
Error with syntax near (line 1, column 19):

INSERT INTO names(invalid,invalid) SELECT * FROM names;
                  ^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(invalid,invalid) SELECT * FROM names;
???
-- Test ERR_DUPLICATE_COLUMN error
(1 row)
[ERROR] PATH:LINENUM DATE TIME : ERR_DUPLICATE_COLUMN : Column 'ID' specified more than once
Error with syntax near (line 1, column 30):

INSERT INTO names(id,invalid,id) SELECT * FROM names;
                             ^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(id,invalid,id) SELECT * FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_DUPLICATE_COLUMN : Column 'FIRSTNAME' specified more than once
Error with syntax near (line 1, column 32):

INSERT INTO names(id,firstname,firstname,lastname) SELECT * FROM names;
                               ^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(id,firstname,firstname,lastname) SELECT * FROM names;
[ERROR] PATH:LINENUM DATE TIME : ERR_DUPLICATE_COLUMN : Column 'FIRSTNAME' specified more than once
Error with syntax near (line 1, column 32):

INSERT INTO names(id,firstname,firstname,firstname,lastname) SELECT * FROM names;
                               ^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO names(id,firstname,firstname,firstname,lastname) SELECT * FROM names;
???
-- Simple ERR_VARCHAR_TOO_LONG error test case
(1 row)
CREATE TABLE
[ERROR] PATH:LINENUM DATE TIME : ERR_VARCHAR_TOO_LONG : Value too long for type VARCHAR(3)
[ERROR] PATH:LINENUM DATE TIME : ERR_VARCHAR_TOO_LONG : Value too long for type VARCHAR(3)
ID|COLUMN1
(0 rows)
DROP TABLE
???
-- Fancy ERR_VARCHAR_TOO_LONG error test case
(1 row)
???
-- Test that VARCHAR(4) does not allow 7 character strings to be stored if not all last 3 characters are spaces.
(1 row)
CREATE TABLE
[ERROR] PATH:LINENUM DATE TIME : ERR_VARCHAR_TOO_LONG : Value too long for type VARCHAR(4)
[ERROR] PATH:LINENUM DATE TIME : ERR_VARCHAR_TOO_LONG : Value too long for type VARCHAR(4)
[ERROR] PATH:LINENUM DATE TIME : ERR_VARCHAR_TOO_LONG : Value too long for type VARCHAR(4)
[ERROR] PATH:LINENUM DATE TIME : ERR_VARCHAR_TOO_LONG : Value too long for type VARCHAR(4)
[ERROR] PATH:LINENUM DATE TIME : ERR_VARCHAR_TOO_LONG : Value too long for type VARCHAR(4)
[ERROR] PATH:LINENUM DATE TIME : ERR_VARCHAR_TOO_LONG : Value too long for type VARCHAR(4)
COLUMN1
(0 rows)
DROP TABLE
???
-- Fancier ERR_VARCHAR_TOO_LONG error test case
(1 row)
???
-- Test that an over length value when typecast to varchar(N) will be truncated to N characters
(1 row)
???
-- And that and an error will be issued if N is over length compared to the maximum column size
(1 row)
CREATE TABLE
[ERROR] PATH:LINENUM DATE TIME : ERR_VARCHAR_TOO_LONG : Value too long for type VARCHAR(4)
[ERROR] PATH:LINENUM DATE TIME : ERR_VARCHAR_TOO_LONG : Value too long for type VARCHAR(4)
COLUMN1
(0 rows)
DROP TABLE
???
-- Test of ERR_NUMERIC_OVERFLOW
(1 row)
CREATE TABLE
[ERROR] PATH:LINENUM DATE TIME : ERR_NUMERIC_OVERFLOW : Numeric field overflow; A field with precision 2, scale 1 must round to an absolute value less than 10^1
[ERROR] PATH:LINENUM DATE TIME : ERR_NUMERIC_OVERFLOW : Numeric field overflow; A field with precision 2, scale 1 must round to an absolute value less than 10^1
[ERROR] PATH:LINENUM DATE TIME : ERR_NUMERIC_OVERFLOW : Numeric field overflow; A field with precision 2, scale 1 must round to an absolute value less than 10^1
[ERROR] PATH:LINENUM DATE TIME : ERR_NUMERIC_OVERFLOW : Numeric field overflow; A field with precision 2, scale 1 must round to an absolute value less than 10^1
DROP TABLE
???
-- Test of VARCHAR_TOO_LONG midway in the INSERT INTO
(1 row)
CREATE TABLE
[ERROR] PATH:LINENUM DATE TIME : ERR_VARCHAR_TOO_LONG : Value too long for type VARCHAR(3)
???
-- Verify that no rows are inserted at the end (expecting no rows to be output below)
(1 row)
ID|COLUMN1
(0 rows)
DROP TABLE
???
-- Test that valid queries work fine after an INSERT INTO query that had an error midway
(1 row)
ID|FIRSTNAME|LASTNAME
4|Joey|
(1 row)
???
-- Test of ERR_TABLE_READONLY error against various catalog tables
(1 row)
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO octoOneRowTable SELECT * from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO pg_catalog.pg_namespace SELECT * from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO pg_catalog.pg_type SELECT * from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO pg_catalog.pg_class SELECT * from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO pg_catalog.pg_description SELECT * from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO information_schema.tables SELECT * from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO pg_catalog.pg_proc SELECT * from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO pg_catalog.pg_attribute SELECT * from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO pg_catalog.pg_attrdef SELECT * from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO pg_catalog.pg_settings SELECT * from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO pg_catalog.pg_database SELECT * from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO pg_catalog.pg_roles SELECT * from names;
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO pg_catalog.pg_user SELECT * from names;
???
-- Test of ERR_TABLE_READONLY error in a table created with READONLY
(1 row)
CREATE TABLE
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO test1 SELECT 1;
DROP TABLE
???
-- Test same table created with READWRITE works fine with INSERT INTO
(1 row)
CREATE TABLE
INSERT 0 1
ID
1
(1 row)
DROP TABLE
???
-- Test of ERR_TABLE_READONLY error in a table created with READONLY implicitly assumed
(1 row)
CREATE TABLE
[ERROR] PATH:LINENUM DATE TIME : ERR_TABLE_READONLY : INSERT not allowed on READONLY tables. Only allowed on READWRITE tables.
[ERROR] PATH:LINENUM DATE TIME : ERR_PARSING_COMMAND : Error parsing statement: INSERT INTO test1 VALUES (1, 'abcd', 'efgh');
DROP TABLE
