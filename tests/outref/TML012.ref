[ INFO] PATH:LINENUM DATE TIME : INFO_RECORDING_ENV_VARS : # Recording pertinent ydb_* env var values at process startup
[ INFO] PATH:LINENUM DATE TIME : INFO_PARSING_DONE : Parsing done for SQL command [select
     'a'
     from
     names;]
[ INFO] PATH:LINENUM DATE TIME : INFO_CURSOR : Generating SQL for CURSOR_NUM
[ INFO] PATH:LINENUM DATE TIME : INFO_M_PLAN : Generating M file [$PWD/_ydboctoP*.m] (to execute SQL query)
[DEBUG] PATH:LINENUM DATE TIME : INFO_CURPLAN : LOGICAL_PLAN BEFORE optimize_logical_plan() follows 
LP_SELECT_QUERY: 
  LP_PROJECT: 
    LP_COLUMN_LIST: 
      LP_WHERE: 
        LP_VALUE: 'a'
        LP_COLUMN_LIST_ALIAS: 
        - type: STRING_LITERAL
        - alias: ???
    LP_SELECT: 
      LP_TABLE_JOIN: 
        LP_TABLE: NAMES
      LP_CRITERIA: 
        LP_KEYS: 
        LP_SELECT_OPTIONS: 
          LP_WHERE: 
          LP_SELECT_MORE_OPTIONS: 
            LP_KEYWORDS: 
  LP_OUTPUT: 
    LP_KEY: 
    - table_name: 
    - column_name: 
    - unique_id: 3
    - method: LP_KEY_ADVANCE
    - xref_key: false
    - uses_xref_key: false

[DEBUG] PATH:LINENUM DATE TIME : INFO_CURPLAN : LOGICAL_PLAN AFTER optimize_logical_plan() follows 
LP_SELECT_QUERY: 
  LP_PROJECT: 
    LP_COLUMN_LIST: 
      LP_WHERE: 
        LP_VALUE: 'a'
        LP_COLUMN_LIST_ALIAS: 
        - type: STRING_LITERAL
        - alias: ???
    LP_SELECT: 
      LP_TABLE_JOIN: 
        LP_TABLE: NAMES
      LP_CRITERIA: 
        LP_KEYS: 
          LP_KEY: 
          - table_name: NAMES
          - column_name: ID
          - unique_id: 1
          - method: LP_KEY_ADVANCE
          - xref_key: false
          - uses_xref_key: false
        LP_SELECT_OPTIONS: 
          LP_WHERE: 
          LP_SELECT_MORE_OPTIONS: 
            LP_KEYWORDS: 
  LP_OUTPUT: 
    LP_KEY: 
    - table_name: 
    - column_name: 
    - unique_id: 3
    - method: LP_KEY_ADVANCE
    - xref_key: false
    - uses_xref_key: false

[ INFO] PATH:LINENUM DATE TIME : INFO_ENTERING_FUNCTION : Entering print_temporary_table
???
a
a
a
a
a
a
(6 rows)
[ INFO] PATH:LINENUM DATE TIME : INFO_PARSING_DONE : Parsing done for SQL command [select
     'b'
     from
     names;]
[ INFO] PATH:LINENUM DATE TIME : INFO_CURSOR : Generating SQL for CURSOR_NUM
[ INFO] PATH:LINENUM DATE TIME : INFO_REUSE_M_PLAN : Using already generated M file [$PWD/_ydboctoP*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME : INFO_ENTERING_FUNCTION : Entering print_temporary_table
???
b
b
b
b
b
b
(6 rows)
[ INFO] PATH:LINENUM DATE TIME : INFO_PARSING_DONE : Parsing done for SQL command []
;; This is a generated file; do not modify. Generated M code corresponds to below SQL query
;; ---------------------------------------------------------
;  select
;       'a'
;       from
;       names;
;; ---------------------------------------------------------

octoPlan0(cursorId,wrapInTp)
    NEW %ydboctop,%ydboctoexpr
    TSTART:wrapInTp ():(serial)
    DO octoPlan1(cursorId)
    TCOMMIT:wrapInTp
    QUIT

octoPlan1(cursorId)
    NEW %ydboctoz,%ydboctoexpr KILL %ydboctocursor(cursorId,"keys",3,"","")
    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
    . SET %ydboctoexpr=1
    . DO:%ydboctoexpr
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",3,"","")) %ydboctoz=42
    . . SET %ydboctoexpr=$GET(%ydboctocursor(cursorId,"parameters",1))
    . . SET %ydboctoexpr=$$str2mval^%ydboctoplanhelpers(%ydboctoexpr)
    . . SET %ydboctocursor(cursorId,"keys",3,"","",%ydboctocursor(cursorId,"keys",3,"",""))=%ydboctoexpr
    ZKILL %ydboctocursor(cursorId,"keys",1,"NAMES","ID")
    QUIT
