
-- TOJ05 : OCTO312 : Use WHERE clause to optimize LEFT JOIN (just like INNER JOIN)
CREATE FUNCTION CURR_TIMESTAMP(VARCHAR) RETURNS NUMERIC AS $$^TIMESTAMP;

SELECT A.ORDER1_ID, A.PATIENT_ID, A.OBJECT_OF_ORDER
FROM ORDER1 A
LEFT JOIN PATIENT E ON (A.PATIENT_ID=E.PATIENT_ID)
LEFT JOIN ORDER_STATUS C ON (A.STATUS=C.ORDER_STATUS_ID)
LEFT JOIN ORDER_ORDER_ACTIONS B ON ( A.ORDER1_ID = B.ORDER1_ID AND A.CURRENT_ACTION=B.ORDER_ORDER_ACTIONS_ID)
LEFT JOIN NEW_PERSON D ON (B.SIGNED_BY = D.NEW_PERSON_ID)
LEFT JOIN DISPLAY_GROUP F ON (A.TO=F.DISPLAY_GROUP_ID)
WHERE
(
   A.PATIENT_ID>0
   AND A.STATUS in (5,6,15)
   AND A.CURRENT_ACTION>0
   AND ( A.STOP_DATE>=CURR_TIMESTAMP('V')::NUMERIC OR A.STOP_DATE IS NULL )
   AND E.NAME NOT LIKE 'ZZ%'
   AND E.CURRENT_MOVEMENT>0
);

OCTO> CREATE FUNCTION CURR_TIMESTAMP(VARCHAR) RETURNS NUMERIC AS $$^TIMESTAMP;
CREATE FUNCTION
OCTO> SELECT A.ORDER1_ID, A.PATIENT_ID, A.OBJECT_OF_ORDER
FROM ORDER1 A
LEFT JOIN PATIENT E ON (A.PATIENT_ID=E.PATIENT_ID)
LEFT JOIN ORDER_STATUS C ON (A.STATUS=C.ORDER_STATUS_ID)
LEFT JOIN ORDER_ORDER_ACTIONS B ON ( A.ORDER1_ID = B.ORDER1_ID AND A.CURRENT_ACTION=B.ORDER_ORDER_ACTIONS_ID)
LEFT JOIN NEW_PERSON D ON (B.SIGNED_BY = D.NEW_PERSON_ID)
LEFT JOIN DISPLAY_GROUP F ON (A.TO=F.DISPLAY_GROUP_ID)
WHERE
(
   A.PATIENT_ID>0
   AND A.STATUS in (5,6,15)
   AND A.CURRENT_ACTION>0
   AND ( A.STOP_DATE>=CURR_TIMESTAMP('V')::NUMERIC OR A.STOP_DATE IS NULL )
   AND E.NAME NOT LIKE 'ZZ%'
   AND E.CURRENT_MOVEMENT>0
);
order1_id|patient_id|object_of_order
(0 rows)
OCTO> 
# Verify cross reference plans did get generated
_ydboctoX*.m
# Verify key fixing optimization happened by looking at the FOR loops in the generated M code
;; ---------------------------------------------------------

octoPlan0(cursorId,wrapInTp)
    DO:'$GET(^%ydbAIMOctoCache("order1","status","completed?")) xrefPlan^%ydboctoX0U3Wwz8fyAbh3bSM4VkJ2E(cursorId)
    NEW %ydboctop,%ydboctoexpr
    TSTART:wrapInTp ():(serial)
    DO octoPlan1(cursorId)
    DO octoPlan2(cursorId)
--
    QUIT

octoPlan1(cursorId)
--
    . SET %ydboctoexpr=$GET(%ydboctocursor(cursorId,"parameters",4))
    SET %ydboctoin0(%ydboctoexpr)=""
    SET %ydboctoin0="" FOR  DO:$DATA(%ydboctoin0(%ydboctoin0))  SET %ydboctoin0=$ORDER(%ydboctoin0(%ydboctoin0)) QUIT:""=%ydboctoin0
--
    . SET %ydboctocursor(cursorId,"keys",1,"order1","status")=%ydboctoexpr IF '$ZYISSQLNULL(%ydboctocursor(cursorId,"keys",1,"order1","status")) IF $DATA(^%ydbAIMDkhryjZbAGBxsFRR7PrVfA4(3,%ydboctocursor(cursorId,"keys",1,"order1","status"))) DO
    . . SET %ydboctocursor(cursorId,"keys",1,"order1","order1_id")=0
    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"order1","order1_id")=$ORDER(^%ydbAIMDkhryjZbAGBxsFRR7PrVfA4(3,%ydboctocursor(cursorId,"keys",1,"order1","status"),%ydboctocursor(cursorId,"keys",1,"order1","order1_id"))) QUIT:('(%ydboctocursor(cursorId,"keys",1,"order1","order1_id"))!(%ydboctocursor(cursorId,"keys",1,"order1","order1_id")=""))  DO
--
    QUIT

octoPlan2(cursorId)
--
    . SET %ydboctoexpr=$GET(%ydboctocursor(cursorId,"parameters",4))
    SET %ydboctoin0(%ydboctoexpr)=""
    SET %ydboctoin0="" FOR  DO:$DATA(%ydboctoin0(%ydboctoin0))  SET %ydboctoin0=$ORDER(%ydboctoin0(%ydboctoin0)) QUIT:""=%ydboctoin0
--
    . SET %ydboctocursor(cursorId,"keys",1,"order1","status")=%ydboctoexpr IF '$ZYISSQLNULL(%ydboctocursor(cursorId,"keys",1,"order1","status")) IF $DATA(^%ydbAIMDkhryjZbAGBxsFRR7PrVfA4(3,%ydboctocursor(cursorId,"keys",1,"order1","status"))) DO
    . . SET %ydboctocursor(cursorId,"keys",1,"order1","order1_id")=0
    . . FOR  SET %ydboctocursor(cursorId,"keys",1,"order1","order1_id")=$ORDER(^%ydbAIMDkhryjZbAGBxsFRR7PrVfA4(3,%ydboctocursor(cursorId,"keys",1,"order1","status"),%ydboctocursor(cursorId,"keys",1,"order1","order1_id"))) QUIT:('(%ydboctocursor(cursorId,"keys",1,"order1","order1_id"))!(%ydboctocursor(cursorId,"keys",1,"order1","order1_id")=""))  DO
