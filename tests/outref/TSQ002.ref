
SELECT
  NULL AS TABLE_CAT,
  n.nspname AS TABLE_SCHEM,
  c.relname AS TABLE_NAME,
  CASE n.nspname ~ '^pg_'
  OR n.nspname = 'information_schema' WHEN true THEN CASE WHEN n.nspname = 'pg_catalog'
  OR n.nspname = 'information_schema' THEN CASE c.relkind WHEN 'r' THEN 'SYSTEM TABLE' WHEN 'v' THEN 'SYSTEM VIEW' WHEN 'i' THEN 'SYSTEM INDEX' ELSE NULL END WHEN n.nspname = 'pg_toast' THEN CASE c.relkind WHEN 'r' THEN 'SYSTEM TOAST TABLE' WHEN 'i' THEN 'SYSTEM TOAST INDEX' ELSE NULL END ELSE CASE c.relkind WHEN 'r' THEN 'TEMPORARY TABLE' WHEN 'p' THEN 'TEMPORARY TABLE' WHEN 'i' THEN 'TEMPORARY INDEX' WHEN 'S' THEN 'TEMPORARY SEQUENCE' WHEN 'v' THEN 'TEMPORARY VIEW' ELSE NULL END END WHEN false THEN CASE c.relkind WHEN 'r' THEN 'TABLE' WHEN 'p' THEN 'TABLE' WHEN 'i' THEN 'INDEX' WHEN 'S' THEN 'SEQUENCE' WHEN 'v' THEN 'VIEW' WHEN 'c' THEN 'TYPE' WHEN 'f' THEN 'FOREIGN TABLE' WHEN 'm' THEN 'MATERIALIZED VIEW' ELSE NULL END ELSE NULL END AS TABLE_TYPE,
  d.description AS REMARKS,
  '' as TYPE_CAT,
  '' as TYPE_SCHEM,
  '' as TYPE_NAME,
  '' AS SELF_REFERENCING_COL_NAME,
  '' AS REF_GENERATION
FROM
  pg_catalog.pg_namespace n,
  pg_catalog.pg_class c
  LEFT JOIN pg_catalog.pg_description d ON (
    c.oid = d.objoid
    AND d.objsubid = 0
  )
  LEFT JOIN pg_catalog.pg_class dc ON (
    d.classoid = dc.oid
    AND dc.relname = 'pg_class'
  )
  LEFT JOIN pg_catalog.pg_namespace dn ON (
    dn.oid = dc.relnamespace
    AND dn.nspname = 'pg_catalog'
  )
WHERE
  c.relnamespace = n.oid
  AND (
    false
    OR (
      c.relkind IN ('r', 'p')
      AND n.nspname ! ~ '^pg_'
      AND n.nspname <> 'information_schema'
    )
    OR (
      c.relkind = 'r'
      AND (
        n.nspname = 'pg_catalog'
        OR n.nspname = 'information_schema'
      )
    )
    OR (
      c.relkind = 'v'
      AND n.nspname <> 'pg_catalog'
      AND n.nspname <> 'information_schema'
    )
  )
ORDER BY
  TABLE_TYPE,
  TABLE_SCHEM,
  TABLE_NAME
[ INFO] PATH:LINENUM DATE TIME : INFO_RECORDING_ENV_VARS : # Recording pertinent ydb_* env var values at process startup
[ INFO] PATH:LINENUM DATE TIME : INFO_PARSING_DONE : Parsing done for SQL command [SELECT
  NULL AS TABLE_CAT,
  n.nspname AS TABLE_SCHEM,
  c.relname AS TABLE_NAME,
  CASE n.nspname ~ '^pg_'
  OR n.nspname = 'information_schema' WHEN true THEN CASE WHEN n.nspname = 'pg_catalog'
  OR n.nspname = 'information_schema' THEN CASE c.relkind WHEN 'r' THEN 'SYSTEM TABLE' WHEN 'v' THEN 'SYSTEM VIEW' WHEN 'i' THEN 'SYSTEM INDEX' ELSE NULL END WHEN n.nspname = 'pg_toast' THEN CASE c.relkind WHEN 'r' THEN 'SYSTEM TOAST TABLE' WHEN 'i' THEN 'SYSTEM TOAST INDEX' ELSE NULL END ELSE CASE c.relkind WHEN 'r' THEN 'TEMPORARY TABLE' WHEN 'p' THEN 'TEMPORARY TABLE' WHEN 'i' THEN 'TEMPORARY INDEX' WHEN 'S' THEN 'TEMPORARY SEQUENCE' WHEN 'v' THEN 'TEMPORARY VIEW' ELSE NULL END END WHEN false THEN CASE c.relkind WHEN 'r' THEN 'TABLE' WHEN 'p' THEN 'TABLE' WHEN 'i' THEN 'INDEX' WHEN 'S' THEN 'SEQUENCE' WHEN 'v' THEN 'VIEW' WHEN 'c' THEN 'TYPE' WHEN 'f' THEN 'FOREIGN TABLE' WHEN 'm' THEN 'MATERIALIZED VIEW' ELSE NULL END ELSE NULL END AS TABLE_TYPE,
  d.description AS REMARKS,
  '' as TYPE_CAT,
  '' as TYPE_SCHEM,
  '' as TYPE_NAME,
  '' AS SELF_REFERENCING_COL_NAME,
  '' AS REF_GENERATION
FROM
  pg_catalog.pg_namespace n,
  pg_catalog.pg_class c
  LEFT JOIN pg_catalog.pg_description d ON (
    c.oid = d.objoid
    AND d.objsubid = 0
  )
  LEFT JOIN pg_catalog.pg_class dc ON (
    d.classoid = dc.oid
    AND dc.relname = 'pg_class'
  )
  LEFT JOIN pg_catalog.pg_namespace dn ON (
    dn.oid = dc.relnamespace
    AND dn.nspname = 'pg_catalog'
  )
WHERE
  c.relnamespace = n.oid
  AND (
    false
    OR (
      c.relkind IN ('r', 'p')
      AND n.nspname ! ~ '^pg_'
      AND n.nspname <> 'information_schema'
    )
    OR (
      c.relkind = 'r'
      AND (
        n.nspname = 'pg_catalog'
        OR n.nspname = 'information_schema'
      )
    )
    OR (
      c.relkind = 'v'
      AND n.nspname <> 'pg_catalog'
      AND n.nspname <> 'information_schema'
    )
  )
ORDER BY
  TABLE_TYPE,
  TABLE_SCHEM,
  TABLE_NAME]
[ INFO] PATH:LINENUM DATE TIME : INFO_CURSOR : Generating SQL for CURSOR_NUM
[ INFO] PATH:LINENUM DATE TIME : INFO_M_PLAN : Generating M file [$PWD/_ydboctoP*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME : INFO_GENERATING_XREF : Generating helper cross reference M file [$PWD/_ydboctoX*.m] for table [PG_CATALOG.PG_DESCRIPTION] and column [OBJOID]
[ INFO] PATH:LINENUM DATE TIME : INFO_GENERATING_XREF : Generating helper cross reference M file [$PWD/_ydboctoX*.m] for table [PG_CATALOG.PG_CLASS] and column [RELNAMESPACE]
[ INFO] PATH:LINENUM DATE TIME : INFO_GENERATING_XREF : Generating helper cross reference M file [$PWD/_ydboctoX*.m] for table [PG_CATALOG.PG_NAMESPACE] and column [NSPNAME]
[ INFO] PATH:LINENUM DATE TIME : INFO_REUSE_M_PLAN : Using already generated M file [$PWD/_ydboctoX*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME : INFO_REUSE_M_PLAN : Using already generated M file [$PWD/_ydboctoX*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME : INFO_REUSE_M_PLAN : Using already generated M file [$PWD/_ydboctoX*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME : INFO_REUSE_M_PLAN : Using already generated M file [$PWD/_ydboctoX*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME : INFO_REUSE_M_PLAN : Using already generated M file [$PWD/_ydboctoX*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME : INFO_REUSE_M_PLAN : Using already generated M file [$PWD/_ydboctoX*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME : INFO_REUSE_M_PLAN : Using already generated M file [$PWD/_ydboctoX*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME : INFO_REUSE_M_PLAN : Using already generated M file [$PWD/_ydboctoX*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME : INFO_REUSE_M_PLAN : Using already generated M file [$PWD/_ydboctoX*.m] (to execute SQL query)
[ INFO] PATH:LINENUM DATE TIME : INFO_ENTERING_FUNCTION : Entering print_temporary_table
TABLE_CAT|TABLE_SCHEM|TABLE_NAME|TABLE_TYPE|REMARKS|TYPE_CAT|TYPE_SCHEM|TYPE_NAME|SELF_REFERENCING_COL_NAME|REF_GENERATION
|public|INFORMATION_SCHEMA.TABLES|TABLE||||||
|public|NAMES|TABLE||||||
|public|NAMESWITHAGES|TABLE||||||
|public|OCTOONEROWTABLE|TABLE||||||
|public|PG_ATTRDEF|TABLE||||||
|public|PG_ATTRIBUTE|TABLE||||||
|public|PG_CATALOG.PG_ATTRDEF|TABLE||||||
|public|PG_CATALOG.PG_ATTRIBUTE|TABLE||||||
|public|PG_CATALOG.PG_CLASS|TABLE||||||
|public|PG_CATALOG.PG_DATABASE|TABLE||||||
|public|PG_CATALOG.PG_DESCRIPTION|TABLE||||||
|public|PG_CATALOG.PG_ENUM|TABLE||||||
|public|PG_CATALOG.PG_NAMESPACE|TABLE||||||
|public|PG_CATALOG.PG_PROC|TABLE||||||
|public|PG_CATALOG.PG_RANGE|TABLE||||||
|public|PG_CATALOG.PG_ROLES|TABLE||||||
|public|PG_CATALOG.PG_SETTINGS|TABLE||||||
|public|PG_CATALOG.PG_TYPE|TABLE||||||
|public|PG_CATALOG.PG_USER|TABLE||||||
|public|PG_CLASS|TABLE||||||
|public|PG_DATABASE|TABLE||||||
|public|PG_DESCRIPTION|TABLE||||||
|public|PG_ENUM|TABLE||||||
|public|PG_NAMESPACE|TABLE||||||
|public|PG_PROC|TABLE||||||
|public|PG_RANGE|TABLE||||||
|public|PG_ROLES|TABLE||||||
|public|PG_SETTINGS|TABLE||||||
|public|PG_TYPE|TABLE||||||
|public|PG_USER|TABLE||||||
(30 rows)
