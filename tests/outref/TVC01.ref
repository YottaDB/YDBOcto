# Load SAMEVALUE function (used in TVC01.sql) in Octo and Postgres
# Run cross check
# Test [DROP TABLE names] removes all plans using names table for VALUES queries too
# Below are plans that remain after DROP TABLE names
_ydboctoP*.m:;  VALUES ((SELECT column1 FROM (VALUES (2)) n2));
_ydboctoP*.m:;  SELECT * FROM (VALUES (1, (SELECT 2))) as abcd;
_ydboctoP*.m:;  SELECT column2,column1 FROM (VALUES (1, 2), (3, 4), (5, 6), (7, 8), (9, 10) ) AS MyTable;
_ydboctoP*.m:;  SELECT column1 FROM (VALUES (1)) as MyTable;
_ydboctoP*.m:;  VALUES (NULL);
_ydboctoP*.m:;  SELECT 5 + (VALUES (3));
_ydboctoP*.m:;  VALUES (1 + (VALUES (1)));
_ydboctoP*.m:;  SELECT * FROM (VALUES ((SELECT 1), 2)) as abcd;
_ydboctoP*.m:;  SELECT * FROM (VALUES (true, false)) AS tvc;
_ydboctoP*.m:;  SELECT * FROM (VALUES ('abcd')) AS tvc;
_ydboctoP*.m:;  VALUES (1);
_ydboctoP*.m:;  SELECT * FROM (VALUES (1), (SAMEVALUE(1.5))) AS tvc;
_ydboctoP*.m:;  SELECT * FROM (VALUES (1)) as MyTable;
_ydboctoP*.m:;  SELECT * FROM (VALUES (1)) n1 INNER JOIN (VALUES (2)) n2 ON n1.column1 < n2.column1;
_ydboctoP*.m:;  SELECT column3,column2,column1 FROM (VALUES (4,5,6), (1,2,3)) AS tvc;
_ydboctoP*.m:;  SELECT * FROM (VALUES (1, 2), (3, 4), (5, 6), (7, 8), (9, 10) ) AS MyTable;
_ydboctoP*.m:;  SELECT * FROM (VALUES (1), (3), (5), (7), (9) ) AS MyTable;
_ydboctoP*.m:;  VALUES ((VALUES (SAMEVALUE(1))));
_ydboctoP*.m:;  VALUES (1), ((SELECT COLUMN1 FROM (VALUES ((VALUES ((SELECT column1 FROM (VALUES (3)) n3))))) n2));
_ydboctoP*.m:;  SELECT * FROM (VALUES ((SELECT 1), (SELECT 2), 3)) as abcd;
_ydboctoP*.m:;  VALUES (1,2,3);
_ydboctoP*.m:;  VALUES (1,2,3), (4,5,SAMEVALUE(6));
# Test [DROP FUNCTION SAMEVALUE(INTEGER)] removes all plans using SAMEVALUE function for VALUES queries too
# Below are plans that remain after DROP FUNCTION SAMEVALUE(INTEGER)
# SAMEVALUE(NUMERIC) function plans should show up below since only SAMEVALUE(INTEGER) function was dropped
_ydboctoP*.m:;  VALUES ((SELECT column1 FROM (VALUES (2)) n2));
_ydboctoP*.m:;  SELECT * FROM (VALUES (1, (SELECT 2))) as abcd;
_ydboctoP*.m:;  SELECT column2,column1 FROM (VALUES (1, 2), (3, 4), (5, 6), (7, 8), (9, 10) ) AS MyTable;
_ydboctoP*.m:;  SELECT column1 FROM (VALUES (1)) as MyTable;
_ydboctoP*.m:;  VALUES (NULL);
_ydboctoP*.m:;  SELECT 5 + (VALUES (3));
_ydboctoP*.m:;  VALUES (1 + (VALUES (1)));
_ydboctoP*.m:;  SELECT * FROM (VALUES ((SELECT 1), 2)) as abcd;
_ydboctoP*.m:;  SELECT * FROM (VALUES (true, false)) AS tvc;
_ydboctoP*.m:;  SELECT * FROM (VALUES ('abcd')) AS tvc;
_ydboctoP*.m:;  VALUES (1);
_ydboctoP*.m:;  SELECT * FROM (VALUES (1), (SAMEVALUE(1.5))) AS tvc;
_ydboctoP*.m:;  SELECT * FROM (VALUES (1)) as MyTable;
_ydboctoP*.m:;  SELECT * FROM (VALUES (1)) n1 INNER JOIN (VALUES (2)) n2 ON n1.column1 < n2.column1;
_ydboctoP*.m:;  SELECT column3,column2,column1 FROM (VALUES (4,5,6), (1,2,3)) AS tvc;
_ydboctoP*.m:;  SELECT * FROM (VALUES (1, 2), (3, 4), (5, 6), (7, 8), (9, 10) ) AS MyTable;
_ydboctoP*.m:;  SELECT * FROM (VALUES (1), (3), (5), (7), (9) ) AS MyTable;
_ydboctoP*.m:;  VALUES (1), ((SELECT COLUMN1 FROM (VALUES ((VALUES ((SELECT column1 FROM (VALUES (3)) n3))))) n2));
_ydboctoP*.m:;  SELECT * FROM (VALUES ((SELECT 1), (SELECT 2), 3)) as abcd;
_ydboctoP*.m:;  VALUES (1,2,3);
