#################################################################
#								#
# Copyright (c) 2020-2024 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

teardown() {
  corecheck
}

@test "TAK01 : Tests verify column and table alias behavior" {
  run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TAK01.sql
}

@test "TAK02 : Tests verify errors issued for aliases using single quotes" {
  # Can't use run_query_in_octo_and_postgres_and_crosscheck_multiple_queries as postgres doesn't support single quoted alias
  load_fixture TAK02.sql subtest novv
  verify_output TAK02 output.txt
}

@test "TAK03 : Tests verify error cases for column and table alias" {
  load_fixture TAK03.sql subtest novv
  verify_output TAK03 output.txt
}

@test "TAK04 : Tests verify that different plans are generated for queries differing only by quoted column alias values" {
  # Both single and double quotes usage are verified
  # Can't use run_query_in_octo_and_postgres_and_crosscheck_multiple_queries as postgres doesn't support single quoted alias
  load_fixture TAK04.sql subtest novv
  verify_output TAK04 output.txt
  # Two of the queries in `TAK04.sql` yield errors, so we check only for two M plans below
  [[ $(ls -l _ydboctoP*.m | wc -l) -eq 2 ]]
}

@test "TAK05 : Tests verify that one plan is generated for queries differing only by quoted table alias values" {
  # Both single and double quotes usage are verified
  # Can't use run_query_in_octo_and_postgres_and_crosscheck_multiple_queries as postgres doesn't support single quoted alias
  load_fixture TAK05.sql subtest novv
  verify_output TAK05 output.txt
  [[ $(ls -l _ydboctoP*.m | wc -l) -eq 1 ]]
}

@test "TAK06 : OCTO520 : Avoid multiple plan generation when the query only differs by identifier name" {
  # Not using run_query_in_octo_and_postgres_and_crosscheck_multiple_queries as we also want to verify Octo's output of
  # column names in the row header line.
  load_fixture TAK06.sql subtest novv
  verify_output TAK06 output.txt
  # Verify all queries in TAK06.sql hash only to 5 plans (file has 2 sections of queries, the first section has 4 queries
  # each of which should has to 4 different plans, the second section has lots of queries all of which should hash to ONE plan).
  [[ $(ls -l _ydboctoP*.m | wc -l) -eq 5 ]]
}

@test "TAK07 : OCTO496 : Support column aliases in SELECT column list without AS keyword" {
  run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TAK07.sql
}

@test "TAK08 : OCTO649 : octo process to output headers specified by AS keyword when run locally" {
	load_fixture TAK08.sql subtest novv
	verify_output TAK08 output.txt
}

@test "TAK09 : OCTO1039 : Allow SQL keywords as alias column names after optional AS in SELECT column list" {
	load_fixture TAK09.sql subtest novv
	verify_output TAK09 output.txt
}

@test "TAK10 : OCTO1039 : Test random column names (could be SQL keywords) are accepted after AS in SELECT column list" {
	echo "# Run [yottadb -run TAK10 > input.sql] to generate queries with random column names after AS" >> output.txt
	yottadb -run TAK10 > input.sql
	echo "# Run [octo -f input.sql >& query.out] to run the generated queries" >> output.txt
	octo -f input.sql >& query.out
	echo "# Verify there are NO lines containing [ERROR] in [query.out]. Expect no output below." >> output.txt
	# Need "|| true" below to avoid bats from exiting due to grep not finding any errors.
	grep -A 1 ERROR query.out >> output.txt || true
	verify_output TAK10 output.txt
}

