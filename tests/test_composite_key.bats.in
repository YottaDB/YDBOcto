#################################################################
#								#
# Copyright (c) 2019-2021 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture vista-mini.sql
}

@test "TCK01 : #270 : LVUNDEF when running query involving composite key and a non-primary-key-column that is fixed" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT A.order1_id
FROM   order1 A
       inner join order_order_actions B
               ON (A.order1_id = B.order1_id)
       inner join new_person D
               ON (B.signed_by = D.new_person_id )
WHERE  (B.action = "NW");
OCTO
  # Verify the FOR loops and the corresponding key in the generated M code
  grep FOR _ydboctoP*.m | sed 's/=.*//g' >> output.txt
  verify_output TCK01 output.txt
}

@test "TCK02 : #237 : Test that Boolean expression expansion does happen in case of INNER JOINs" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT A.order1_id,
       A.patient_id,
       C.name                                 AS STATUS_NAME,
       D.name                                 AS SIGNEDBY,
       E.name                                 AS PATIENT_NAME,
       Dateformat(B.date_time_signed, "5ZSP") AS SIGNED_DATE,
       Dateformat(A.start_date, "5ZSP")       AS STARTDATE,
       Dateformat (A.stop_date, "5ZSP")       AS STOPDATE,
       A.current_action,
       B.action,
       F.name                                 AS ORDER_TYPE,
       A.replaced_order,
       A.lapsed_date_time,
       A.nature_of_dc,
       A.dc_date_time,
       A.patient_location
FROM   order1 A
       inner join order_status C
               ON ( A.status = C.order_status_id )
       inner join order_order_actions B
               ON ( A.order1_id = B.order1_id
                    AND A.current_action = B.order_order_actions_id )
       inner join new_person D
               ON ( B.signed_by = D.new_person_id )
       inner join patient E
               ON ( A.patient_id = E.patient_id )
       inner join display_group F
               ON ( A.to = F.display_group_id )
WHERE  ( ( A.patient_id IS NOT NULL
           AND A.patient_id > 0
           AND A.current_action IS NOT NULL
           AND A.current_action > 0 )
         AND a.status IN ( 5, 6 )
         AND A.start_date IS NOT NULL
         AND ( A.stop_date > 1 OR A.stop_date IS NULL )
         AND E.name NOT LIKE "ZZ%"
         AND E.current_movement IS NOT NULL )
/* TODO this line should be "ORDER  BY A.order_id :: INTEGER;" pending on issue #304 */
ORDER  BY A.order1_id;
OCTO
  # Verify that 4 plans are created for the boolean expression and each one has just one FOR loop (that too inside a DO)
  # and the corresponding key in the generated M code
  sed 's/=.*//g' _ydboctoP*.m | grep -E "octoPlan|FOR.*ydboctocursor" | grep -vw '"order"' >> output.txt
  verify_output TCK02 output.txt
}

@test "TCK03 : Check unnecessary subscripts are not generated in M code (avoids MAXNRSUBSCRIPTS error)" {
  load_fixture composite.sql
  load_fixture composite.zwr
  octo <<OCTO 2>&1 | tee output.txt
SELECT c1.name FROM composite c1
INNER JOIN composite c2 ON c2.name = c1.name
INNER JOIN composite c3 ON c3.name = c1.name
WHERE (c1.name LIKE "Name%") OR (c1.id1 < 10);
OCTO
  # Include generated M code in reference file to verify all optimizations there
  cat _ydboctoP*.m >> output.txt
  verify_output TCK03 output.txt
}

