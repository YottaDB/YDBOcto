#################################################################
#								#
# Copyright (c) 2019-2023 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture customers.sql
  load_fixture customers.zwr
}

teardown() {
  corecheck
}

@test "TCD01 : customers database : INNER JOIN" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT first_name, last_name, order_date, order_amount
FROM customers c
INNER JOIN orders o
ON c.customer_id = o.customer_id;
OCTO
  verify_output TCD01 output.txt noinfo nodebug
}

@test "TCD02 : customers database : INNER JOIN order by ASC" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT first_name, last_name, order_date, order_amount
FROM customers c
INNER JOIN orders o
ON c.customer_id = o.customer_id
ORDER BY last_name ASC;
OCTO
  verify_output TCD02 output.txt noinfo nodebug
}

@test "TCD03 : customers database : INNER JOIN order by DESC" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT first_name, last_name, order_date, order_amount
FROM customers c
INNER JOIN orders o
ON c.customer_id = o.customer_id
ORDER BY last_name DESC;
OCTO
  verify_output TCD03 output.txt noinfo nodebug
}

@test "TCD04 : customers database : LEFT JOIN" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT first_name, last_name, order_date, order_amount
FROM customers c
LEFT JOIN orders o
ON c.customer_id = o.customer_id;
OCTO
  verify_output TCD04 output.txt noinfo nodebug
}

@test "TCD05 : customers database : LEFT JOIN with WHERE" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT first_name, last_name, order_date, order_amount
FROM customers c
LEFT JOIN orders o
ON c.customer_id = o.customer_id
WHERE order_date is NULL;
OCTO
  verify_output TCD05 output.txt noinfo nodebug
}

@test "TCD06 : customers database : RIGHT JOIN" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT first_name, last_name, order_date, order_amount
FROM customers c
RIGHT JOIN orders o
ON c.customer_id = o.customer_id;
OCTO
  verify_output TCD06 output.txt noinfo nodebug
}

@test "TCD07 : customers database : RIGHT JOIN with WHERE" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT first_name, last_name, order_date, order_amount
FROM customers c
RIGHT JOIN orders o
ON c.customer_id = o.customer_id
WHERE order_date is NULL;
OCTO
  verify_output TCD07 output.txt noinfo nodebug
}

@test "TCD08 : customers database : FULL JOIN" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT first_name, last_name, order_date, order_amount
FROM customers c
FULL JOIN orders o
ON c.customer_id = o.customer_id;
OCTO
  verify_output TCD08 output.txt noinfo nodebug
}

@test "TCD09 : #324 : WHERE clause with LESS THAN or GREATER THAN usage does not work correctly for CHAR/VARCHAR types which contain numbers" {
  cat << CAT >> input.sql
select * from customers c1 where (c1.zipcode > '22960');
select * from customers c1 where (c1.zipcode >= '22960');
select * from customers c1 where (c1.zipcode <= '02169');
select * from customers c1 where (c1.zipcode < '02169');
select '10' < '2', 10 < 2;
CAT
  octo -f input.sql 2>&1 | tee output.txt
  verify_output TCD09 output.txt
}
