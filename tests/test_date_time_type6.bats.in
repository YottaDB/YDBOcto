#################################################################
#								#
# Copyright (c) 2024-2025 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
	init_test
	createdb
}

teardown() {
  stop_rocto
  corecheck
}

@test "TDTT109 : Validate that values of types that are compatible with TIMESTAMP WITH TIME ZONE can be inserted to a column of that type" {
        test_port=$(start_rocto 1400 -aw)
        run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TDTT109.sql
}

@test "TDTT110-2: OCTO382 : Test Unix epoch (1970-01-01) is correctly represented" {
	# See TDTT110-1 in tests/test_date_time_type5.bats.in for the rest
	# It's split due to the long time it takes to run
	# Standardize timezone to prevent drift when Daylight savings happens
	export TZ="UTC"

	# Run test for a regular date
	yottadb -run regularDate^datetime > regulardate.sql
	octo -pf regulardate.sql > output2.txt 2>&1 || true
	verify_output TDTT110-2 output2.txt nodatetimefilter
}

@test "TDTT111: OCTO382 : Verify that timestamp -> zhorolog conversion for microseconds happens correctly" {
	echo "datetimeoutputformat = \"zhorolog\"" > octo.conf
	load_fixture TDTT111.sql subtest novv
	verify_output TDTT111 output.txt nodatetimefilter
}

@test "TDTT112: OCTO382 : Verify that zhorolog -> timestamp conversion for microseconds happens correctly" {
	load_fixture TDTT112.sql subtest novv
	verify_output TDTT112 output.txt nodatetimefilter
}