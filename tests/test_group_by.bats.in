#################################################################
#								#
# Copyright (c) 2019-2022 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
	init_test
	createdb
	load_fixture names.sql
	load_fixture names.zwr
}

@test "TGB01 : OCTO55 : GROUP BY and AGGREGATE FUNCTIONS : Error scenarios" {
	load_fixture northwind.sql
	load_fixture northwind.zwr
	load_fixture TGB01.sql subtest novv
	verify_output TGB01 output.txt noinfo nodebug
}

@test "TGB02 : OCTO55 : GROUP BY and AGGREGATE FUNCTIONS : Various valid scenarios in NAMES schema" {
	# TGB02.sql has 100+ queries so run only a small random fraction (25%) of them to cut down test runtime.
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB02.sql 0.25 "trim_trailing_zeroes"
}

@test "TGB03 : OCTO55 : GROUP BY and AGGREGATE FUNCTIONS : Various valid scenarios in NORTHWIND schema" {
	load_fixture northwind.sql
	load_fixture northwind.zwr
	# TGB03.sql has 100+ queries so run only a small random fraction (25%) of them to cut down test runtime.
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries northwind TGB03.sql 0.25 "trim_trailing_zeroes"
}

@test "TGB04 : OCTO55 : Test octo -vv and logical plan output for sample GROUP BY query" {
	load_fixture TGB04.sql subtest
	# Include generated M code in reference file to verify all optimizations there
	cat _ydboctoP*.m >> output.txt
	verify_output TGB04 output.txt
}

@test "TGB05 : OCTO55 : Edge case GROUP BY and/or HAVING query that issue error in both Octo and Postgres" {
	# This test is updated to match postgres output. More details in #804
	load_fixture TGB05.sql subtest novv
	verify_output TGB05 output.txt
}

@test "TGB06 : OCTO55 : Edge case GROUP BY and/or HAVING queries that work in Postgres but do not work in Octo" {
	load_fixture TGB06.sql subtest novv
	verify_output TGB06 output.txt
}

@test "TGB07 : OCTO401 : COUNT(DISTINCT) usage issues `Assert failed` error" {
	load_fixture northwind.sql
	load_fixture northwind.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries northwind TGB07.sql "trim_trailing_zeroes"
}

@test "TGB08 : OCTO456 : SIG-11 in Octo when using aggregate functions in sub-queries in WHERE clause that also uses OR operator" {
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB08.sql
}

@test "TGB09 : OCTO457 : Assertion failed when GROUP BY is also used in a sub-query inside HAVING clause" {
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB09.sql
}

@test "TGB10 : OCTO453 : SELECT DISTINCT returns incorrect results when used with GROUP BY and OR operator in WHERE clause" {
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB10.sql
}

@test "TGB11 : OCTO452 : Assert failure when invalid column name is specified in GROUP BY" {
	load_fixture TGB11.sql subtest novv
	verify_output TGB11 output.txt
}

@test "TGB12 : OCTO479 : Hang when GROUP BY in sub-query uses all columns from parent query (and no columns from sub-query)" {
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB12.sql
}

@test "TGB13 : OCTO516 : SIG-11 when HAVING clause uses an aggregate function with the IN operator and multiple values" {
	load_fixture customers.sql
	load_fixture customers.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries customers TGB13.sql
}

@test "TGB14 : OCTO766 : Test HAVING clause of sub query using GROUP BY column of outer query" {
	load_fixture customers.sql
	load_fixture customers.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries customers TGB14.sql
}

@test "TGB15: OCTO796 : Test HAVING clause without GROUP BY clause usage" {
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB15.sql
	load_fixture TGB15_errors.sql subtest novv
	verify_output TGB15 output.txt
}

@test "TGB16: OCTO812 : Test sub-query in WHERE clause doing GROUP BY on parent query column" {
	# --------------------------
	# Test random set of queries
	# --------------------------
	yottadb -run TGB16 > TGB16_names.sql
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB16_names.sql

	# -------------------------
	# Test fixed set of queries
	# -------------------------
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB16.sql
}

@test "TGB17: OCTO813 : Test query with no GROUP BY or aggregate function but HAVING when WHERE returns no rows" {
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB17.sql
}

@test "TGB18: OCTO814 : Test that GROUP BY usage inside a sub query in outer query HAVING clause doesn't spinloops with no output" {
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB18.sql
}

@test "TGB19: OCTO767 : Test that in an inner query Group By of outer query column results in an error when select list has a inner query column usage" {
	load_fixture TGB19_errors.sql subtest novv
	verify_output TGB19_errors output.txt
}

@test "TGB20 : OCTO700/OCTO566 : Validate GroupBy column number and expression usage" {
	# TGB20_names.sql has 850+ queries so run only a fraction (10%) of them to cut down test runtime.
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB20_names.sql 0.10 "trim_trailing_zeroes"
	load_fixture customers.sql
	load_fixture customers.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries customers TGB20_customers.sql
	load_fixture nullnames.sql
	load_fixture nullnames.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries nullnames TGB20_nullnames.sql
}

@test "TGB21 : OCTO700/OCTO566 : Validate GroupBy column number and expression usage error cases" {
	load_fixture TGB21_errors.sql subtest novv
	verify_output TGB21_errors output.txt
	mv output.txt output_names.txt
	load_fixture customers.sql
	load_fixture customers.zwr
	load_fixture TGB21_errors_customers.sql subtest novv
	verify_output TGB21_errors_customers output.txt
}

@test "TGB22 : OCTO700/OCTO566 : Validate GroupBy column number and expression usage with functions" {
	load_fixture TGB22.sql subtest novv
	verify_output TGB22 output.txt
}

@test "TGB23 : OCTO632 : Validate GroupBy expressions with multiple argument function usage query from #632" {
	# Routine from Q6F.m is used in this subtest
	load_fixture TGB23.sql subtest novv
	verify_output TGB23 output.txt
}

@test "TGB24 : OCTO632 : Validate GroupBy expressions with multiple argument function usage returning multiple rows" {
	# Routines from Q6F.m is used in this subtest
	load_fixture TGB24.sql subtest novv
	verify_output TGB24 output.txt
}

@test "TGB25 : OCTO700/OCTO566 : Validate GroupBy expressions with subquery usage" {
	# Use the queries in this test when implementing subqueries in GroupBy
	load_fixture TGB25.sql subtest novv
	verify_output TGB25 output.txt
}

@test "TGB26 : OCTO700/OCTO566 : Validate group by expression and column number usages working with FUNCTIONS error cases." {
	load_fixture TGB26_errors.sql subtest novv
	verify_output TGB26_errors output.txt
}

@test "TGB27 : OCTO767 : Validate group by expression and column usage with outer query columns usages in inner query" {
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB27.sql "trim_trailing_zeros"
	load_fixture TGB27_errors.sql subtest novv
	verify_output TGB27_errors output.txt
}

@test "TGB28 : OCTO700/OCTO566 : Validate GroupBy column number and expression usage in northwind database" {
	load_fixture northwind.sql
	load_fixture northwind.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries northwind TGB28.sql
}

@test "TGB29 : OCTO700/OCTO566 : Test whether consecutive executions of literal based GROUP BY queries create different routines based on group_by_column_num value or not" {
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TGB29.sql
}


