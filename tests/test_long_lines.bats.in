#################################################################
#								#
# Copyright (c) 2019-2022 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture pastas.sql
  load_fixture pastas.zwr
  load_fixture names.sql
  load_fixture names.zwr
}

@test "TLL01 : long query line: inner join pastas order by pasta id ascending" {
  octo <<OCTO &> output.txt
select pastas.id, firstName, lastName, pastaName from names4 inner join pastas on pastas.pastaName = names4.favoritePasta order by pastas.id;
OCTO
  verify_output TLL01 output.txt
}

@test "TLL02 : long query line: inner join pastas order by pasta id ascending explicit" {
  octo <<OCTO &> output.txt
select pastas.id, firstName, lastName, pastaName from names4 inner join pastas on pastas.pastaName = names4.favoritePasta order by pastas.id asc;
OCTO
  verify_output TLL02 output.txt
}

@test "TLL03 : long query line: inner join pastas order by pasta id descending" {
  octo <<OCTO &> output.txt
select pastas.id, firstName, lastName, pastaName from names4 inner join pastas on pastas.pastaName = names4.favoritePasta order by pastas.id desc;
OCTO
  verify_output TLL03 output.txt
}

@test "TLL04 : octo -f on query greater than 32k characters in one query" {
  # On Rocky Linux on GCC 8.5, the default stack of 8M is not enough to run this query with ASAN due to Octo's use of recursion
  # This not an issue on Ubuntu with GCC 9.3
  # Raise the limit pre-emptively to 64M
  if [[ "@ENABLE_ASAN@" == "ON" ]]; then
    ulimit -s 65536
  fi
  export COLUMNS=35000 # increase column limit to avoid control characters
  yottadb -run gt32k^genlargequery
  run_octo_allow_error in.sql output.txt
  # No need to filter out long error messages since there are none
  verify_output TLL04 output.txt
}

@test "TLL05 : octo -f on series of queries greater than 32k characters" {
  # On Rocky Linux on GCC 8.5, the default stack of 8M is not enough to run this query with ASAN due to Octo's use of recursion
  # This not an issue on Ubuntu with GCC 9.3
  # Raise the limit pre-emptively to 64M
  if [[ "@ENABLE_ASAN@" == "ON" ]]; then
    ulimit -s 65536
  fi
  export COLUMNS=35000 # increase column limit to avoid control characters
  yottadb -run almost32k^genlargequery
  run_octo_allow_error in.sql output.txt
  cat output.txt | sed 's/111.*0 = 0/CONDITIONS/ig' | sed 's/^.*\^\^\^/HIGHLIGHT/ig' &> filteredOut.txt
  verify_output TLL05 filteredOut.txt
}

@test "TLL06 : octo query greater than 32k characters in one query" {
  # This test fails on CentOS due to line limit
  if [[ $( grep -i "centos" /etc/*-release ) ]]; then
    skip "Skipping test as it does not work on CentOS"
  fi
  export COLUMNS=35000 # increase column limit to avoid control characters
  yottadb -run gt32k^genlargequery
  run_octo_allow_error in.sql output.txt
  cat output.txt | sed 's/111.*$/CONDITIONS/ig' &> filteredOut.txt
  verify_output TLL06 filteredOut.txt
}

@test "TLL07 : octo series of queries greater than 32k characters" {
  # This test fails on CentOS due to line limit
  if [[ $( grep -i "centos" /etc/*-release ) ]]; then
    skip "Skipping test as it does not work on CentOS"
  fi
  export COLUMNS=35000 # increase column limit to avoid control characters
  yottadb -run almost32k^genlargequery
  run_octo_allow_error in.sql output.txt
  cat output.txt | sed 's/111.*0 = 0/CONDITIONS/ig' | sed 's/^.*\^\^\^/HIGHLIGHT/ig' &> filteredOut.txt
  # No need to filter out long error messages since there are none
  verify_output TLL07 filteredOut.txt
}

@test "TLL08 : octo -f on query that overlaps with itself when shifting the input buffer" {
  # This test fails on CentOS due to line limit
  if [[ $( grep -i "centos" /etc/*-release ) ]]; then
    skip "Skipping test as it does not work on CentOS"
  fi
  export COLUMNS=35000 # increase column limit to avoid control characters
  yottadb -run bufoverlap^genlargequery
  octo -f in.sql &> output.txt
  cat output.txt | sed 's/111.*$/CONDITIONS/ig' &> filteredOut.txt
  verify_output TLL08 filteredOut.txt
}

@test "TLL09 : octo on query that overlaps with itself when shifting the input buffer" {
  # This test fails on CentOS due to line limit
  if [[ $( grep -i "centos" /etc/*-release ) ]]; then
    skip "Skipping test as it does not work on CentOS"
  fi
  export COLUMNS=35000 # increase column limit to avoid control characters
  yottadb -run bufoverlap^genlargequery
  octo < in.sql &> output.txt
  cat output.txt | sed 's/111.*$/CONDITIONS/ig' &> filteredOut.txt
  verify_output TLL09 filteredOut.txt
}
