#################################################################
#								#
# Copyright (c) 2019-2022 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
  create_default_user
}

@test "TMU01 : memory usage remains constant across subsequent query executions" {
  if [[ @ENABLE_ASAN@ == "ON" ]]; then
    skip "This test cannot run correctly under ASAN as ASAN increases memory usage on each run"
  fi
  test_port=$(start_rocto 1444)
  cp @PROJECT_SOURCE_DIR@/tests/fixtures/report_memory_usage.sh .

  run_psql_expect get_memory_usage $test_port
  # Retrieve pid of rocto server process, i.e. the second one forked (psql drops the first as part of normal operation)
  # server_pid=grep "with pid" rocto.log | sed 's/^.*rocto server process forked with pid \([0-9]*\)/\1/' | cut -d$'\n' -f 2
  # ps -p $server_pid -o vsize | cut -d ' ' -f 2 | tr -d '\n'
  stop_rocto

  start_mem=$(sed -n '1p' < mem_usage.log)
  first_query_mem=$(sed -n '2p' < mem_usage.log)
  second_query_mem=$(sed -n '3p' < mem_usage.log)
  # Ensure memory usage increases for new queries
  [[ $start_mem != $first_query_mem ]]
  # Ensure memory usage doesn't increase for subsequent execution of same queries
  [[ $first_query_mem == $second_query_mem ]]
  # Ensure plans were properly generated for all queries in expect script
  grep select _ydboctoP*.m | cut -d";" -f 2 | sort_LC_ALL_C > output.txt 2>&1
  verify_output TMU01 output.txt
}

@test "TMU02 : memory usage remains constant across subsequent query executions using extended query protocol (JDBC)" {
  export disable_auto_upgrade=1	# Disable forced auto upgrade of binary definitions in case Octo was built with
  				# -DFORCE_BINARY_DEFINITION_AUTO_UPGRADE (happens in the `test-auto-upgrade` pipeline job).
				# This is because otherwise the test fails due to reference file issues.
				# It is okay to skip auto upgrade testing in this particular test.
  load_fixture northwind.sql
  load_fixture northwind.zwr
  test_port=$(start_rocto 1444 verbose)
  cp @PROJECT_SOURCE_DIR@/tests/fixtures/TMU0*.sql .
  for queryfile in $(ls TMU0*.sql); do
    run_java run_multi_query $test_port "${queryfile%.*}" &> output.txt
  done

  stop_rocto
  grep "Memory usage" rocto.log > mem_messages.log

  set1_mem=$(sed -n '1p' < mem_messages.log | cut -d' ' -f 12)
  set2_mem=$(sed -n '2p' < mem_messages.log | cut -d' ' -f 12)
  set3_mem=$(sed -n '3p' < mem_messages.log | cut -d' ' -f 12)
  average=$(( ($set1_mem + $set2_mem) / 2))
  set1_diff=$(( $average - $set1_mem ))
  set2_diff=$(( $average - $set2_mem ))
  set3_diff=$(( $average - $set3_mem ))
  set1_diff=${set1_diff#-}	# Remove sign, if any
  set2_diff=${set2_diff#-}	# Remove sign, if any
  set3_diff=${set3_diff#-}	# Remove sign, if any

  echo "Average: $average" >> mem_usage.log
  echo "TMU02a: $set1_mem" >> mem_usage.log
  echo "TMU02b: $set2_mem" >> mem_usage.log
  echo "TMU02c: $set3_mem" >> mem_usage.log

  # Ensure difference in memory usage is less than 10% across increasingly large numbers of queries
  [[ $(( ($set1_diff / $average) * 100 )) -lt 10 ]]
  [[ $(( ($set2_diff / $average) * 100 )) -lt 10 ]]
  [[ $(( ($set3_diff / $average) * 100 )) -lt 10 ]]

  # Check local variable nodes in use at process exit, excluding the following variable items:
  #	1. Binary data stored in %ydboctoloadedschemas
  #	2. Secret key information used for CancelRequests
  #	3. TimeZone information
  #	4. rocto.log itself
  #	5. runtime parameter settings (stored under %ydboctoocto("settings"))
  #	6. runtime parameter cross references (stored under %ydboctoxref("PG_SETTINGS","SETTING"))
  grep "\%ydbocto" rocto.log | grep -Ev "loadedschemas|SecretKeyList|TimeZone|Binary file rocto.log|settings|PG_SETTINGS" | sort_LC_ALL_C &> node_usage.log
  sed -i 's/%ydboctosession(1,"variables","user")=".*"/%ydboctosession(1,"variables","user")="USER"/' node_usage.log
  sed -i 's/%ydboctosession("user")=".*"/%ydboctosession("user")="USER"/' node_usage.log
  verify_output TMU02 node_usage.log
}
