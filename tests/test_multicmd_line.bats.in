#################################################################
#								#
# Copyright (c) 2019-2023 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

teardown() {
  corecheck
}

@test "TML000 : run two queries on the same line" {
  octo >& output.txt <<OCTO
select firstname from names limit 1; select lastname from names limit 1;
OCTO
  verify_output TML000 output.txt noinfo nodebug
}

@test "TML001 : complete a dangling query on the same line" {
  octo >& output.txt <<OCTO
select firstname from names limit 1; select lastname from
names limit 1;
OCTO
  verify_output TML001 output.txt noinfo nodebug
}

@test "TML002 : test that -vv only reports the current parsed query" {
  octo -vv >& output.txt <<OCTO
select firstname from names limit 1; select lastname from names limit 1;
select * from names limit 1;
;
OCTO
  verify_output TML002 output.txt nodebug
}

@test "TML003 : test that trailing white space is trimmed from commands so that -vv reports only the current parsed query" {
# the first line has 5 spaces after it
# to prevent white space stripping this must be echoed in to a temp file
echo "select firstname from names limit 1;     " > input.in
echo "select lastname from names limit 1;" >> input.in
  octo -vv >& output.txt < input.in
  verify_output TML003 output.txt nodebug
}

@test "TML004 : test that input buffer is cleared on an invalid parse" {
  run_octo_allow_error TML004.sql output.txt -vv
  verify_output TML004 output.txt nodebug
}

@test "TML005 : test that -vv reports dangling queries with blank lines" {
  octo -vv >& output.txt <<OCTO
select firstname from names




limit 1;
OCTO
  verify_output TML005 output.txt nodebug
}

@test "TML006 : test that a correct query after an error still runs" {
  run_octo_allow_error TML006.sql output.txt -vv
  verify_output TML006 output.txt nodebug
}

@test "TML007 : test that a correct query after a multiline error still runs" {
  run_octo_allow_error TML007.sql output.txt -vv
  verify_output TML007 output.txt nodebug
}

@test "TML008 : run two queries on the same line with no space between" {
  octo >& output.txt <<OCTO
select firstname from names limit 1;select lastname from names limit 1;
OCTO
  verify_output TML008 output.txt noinfo nodebug
}

@test "TML009 : test that -vv only reports the current parsed query with no space between" {
  octo -vv >& output.txt <<OCTO
select firstname from names limit 1;select lastname from names limit 1;
OCTO
  verify_output TML009 output.txt nodebug
}

@test "TML010 : generated code header for multiquery lines lists only the correct query" {
  octo <<OCTO 2>&1 | tee output.txt
select firstname from names limit 1; select lastname from names limit 1;
OCTO
  cat _ydboctoP*.m >> output.txt
  verify_output TML010 output.txt
}

@test "TML011 : generated code header for multiquery lines lists only the correct query using octo -f" {
  cat <<CAT >> input.sql
select firstname from names limit 1; select lastname from names limit 1;
CAT
  octo -f input.sql 2>&1 | tee output.txt
  cat _ydboctoP*.m >> output.txt
  verify_output TML011 output.txt
}

@test "TML012 : generated code header, -vv for very ugly multiquery line" {
  cat <<CAT >> input.sql
     select
     'a'
     from
     names;     select
     'b'
     from
     names;
CAT
  octo -vv -f input.sql 2>&1 | tee output.txt
  cat _ydboctoP*.m >> output.txt
  verify_output TML012 output.txt
}
