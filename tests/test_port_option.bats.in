#################################################################
#								#
# Copyright (c) 2019-2022 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

teardown() {
  stop_rocto
}

@test "TPO01 : call rocto with port number < 0" {
  run rocto -p -500
  [[ "$status" == "1" ]]
  [[ $output =~ "Please use a port number between 0 and 65535" ]]
}

@test "TPO02 : call rocto with port number > 65535" {
  run rocto -p 70000
  [[ "$status" == "1" ]]
  [[ $output =~ "Please use a port number between 0 and 65535" ]]
}

@test "TPO03 : call rocto with default port" {
  test_port=$(start_rocto)
  # Verify default rocto port is 1337
  [[ "$(grep -c "rocto started on port 1337" rocto.log)" == "1" ]]
}

@test "TPO04 : call rocto with port from config file" {
    test_port=$(find_open_port 1400)
    cat <<OCTO &> octo.conf
rocto: {
  port: $test_port;
}
OCTO
  # Avoid calling the find_open_port function for this test case
  rocto -vvv &> rocto.log &
  echo $! > rocto.pid
  while [[ ! -e rocto.log || "$(grep -c "rocto started" rocto.log)" == "0" ]]; do
    sleep .1s
  done
  [[ "$(grep -c "rocto started on port $test_port" rocto.log)" == "1" ]]
}

@test "TPO05 : ensure rocto -p supercedes default" {
  test_port=$(start_rocto 1401)
  [[ "$(grep -c "rocto started on port $test_port" rocto.log)" == "1" ]]
}

@test "TPO06 : ensure rocto -p supercedes config file" {
    cat <<OCTO &> octo.conf
rocto: {
  port: 1400;
}
OCTO
  test_port=$(start_rocto 1401)
  sleep 1
  [[ "$(grep -c "rocto started on port $test_port" rocto.log)" == "1" ]]
}
