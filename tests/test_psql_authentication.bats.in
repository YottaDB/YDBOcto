#################################################################
#								#
# Copyright (c) 2019-2023 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
  test_port=$(start_rocto 1338)
}

teardown() {
  stop_rocto
  corecheck
}

@test "TPA00 : test psql authentication with bad password" {
  create_user leibniz tester
  run run_psql_auth leibniz tested $test_port <<OCTO
SELECT * FROM names;
OCTO
  [[ "$status" -eq 2 ]]
  echo $output 2>&1 | tee output.txt
  [[ "$output" =~ "password doesn't match stored value" ]]
  delete_users leibniz
}

@test "TPA01 : test psql authentication with non-existent user" {
  create_user leibniz tester
  run run_psql_auth bobby cereal $test_port <<OCTO
SELECT * FROM names;
OCTO
  echo $output 2>&1 | tee output.txt
  [[ "$status" -eq 2 ]]
  [[ "$output" =~ "failed to retrieve user info for user bobby from database" ]]
  delete_users leibniz
}

@test "TPA02 : test psql authentication with one user" {
  create_user leibniz tester
  run_psql_auth leibniz tester $test_port <<OCTO 2>&1 | tee output.txt
SELECT * FROM names;
OCTO
  delete_users leibniz
  [[ "$(grep -c -E "Zero.\+|Cool" output.txt)" == "2" ]]
}

@test "TPA03 : test psql authentication with two users" {
  create_user leibniz tester
  run_psql_auth leibniz tester $test_port <<OCTO 2>&1 | tee output.txt
SELECT * FROM names;
OCTO
  [[ "$(grep -c -E "Zero.\+|Cool" output.txt)" == "2" ]]

  create_user bobby bilco
  run_psql_auth bobby bilco $test_port <<OCTO 2>&1 | tee output.txt
SELECT * FROM names;
OCTO
  delete_users leibniz bobby
  [[ "$(grep -c -E "Zero.\+|Cool" output.txt)" == "2" ]]
}

@test "TPA04 : test psql authentication with three users" {
  create_user leibniz tester
  run_psql_auth leibniz tester $test_port <<OCTO 2>&1 | tee output.txt
SELECT * FROM names;
OCTO
  [[ "$(grep -c -E "Zero.\+|Cool" output.txt)" == "2" ]]

  create_user bobby bilco
  run_psql_auth bobby bilco $test_port <<OCTO 2>&1 | tee output.txt
SELECT * FROM names;
OCTO
  [[ "$(grep -c -E "Zero.\+|Cool" output.txt)" == "2" ]]

  create_user suzy quartz
  run_psql_auth bobby bilco $test_port <<OCTO 2>&1 | tee output.txt
SELECT * FROM names;
OCTO
  delete_users leibniz bobby suzy
  [[ "$(grep -c -E "Zero.\+|Cool" output.txt)" == "2" ]]
}
