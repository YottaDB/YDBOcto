#################################################################
#								#
# Copyright (c) 2019-2021 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
	init_test
	createdb
	load_fixture names.sql
	load_fixture names.zwr
	load_fixture default_user.zwr
	test_port=$(start_rocto 1337)
	setup_go
}

teardown() {
	stop_rocto
}

@test "TPGC000 : select wildcard columns" {
	run_go simple_go_select_all $test_port 2>&1 | tee output.txt
	verify_output TPGC000 output.txt
}

@test "TPGC001 : fetch column data types" {
	load_fixture northwind.sql
	load_fixture northwind.zwr
	run_go get_column_information $test_port 2>&1 | tee output.txt
	# Not crashing is success for this test
	# There is a column in the data types output that contains what appears to be a
	# hex address that changes across subsequent test runs. The 'striphex' option is used to remove this.
	verify_output TPGC001 output.txt striphex
}

@test "TPGC002 : rocto sends ParameterStatus messages" {
	# Can reuse previous Go test file as query output doesn't matter for this test
	run_go simple_go_select_all $test_port 2>&1 | tee output.txt
	# Need to validate INFO messages for ParameterStatus messages,
	# but DEBUGs make outrefs needlessly large
	cat rocto.log >> output.txt
	verify_output TPGC002 output.txt psql nodebug noport
}

@test "TPGC003 : send ParameterDescriptions" {
	stop_rocto
	test_port=$(start_rocto 1337 verbose)
	run_go send_parameter_description $test_port 2>&1 | tee output.txt
	grep "sent ParameterDescription for prepared statement" rocto.log >> output.txt
	verify_output TPGC003 output.txt psql
}

@test "TPGC004 : send prepared statement with multiple parameters" {
	run_go bind_multiple_parameters $test_port 2>&1 | tee output.txt
	# Confirm error reported for unsupported $1 = $2 syntax
	grep "Feature not implemented: comparison between literal parameters" rocto.log >> output.txt
	verify_output TPGC004 output.txt psql
}

@test "TPGC005 : parse_context->is_bind_parm array correctly resizes for large numbers of parameters" {
	stop_rocto
	test_port=$(start_rocto 1337 verbose)
	run_go TPGC005 $test_port 2>&1 | tee output.txt
	grep -E "Memory doubled|Memory expanded" rocto.log >> output.txt
	verify_output TPGC005 output.txt psql
}

@test "TPGC006 : result row format handling (i.e. 'text' vs. 'binary' formats)" {
	run_go request_various_row_formats $test_port 2>&1 | tee output.txt
	verify_output TPGC006 output.txt psql
}

@test "TPGC007 : Test INSERT INTO using extended query protocol" {
	run_go insert_into_extended_query_protocol $test_port 2>&1 | tee output.txt
	verify_output TPGC007 output.txt
}

@test "TPGC008 : Test DELETE FROM using extended query protocol" {
	run_go delete_from_extended_query_protocol $test_port 2>&1 | tee output.txt
	verify_output TPGC008 output.txt
}

@test "TPGC009 : Test UPDATE using extended query protocol" {
	run_go update_extended_query_protocol $test_port 2>&1 | tee output.txt
	verify_output TPGC009 output.txt
}
