#################################################################
#								#
# Copyright (c) 2019-2021 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

@test "TSO01 : UNION returns combined rows with no duplicates" {
  load_fixture TSO01.sql subtest novv
  verify_output TSO01 output.txt
}

@test "TSO02 : UNION ALL returns combined rows with duplicates" {
  load_fixture TSO02.sql subtest novv
  verify_output TSO02 output.txt
}

@test "TSO03 : INTERSECT provides items in both sets, with duplicates removed" {
  load_fixture TSO03.sql subtest novv
  verify_output TSO03 output.txt
}

@test "TSO04 : INTERSECT ALL provides items in both sets, with duplicates from both sets" {
  load_fixture TSO04.sql subtest novv
  verify_output TSO04 output.txt
}

@test "TSO05 : EXCEPT removes items from second set in the first set" {
  load_fixture TSO05.sql subtest novv
  verify_output TSO05 output.txt
}

@test "TSO06 : EXCEPT ALL removes the same count of items from the first set as exist in the second set" {
  load_fixture TSO06.sql subtest novv
  verify_output TSO06 output.txt
}

@test "TSO07 : Simulate outer join using UNION" {
  load_fixture TSO07.sql subtest novv
  verify_output TSO07 output.txt
}

@test "TSO08 : UNION of tables with different numbers of keys" {
  load_fixture TSO08.sql subtest novv
  verify_output TSO08 output.txt
}

@test "TSO09 : UNION of SELECT and another SET operation" {
  load_fixture TSO09.sql subtest novv
  verify_output TSO09 output.txt
}

@test "TSO10 : OCTO269 : Verify randomly generated queries with UNION/EXCEPT/INTERSECT/UNION ALL/EXCEPT ALL/INTERSECT ALL usages against Postgres" {
  load_fixture easynames.sql
  load_fixture easynames.zwr
  # Next test with complicated randomly generated queries; Crosscheck Octo output against Postgres
  yottadb -run ^gensetqueries	# this generates a max of 20 queries settest01.sql, settest02.sql ...
  # Run using Octo against each of the generated queries
  for file in settest*.sql
  do
    run_query_in_octo_and_postgres_and_crosscheck_multiple_queries easynames $file
  done
}

@test "TSO11 : OCTO273/OCTO326/OCTO327/OCTO328" {
  load_fixture TSO11.sql subtest novv
  verify_output TSO11 output.txt
}

@test "TSO12 : OCTO268 : Check if each query in the UNION operator has the same number and/or type of columns" {
  load_fixture TSO12.sql subtest novv
  verify_output TSO12 output.txt
}

@test "TSO13 : OCTO440 : UNION/INTERSECT/EXCEPT does not issue column type mismatch error in some cases" {
  # This test has a few queries that use the Northwind schema so load that too.
  load_fixture northwind.sql
  load_fixture northwind.zwr
  load_fixture TSO13.sql subtest novv
  verify_output TSO13 output.txt
}

@test "TSO14 : OCTO449 : Incorrect results from UNION/INTERSECT/EXCEPT when inside IN operator and empty string is in the list" {
  run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TSO14.sql
}

@test "TSO15 : OCTO311 : Test randomly generated queries using UNION/INTERSECT/EXCEPT and NULL values" {
  # Next test with complicated randomly generated queries; Crosscheck Octo output against Postgres
  yottadb -run ^TSO15 > TSO15.sql	# TSO15.sql will contain many with UNION/INTERSECT/EXCEPT/NULL usages
  run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TSO15.sql
}

@test "TSO16 : OCTO727 : Test SET operations whose operands end up as deferred physical plans" {
  run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TSO16.sql
}
