#################################################################
#								#
# Copyright (c) 2019-2023 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
	init_test
	createdb
	test_port=$(start_rocto 1344)
}

teardown() {
	stop_rocto
	corecheck
}

sqllogic_test() {
	num=$1
	fraction=$2

	if [ "$fraction" = "" ]; then
		fraction=1
	fi

	fixtures=@PROJECT_SOURCE_DIR@/tests/fixtures
	$fixtures/sqllogic/filter.py $num $fraction >/dev/null
	if ! [ -e $fixtures/postgres-sqllogic$num.sql ]; then
		$fixtures/sqllogic/insert.py $num >/dev/null
		# Remove GLOBAL subexpressions from CREATE TABLE statements, since postgres does not understand them.
		sed 's/) GLOBAL .*;$/);/' sqllogic.sql > $fixtures/postgres-sqllogic$num.sql
		# Remove CREATE INDEX, INSERT INTO, and DROP TABLE statements, since Octo does not understand them.
		sed '/^INSERT INTO\|CREATE INDEX\|DROP TABLE/d' sqllogic$num.sql > $fixtures/sqllogic$num.sql
		cp sqllogic$num.zwr $fixtures
	fi
	load_fixture sqllogic$num.sql
	load_fixture sqllogic$num.zwr
	file=tests.sql
	skip=false
	# The following files use more than 2 GB of memory and cause the pipeline to time out.
	# TODO:Skip them for now. These can be re-enabled once Octo uses fewer resources for many-table JOINs.
	for too_big in $skipped_files; do
		if [ test$num.sql = $too_big ]; then
			skip=true
			break
		fi
	done
	if [ $skip = true ]; then
		echo "skipping $file because it uses too much memory"
		continue
	fi
	echo "testing $file"
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries sqllogic$num $file
}

# To keep the test times reasonable, only a random sample of tests are run.
# The percentage of tests is chosen so that tests take approximately the same amount of time to run.
# The tests take the following time at time of writing:
# TS01: 17s
# TS02: 18s
# TS03: 20s
# TS04: 15s
# TS05: 23s
@test "TS01: select1 test cases from https://github.com/shivarajugowda/jdbcSQLTest/blob/master/resources/sqllogictest/select1.test" {
	if $is_rhel7; then
		# On RHEL7 systems, Postgres version is 9.2.2 which has a different output for various queries in this test
		# compared to newer Postgres versions on other Linux distributions (which is what Octo output matches).
		# Therefore skip this test on RHEL7.
		skip
	fi
	sqllogic_test 1 .1
}

@test "TS02: select2 test cases from https://github.com/shivarajugowda/jdbcSQLTest/blob/master/resources/sqllogictest/select2.test" {
	sqllogic_test 2 .1
}

@test "TS03: select3 test cases from https://github.com/shivarajugowda/jdbcSQLTest/blob/master/resources/sqllogictest/select3.test" {
	sqllogic_test 3 .03
}

@test "TS04: select4 test cases from https://github.com/shivarajugowda/jdbcSQLTest/blob/master/resources/sqllogictest/select4.test" {
	sqllogic_test 4 .03
}

@test "TS05: select5 test cases from https://github.com/shivarajugowda/jdbcSQLTest/blob/master/resources/sqllogictest/select5.test" {
	sqllogic_test 5 .1
}
