#################################################################
#								#
# Copyright (c) 2021-2022 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
}

teardown() {
	# In case a subtest started rocto, stop it before moving on to the next subtest
	stop_rocto
}

@test "TTA001 : OCTO759 : COUNT(DISTINCT TABLENAME.ASTERISK) produces incorrect results in some cases : nullcharnames database" {
	load_fixture nullcharnames.sql
	load_fixture nullcharnames.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries nullcharnames TTA001.sql
}

@test "TTA002 : OCTO759 : COUNT(DISTINCT TABLENAME.ASTERISK) produces incorrect results in some cases : names database" {
	load_fixture names.sql
	load_fixture names.zwr
	# TTA002.sql has 250+ queries. To reduce test runtime only run a small random fraction (20%) of that.
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TTA002.sql 0.20
}

@test "TTA003 : OCTO759 : TABLENAME.ASTERISK in GROUP BY should not be expanded to list of table columns : Error scenarios" {
	load_fixture names.sql
	load_fixture names.zwr
	load_fixture names1col.sql
	load_fixture names1col.zwr
	load_fixture customers.sql
	load_fixture customers.zwr
	load_fixture TTA003.sql subtest novv
	verify_output TTA003 output.txt
}

@test "TTA004 : OCTO759 : TABLENAME.ASTERISK produces incorrect results when used with GROUP BY and LEFT JOIN : nullcharnames database" {
	load_fixture nullcharnames.sql
	load_fixture nullcharnames.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries nullcharnames TTA004.sql
}

@test "TTA005 : OCTO759 : TABLENAME.ASTERISK produces incorrect results when used with GROUP BY and LEFT JOIN : names database" {
	# Start rocto with --allowschemachanges due to the presence of DROP TABLE commands.
	test_port=$(start_rocto 1400 -aw)
	load_fixture names.sql
	load_fixture names.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TTA005.sql
	# Delete TTA005* tables from Postgres database as it can confuse later runs of other tests
	# (e.g. hello_db/HDB01 subtest etc.) in case we error out in the later steps of this subtest
	psql names -c 'drop table if exists TTA005A; drop table if exists TTA005B;' >& postgres.drop_table_TTA005.out
}

@test "TTA006 : OCTO759 : TABLENAME.ASTERISK produces incorrect results when used with ORDER BY and LEFT JOIN : nullnames database" {
	load_fixture nullnames.sql
	load_fixture nullnames.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries nullnames TTA006.sql "trim_trailing_zeroes"
}

@test "TTA007 : OCTO386/OCTO797/OCTO798/OCTO799 : TABLENAME.ASTERISK doesn't cause assert failures" {
	load_fixture names.sql
	load_fixture names.zwr
	load_fixture TTA007.sql subtest novv
	verify_output TTA007 output.txt
}

@test "TTA008 : OCTO386/OCTO797/OCTO798/OCTO799 : TABLENAME.ASTERISK doesn't cause assert failures with greatest/least/nullif/coalesce/CASE/IN/BETWEEN usages" {
	# The test should be enabled after OCTO797/OCTO798/OCTO799 is implemented
	skip
	load_fixture names.sql
	load_fixture names.zwr
	load_fixture TTA008.sql subtest novv
	verify_output TTA008 output.txt
}

@test "TTA009 : OCTO799 : TABLENAME.ASTERISK works with IN/NOT IN operation" {
	load_fixture names.sql
	load_fixture names.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TTA009.sql
	load_fixture TTA009_errors.sql subtest novv
	verify_output TTA009_errors output.txt
}

@test "TTA010 : OCTO799 : TABLENAME.ASTERISK works with binary operation" {
	load_fixture names.sql
	load_fixture names.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TTA010.sql
}

@test "TTA011 : OCTO830 : Edge case with TABLENAME.ASTERISK in GROUP BY and ORDER BY" {
	load_fixture names.sql
	load_fixture names.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TTA011.sql "trim_trailing_zeroes"
	load_fixture TTA011_errors.sql subtest novv
	verify_output TTA011_errors output.txt
}

@test "TTA012 : OCTO833 : Validate binary operation working with TABLENAME.ASTERISK operand" {
	load_fixture names.sql
	load_fixture names.zwr
	run_query_in_octo_and_postgres_and_crosscheck_multiple_queries names TTA012.sql "trim_trailing_zeroes"
	# Following validates that `table.*` binary operation error cases
	load_fixture TTA012_errors.sql subtest novv
	verify_output TTA012_errors output.txt
}
